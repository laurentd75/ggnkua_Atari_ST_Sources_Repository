REM GFA BASIC TIMING TEST
FULLW 1
TITLEW #1,"GFA BASIC TIMING TEST"
OPENW 1
LPRINT "GFA BASIC TIMING TEST"
tresult#=1
tmstart#=TIMER
FOR lp|=1 TO 500                        !New one byte integer
  IF DIV(lp|,2)=lp|/2 THEN
    mlt#=1
  ELSE
    mlt#=-1
  ENDIF
  tresult#=tresult#+mlt#/(ADD(MUL(lp|,2),1))       !New nested functions
NEXT lp|
tpi#=tresult#*4
tmstop#=TIMER
tmdiff#=(tmstop#-tmstart#)/200*60  !convert to jiffies like other times
PRINT AT(1,1);"The computed value of pi is"';tpi#
PRINT "Time necessary for pi calculation is"'tmdiff#
LPRINT "The computed value of pi is"'tpi#
LPRINT "Time necessary for pi calculation is"'tmdiff#
REM compute the sine function in a loop
tresult#=0
tmstart#=TIMER
FOR lp|=1 TO 100
  tresult#=tresult#+SIN(lp|)
NEXT lp|
tmstop#=TIMER
tmdiff#=(tmstop#-tmstart#)/200*60
PRINT AT(1,3);"Computed sum of sines is"'tresult#
PRINT "Time necessary to calc sum of sines is"'tmdiff#
LPRINT "Computed sum of sines is"'tresult#
LPRINT "Time necessary to calc sum of sines is"'tmdiff#
REM compute the sum of square roots
tresult#=0
tmstart#=TIMER
FOR lp|=1 TO 100
  tresult#=tresult#+SQR(lp|)
NEXT lp|
tmstop#=TIMER
tmdiff#=(tmstop#-tmstart#)/200*60
PRINT AT(1,5);"Sum of square roots is"'tresult#
PRINT "Time necessary to sum square roots is"'tmdiff#
LPRINT "Sum of square roots is"'tresult#
LPRINT "Time necessary to sum square roots is"'tmdiff#
REM count up using real number
result#=0
tmstart#=TIMER
FOR lp#=1 TO 5000
  INC result#
NEXT lp#
tmstop#=TIMER
tmdiff#=(tmstop#-tmstart#)/200*60
PRINT AT(1,7);"Time to count (Floating point) to 5000 is"'tmdiff#
LPRINT "Time to count (Floating point) to 5000 is"'tmdiff#
REM count up using 4-byte integers
result%=0
tmstart#=TIMER
FOR lp%=1 TO 5000
  INC result%
NEXT lp%
tmstop#=TIMER
tmdiff#=(tmstop#-tmstart#)/200*60
PRINT AT(1,8);"Time to count (4-Byte integer) to 5000 is"'tmdiff#
LPRINT "Time to count (4-Byte integer) to 5000 is"'tmdiff#
REM count up using word integers
result%=0
tmstart#=TIMER
FOR lp&=1 TO 5000
  INC result&
NEXT lp&
tmstop#=TIMER
tmdiff#=(tmstop#-tmstart#)/200*60
PRINT AT(1,9);"Time to count (2-Byte (Word) integer) to 5000 is"'tmdiff#
LPRINT "Time to count (integer) to 5000 is"'tmdiff#
REM Time to do some gosubbing
tmstart#=TIMER
FOR lp&=1 TO 1000
  GOSUB dummyprocedure
NEXT lp&
tmstop#=TIMER
tmdiff#=(tmstop#-tmstart#)/200*60
PRINT AT(1,10);"Time to gosub 1000 times is"'tmdiff#
LPRINT "Time to gosub 1000 times is"'tmdiff#
REM a little string handling music
DIM dummy$(255),xx$(255),yy$(255)
dummy$=STRING$(255,"A")
tmstart#=TIMER
FOR lp|=1 TO 255
  MID$(xx$,lp|,1)=MID$(dummy$,lp|,1)
  MID$(yy$,lp|,1)=MID$(dummy$,lp|,1)
NEXT lp|
tmstop#=TIMER
tmdiff#=(tmstop#-tmstart#)/200*60
PRINT AT(1,11);"Time to do 512 string manipulations is"'tmdiff#
LPRINT "Time to do 512 string manipulations is"'tmdiff#
REM some disk access, just for fun
tmstart#=TIMER
OPEN "O",#1,"A:test.dat"
FOR lp#=1 TO 1000
  PRINT #1,lp#
NEXT lp#
PRINT #1,dummy$
PRINT #1,dummy$
tmstop#=TIMER
tmdiff#=(tmstop#-tmstart#)/200*60
CLOSE #1
PRINT AT(1,12);"Time to do disk access is"'tmdiff#
LPRINT "Time to do disk access is"'tmdiff#
PRINT AT(6,14);"<< Press Any Key >>"
~INP(2)
PROCEDURE dummyprocedure
  REM nothing here!
RETURN
