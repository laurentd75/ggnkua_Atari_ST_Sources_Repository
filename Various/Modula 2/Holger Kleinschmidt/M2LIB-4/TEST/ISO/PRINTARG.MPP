MODULE PrintArgs;
__IMP_SWITCHES__
__DEBUG__
#ifdef HM2
#ifdef __LONG_WHOLE__
(*$!i+: Modul muss mit $i- uebersetzt werden! *)
(*$!w+: Modul muss mit $w- uebersetzt werden! *)
#else
(*$!i-: Modul muss mit $i+ uebersetzt werden! *)
(*$!w-: Modul muss mit $w+ uebersetzt werden! *)
#endif
#endif

(* Ermittelt die Programmargumente mit ISO-Funktionen und gibt sie aus.
 *
 * 05-Jan-95, Holger Kleinschmidt
 *)

#if (defined MM2)
(*$E MTP *)
#if (defined __DEBUG_CODE__)
IMPORT TOSDebug;
#endif
#endif

IMPORT STextIO, TextIO, IOResult, ProgramArgs;
(* Die folgende Zeile sollte eigentlich nicht noetig sein, aber manchen
 * Compilern (z.B. LPR) macht der qualifizierte Import bereits reexportierter
 * Aufzaehlungstypen Schwierigkeiten...
 *)
FROM IOResult IMPORT
(* TYPE *) ReadResults;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

VAR
  c   : CHAR;
  buf : ARRAY [0..10] OF CHAR;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

BEGIN
 STextIO.WriteString("Programmargumente:"); STextIO.WriteLn;
 STextIO.WriteString("=================="); STextIO.WriteLn;
 WHILE ProgramArgs.IsArgPresent() DO
   LOOP
     TextIO.ReadString(ProgramArgs.ArgChan(), buf);
     CASE IOResult.ReadResult(ProgramArgs.ArgChan()) OF
       endOfLine:   STextIO.WriteString("[- eol -]");
                    STextIO.WriteLn;
                    TextIO.SkipLine(ProgramArgs.ArgChan());
      |endOfInput:  EXIT;
     ELSE           STextIO.WriteString(buf);
     END;
   END; (* LOOP *)
   STextIO.WriteLn;
   STextIO.WriteString("------------------"); STextIO.WriteLn;
   ProgramArgs.NextArg;
 END;
END PrintArgs.
