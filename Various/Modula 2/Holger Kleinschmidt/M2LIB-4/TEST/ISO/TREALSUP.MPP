MODULE TRealSupport;
__IMP_SWITCHES__
__DEBUG__
#ifdef HM2
#ifdef __LONG_WHOLE__
(*$!i+: Modul muss mit $i- uebersetzt werden! *)
(*$!w+: Modul muss mit $w- uebersetzt werden! *)
#else
(*$!i-: Modul muss mit $i+ uebersetzt werden! *)
(*$!w-: Modul muss mit $w+ uebersetzt werden! *)
#endif
#endif

(* 05-Jan-95, Holger Kleinschmidt *)

VAL_INTRINSIC
CAST_IMPORT

#if (defined MM2)
IMPORT GEMDOSIO; (*$E MOS *)
#if (defined __DEBUG_CODE__)
IMPORT TOSDebug;
#endif
#endif

FROM PORTAB IMPORT
(* TYPE *) SIGNED, UNSIGNED;

FROM RealSupport IMPORT fmod, floor, ceil, int, trunc, real, float, entier,
                        frexp, ldexp, modf;

FROM TMathUtil IMPORT
(* VAR  *) MaxErr, Digs, procR2I, procR2C, procI2R, procC2R, procR2R,
           procRR2R, procname,
(* PROC *) TestR2I, TestR2C, TestI2R, TestC2R, TestR2R, TestRR2R, WriteErr;

FROM InOut IMPORT WriteString, Write, WriteLn, WriteInt;
FROM pOUT IMPORT PutInt, PutCard, PutReal;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

VAR
  x : REAL;
  e : INTEGER;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

BEGIN (* TRealSupport *)
 MaxErr := 1.0E-7;

 procname := "int";
 procR2I  := int;
 TestR2I(-100000.0, LIC(-100000));
 TestR2I(-1.0, LIC(-1));
 TestR2I(1.0, LIC(1));
 TestR2I(100000.0, LIC(100000));
 WriteLn;

 procname := "entier";
 procR2I  := entier;
 TestR2I(-100000.0, LIC(-100000));
 TestR2I(-1.0, LIC(-1));
 TestR2I(-1.5, LIC(-2));
 TestR2I(1.0, LIC(1));
 TestR2I(1.5, LIC(1));
 TestR2I(100000.0, LIC(100000));
 WriteLn;

 procname := "trunc";
 procR2C  := trunc;
 TestR2C(100000.0, LC(100000));
 WriteLn;

 procname := "real";
 procI2R  := real;
 TestI2R(LIC(-100000), -100000.0);
 TestI2R(LIC(-1), -1.0);
 TestI2R(LIC(0), 0.0);
 TestI2R(LIC(1), 1.0);
 TestI2R(LIC(100000), 100000.0);
 WriteLn;

 procname := "float";
 procC2R  := float;
 TestC2R(LC(0), 0.0);
 TestC2R(LC(100000), 100000.0);
 WriteLn;

 procname := "floor";
 procR2R  := floor;
 TestR2R(1.5, 1.0);
 TestR2R(1.0, 1.0);
 TestR2R(-1.0, -1.0);
 TestR2R(-1.5, -2.0);
 WriteLn;

 procname := "ceil";
 procR2R  := ceil;
 TestR2R(1.5, 2.0);
 TestR2R(1.0, 1.0);
 TestR2R(-1.0, -1.0);
 TestR2R(-1.5, -1.0);
 WriteLn;

 PutReal(frexp(2.5, e), Digs); WriteString(" * 2^"); WriteInt(e, 1); WriteLn;
 PutReal(ldexp(0.5, 4), Digs); WriteLn;
 PutReal(modf(2.5, x), Digs); WriteString(" + "); PutReal(x, Digs); WriteLn;

 procname := "fmod";
 procRR2R := fmod;
 TestRR2R(32.0, 15.0, 2.0);
 TestRR2R(-32.0, 15.0, -2.0);
 TestRR2R(32.0, -15.0, 2.0);
 TestRR2R(-32.0, -15.0, -2.0);
END TRealSupport.
