MODULE TCharClass;
__IMP_SWITCHES__
__DEBUG__
#ifdef HM2
#ifdef __LONG_WHOLE__
(*$!i+: Modul muss mit $i- uebersetzt werden! *)
(*$!w+: Modul muss mit $w- uebersetzt werden! *)
#else
(*$!i-: Modul muss mit $i+ uebersetzt werden! *)
(*$!w-: Modul muss mit $w+ uebersetzt werden! *)
#endif
#endif

(* Tests fuer ISO-CharClass.
 *
 * 05-Aug-96, Holger Kleinschmidt
 *)

VAL_INTRINSIC

#if (defined MM2)
(*$E MOS *)
#if (defined __DEBUG_CODE__)
IMPORT TOSDebug;
#endif
#endif

FROM PORTAB IMPORT
(* CONST*) MINCHAR, MAXCHAR,
(* TYPE *) UNSIGNEDLONG;

FROM CharClass IMPORT
(* PROC *) IsNumeric, IsLetter, IsUpper, IsLower, IsControl, IsWhiteSpace;

FROM DosIO IMPORT
(* PROC *) Write, WriteString, WriteCard, WriteLn;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

TYPE
  CharClassTest = PROCEDURE(CHAR): BOOLEAN;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

PROCEDURE WriteCClass ((* EIN/ -- *) REF proc : ARRAY OF CHAR;
                       (* EIN/ -- *)     test : CharClassTest );

VAR ch : CHAR;

BEGIN
 WriteString(proc); WriteLn;
 WriteString("      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5");WriteLn;
 WriteString("      ===============================");
 FOR ch := MINCHAR TO MAXCHAR DO
   IF ORD(ch) MOD 16 = 0 THEN
     WriteLn;
     WriteCard(VAL(UNSIGNEDLONG,ORD(ch)), 3); WriteString(" | ");
   END;

   IF test(ch) THEN
     IF ch < ' ' THEN
       Write('*');
     ELSE
       Write(ch);
     END;
   ELSE
     Write('_');
   END;
   Write(' ');
 END;
 WriteLn;WriteLn;
END WriteCClass;

(*===========================================================================*)

BEGIN (* TCharClass *)
 WriteCClass("IsNumeric", IsNumeric);
 WriteCClass("IsLetter", IsLetter);
 WriteCClass("IsUpper", IsUpper);
 WriteCClass("IsLower", IsLower);
 WriteCClass("IsControl", IsControl);
 WriteCClass("IsWhiteSpace", IsWhiteSpace);
END TCharClass.
