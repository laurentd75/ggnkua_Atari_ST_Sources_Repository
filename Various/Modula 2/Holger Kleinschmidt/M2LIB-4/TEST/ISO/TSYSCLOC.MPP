MODULE TSysClock;
__IMP_SWITCHES__
__DEBUG__
#ifdef HM2
#ifdef __LONG_WHOLE__
(*$!i+: Modul muss mit $i- uebersetzt werden! *)
(*$!w+: Modul muss mit $w- uebersetzt werden! *)
#else
(*$!i-: Modul muss mit $i+ uebersetzt werden! *)
(*$!w-: Modul muss mit $w+ uebersetzt werden! *)
#endif
#endif

(* Test und Anwendungsbeispiel fuer ISO-SysClock
 *
 * 12-Aug-96, Holger Kleinschmidt
 *)

VAL_INTRINSIC

#if (defined MM2)
(*$E MOS *)
#if (defined __DEBUG_CODE__)
IMPORT TOSDebug;
#endif
#endif

FROM PORTAB IMPORT
(* TYPE *) UNSIGNEDLONG, SIGNEDLONG;

FROM SysClock IMPORT
(* TYPE *) DateTime,
(* PROC *) IsValidDateTime, CanGetClock, CanSetClock, GetClock, SetClock;

FROM DosIO IMPORT
(* PROC *) WriteCard, WriteInt, WriteString, WriteLn, Write;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

PROCEDURE WriteDate (date : DateTime);
BEGIN
 WITH date DO
   IF day < 10 THEN Write('0'); END;
   WriteCard(VAL(UNSIGNEDLONG,day), 1);
   Write('.');
   IF month < 10 THEN Write('0'); END;
   WriteCard(VAL(UNSIGNEDLONG,month), 1);
   Write('.');
   WriteCard(VAL(UNSIGNEDLONG,year), 1);
   Write('/');
   IF hour < 10 THEN Write('0'); END;
   WriteCard(VAL(UNSIGNEDLONG,hour), 1);
   Write(':');
   IF minute < 10 THEN Write('0'); END;
   WriteCard(VAL(UNSIGNEDLONG,minute), 1);
   Write(':');
   IF second < 10 THEN Write('0'); END;
   WriteCard(VAL(UNSIGNEDLONG,second), 1);
   Write('.');
   WriteCard(fractions, 1);
   IF summerTimeFlag THEN
     WriteString("; Sommerzeit");
   ELSE
     WriteString("; Standardzeit");
   END;
   WriteString("; UTC-Offset: ");
   WriteInt(VAL(SIGNEDLONG,zone), 1);
   WriteLn;
 END;
END WriteDate;

(*===========================================================================*)

VAR date : DateTime;
    now  : DateTime;
    ch   : CHAR;

BEGIN (* TSysClock *)
 WITH date DO
   year      := 1999;
   month     := 2;
   day       := 29;
   hour      := 11;
   minute    := 55;
   second    := 0;
   fractions := LC(0);
 END;
 WITH now DO
   year      := 2000;
   month     := 2;
   day       := 29;
   hour      := 11;
   minute    := 55;
   second    := 0;
   fractions := LC(0);
 END;
 IF IsValidDateTime(date) OR ~IsValidDateTime(now) THEN
   WriteString('"IsValidDateTime()": error'); WriteLn;
 END;

 IF CanGetClock() THEN
   GetClock(now);
   WriteDate(now);

   IF CanSetClock() THEN
     WITH date DO
       year      := 2001;
       month     := 1;
       day       := 1;
       hour      := 11;
       minute    := 55;
       second    := 0;
       fractions := LC(0);
     END;
     SetClock(date);
     GetClock(date);
     WriteDate(date);

     SetClock(now);
     GetClock(now);
     WriteDate(now);
   ELSE
     WriteString("Cannot set system clock"); WriteLn;
   END;
 ELSE
   WriteString("Cannot read system clock"); WriteLn;
 END;
END TSysClock.
