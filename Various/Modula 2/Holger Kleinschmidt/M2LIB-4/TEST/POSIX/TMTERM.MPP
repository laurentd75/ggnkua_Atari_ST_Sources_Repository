MODULE tmterm;
__IMP_SWITCHES__
__DEBUG__
#ifdef HM2
#ifdef __LONG_WHOLE__
(*$!i+: Modul muss mit $i- uebersetzt werden! *)
(*$!w+: Modul muss mit $w- uebersetzt werden! *)
#else
(*$!i-: Modul muss mit $i+ uebersetzt werden! *)
(*$!w-: Modul muss mit $w+ uebersetzt werden! *)
#endif
#endif

(* Test der Modulterminierung.
 * Dieses Programm sollte die Prozeduren "t3", "t2" und "t1" in genau
 * dieser Reihenfolge ausfuehren, wenn nicht Exit zum Beenden verwendet
 * wird.
 *
 * 23-Dez-95, Holger Kleinschmidt
 *)

#if (defined MM2)
(*$E MOS *)
#if (defined __DEBUG_CODE__)
IMPORT TOSDebug;
#endif
#endif

FROM DosSystem IMPORT atexit, exit, Exit, ExitSuccess;
FROM DosIO IMPORT WriteString, WriteLn, Read;

VAR ch : CHAR;
    i  : INTEGER;

#ifdef HM2
(*$E+*)
#endif
PROCEDURE t1;
BEGIN
 WriteString("term-1, Taste..."); WriteLn;
 Read(ch);
END t1;

PROCEDURE t2;
BEGIN
 WriteString("term-2, Taste..."); WriteLn;
 Read(ch);
END t2;

PROCEDURE t3;
BEGIN
 WriteString("term-3, Taste..."); WriteLn;
 Read(ch);
END t3;
#ifdef HM2
(*$E=*)
#endif

BEGIN
 i := atexit(t1);
 i := atexit(t2);
 i := atexit(t3);

 WriteString("E)xit, e)xit oder normal? ");
 Read(ch);
 WriteLn;
 CASE ch OF
   'E': Exit(ExitSuccess); (* Programm sofort beenden, Terminierung nicht ausfuehren *)
  |'e': exit(ExitSuccess); (* Programm sofort beenden, Terminierung ausfuehren *)
 ELSE                      (* Terminierung ausfuehren *)
 END;
 WriteString("Jetzt ist das Programm gleich zuende"); WriteLn;
END tmterm.
