MODULE tsystem;
__IMP_SWITCHES__
__DEBUG__
#ifdef HM2
#ifdef __LONG_WHOLE__
(*$!i+: Modul muss mit $i- uebersetzt werden! *)
(*$!w+: Modul muss mit $w- uebersetzt werden! *)
#else
(*$!i-: Modul muss mit $i+ uebersetzt werden! *)
(*$!w-: Modul muss mit $w+ uebersetzt werden! *)
#endif
#endif

(* Testprogramm fuer "system()". Die Environmentvariable SHELL sollte
 * den Pfad eines Kommandointerpreters enthalten, der die Option -c
 * versteht. Dies ist bei allen UNIX-aehnlichen Shells der Fall.
 *
 * Wenn dem Programm ein Argument uebergeben wird, wird dieses Argument
 * von "system()" ausgefuehrt, sonst das Kommando: ls -l.
 * Das uebergebene Argument kann auch aus mehreren Parametern bestehen,
 * nur muss es dann in Hochkommata eingeschlossen werden, damit es als
 * ein Argument gilt, z.B. tsystem 'ls -l /bin' (funktioniert nur innerhalb
 * einer Kommandoshell, in der Desktop-Parameterbox wird nur der erste
 * Parameter verwendet).
 *
 * 27-Aug-96, Holger Kleinschmidt
 *)

#if (defined MM2)
(*$E MTP *)
#if (defined __DEBUG_CODE__)
IMPORT TOSDebug;
#endif
#endif

VAL_INTRINSIC
CAST_IMPORT


FROM PORTAB IMPORT
(* TYPE *) UNSIGNEDWORD, SIGNEDLONG;

FROM args IMPORT
(* PROC *) ArgCount, GetArg;

FROM str IMPORT
(* PROC *) strncpy, strsignal, strerror, AssignCToM2;

FROM proc IMPORT
(* TYPE *) WaitVal,
(* PROC *) WIFSIGNALED, WTERMSIG, WEXITSTATUS;

FROM DosIO IMPORT
(* PROC *) Write, WriteInt, WriteString, WriteLn;

FROM POSIX2 IMPORT
(* PROC *) system;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

VAR
  ret   : CARDINAL;
  state : WaitVal;
  s     : ARRAY [0..80] OF CHAR;
  c     : CHAR;

BEGIN
 IF ArgCount() > 1 THEN
   GetArg(1, s);
 ELSE
   s := "ls -l";
 END;

 ret   := CAST(CARDINAL,system(s));
 state := CAST(WaitVal,VAL(UNSIGNEDWORD,ret));

 WriteLn;
 WriteString("Return code: "); WriteInt(VAL(SIGNEDLONG,ret), 1); WriteLn;
 IF WIFSIGNALED(state) THEN
   WriteString("Child terminated by Signal: ");
   AssignCToM2(strsignal(WTERMSIG(state)), 0, s);
   WriteString(s);
   WriteLn;
 ELSE
   WriteString("Child exit status: "); WriteInt(VAL(SIGNEDLONG,WEXITSTATUS(state)), 1);
 END;
 WriteLn;
END tsystem.

