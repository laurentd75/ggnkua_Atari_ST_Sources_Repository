DEFINITION MODULE LPRTERMINATION;

(* Hiermit koennen Terminierungsroutinen installiert werden, die NACH
 * Beendigung des Hauptprogramms ausgefuehrt werden sollen. Die Routinen
 * werden in der umgekehrten Reihenfolge ihrer Installation aufgerufen,
 * die zuletzt installierte Routine also zuerst.
 *
 * Dieses Modul hat nur bei gelinkten Programmen eine Funktion. Unter
 * Kontrolle des Laders wird das Modul ignoriert!
 *
 * Das Modul benutzt KEINE versteckten dynamischen Speicheranforderungen,
 * da der jeweils noetige Speicher durch Deklaration von 'TermRec'-Variablen
 * in den entsprechenden Modulen automatisch zur Verfuegung gestellt wird!
 *
 * 27-Nov-93, Holger Kleinschmidt
 *)

FROM SYSTEM IMPORT
(* TYPE *) ADDRESS;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

(* Ersatz fuer die fehlerhafte Deklaration der Basepage in 'GEMX' *)
TYPE
  CmdLine = ARRAY [0..127] OF CHAR;

  BasePtr  = POINTER TO BasePageRec;
  BasePageRec = RECORD
    pLowtpa : ADDRESS;
    pHitpa  : ADDRESS;
    pTbase  : ADDRESS;
    pTlen   : LONGCARD;
    pDbase  : ADDRESS;
    pDlen   : LONGCARD;
    pBbase  : ADDRESS;
    pBlen   : LONGCARD;
    pDta    : ADDRESS;
    pParent : BasePtr;
    res1    : LONGCARD;
    pEnv    : ADDRESS;
    res2    : ARRAY [0..19] OF LONGCARD;
    pCmdlin : CmdLine;
  END;

VAR (* Hat nur bei gelinkten Programmen einen sinnvollen Wert *)
  BasePageP : BasePtr;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

(* Jedes Modul, das eine Terminierungsroutine installieren will, muss
 * eine Variable vom Typ 'TermRec' und eine Terminierungsroutine
 * vom Typ 'PROC' deklarieren.
 *)
TYPE
  TermRecPtr = POINTER TO TermRec;
  TermRec = RECORD
    proc : PROC;
    next : TermRecPtr;
  END;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

PROCEDURE IsAPP ( ): BOOLEAN;

(* Testet, ob das Programm als Applikation oder ACC gestartet wurde.
 * Wenn es als ACC gestartet wurde, duerfen "Terminate()" und "TERMINATE()"
 * nicht verwendet werden, da ein ACC nie endet.
 * Installierte Terminierungsroutinen werden aus dem gleichen Grund
 * auch nicht ausgefuehrt.
 *
 * Die Verwendung eines LPR-Programms (auch) als ACC setzt ein Patchen des
 * gelinkten Programms mit FIXPRG oder ein Patchen des Linkers mit
 * FIXLINK voraus!
 *)


PROCEDURE SetTermResult ((* EIN/ -- *) ret : INTEGER );

(* Mit dieser Prozedur kann der Rueckgabewert des Programms gesetzt werden.
 * Es wird der zuletzt gesetzte Wert verwendet.
 *)


PROCEDURE InstallTerm ((* -- /AUS *) VAR term : TermRec;
                       (* EIN/ -- *)     proc : PROC    );

(* Hiermit wird eine Terminierungsroutine installiert. Sie wird bei
 * Beendigung des Programms automatisch ausgefuehrt.
 *)


PROCEDURE Terminate ((* EIN/ -- *) ret : INTEGER );

(* Hiermit werden die installierten Terminierungsroutinen ausgefuehrt
 * und das Programm mit dem Rueckgabewert <ret> beendet.
 *
 * Die Prozedur sollte nur bei einem gelinkten Programm ausgefuehrt werden,
 * da sonst gleichzeitig der Lader beendet wird!
 *)


PROCEDURE TERMINATE ((* EIN/ -- *) ret : INTEGER );

(* Hiermit wird das Programm mit dem Returnwert <ret> sofort beendet,
 * ohne dass die installierten Terminierungsroutinen ausgefuehrt werden.
 *
 * Nur bei gelinkten Programmen sinnvoll (siehe oben).
 *)


PROCEDURE FINALIZE ((* -- /AUS *) VAR ret : INTEGER );

(* Mit dieser Prozedur wird die Kette der mit "InstallTerm()"
 * installierten Routinen abgearbeitet. Sie wird deshalb nach Ausfuehrung
 * des eigentlichen Programms von 'GEMX' aufgerufen (Es ist allerdings
 * auch moeglich sie explizit selbst aufzurufen, wenn es sinnvoll
 * ist).
 *)

END LPRTERMINATION.
