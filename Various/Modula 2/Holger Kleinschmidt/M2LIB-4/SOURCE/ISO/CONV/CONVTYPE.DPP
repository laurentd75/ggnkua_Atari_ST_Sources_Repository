DEFINITION MODULE ConvTypes;

(* part of standard library *)

__DEF_SWITCHES__
#ifdef HM2
#ifdef __LONG_WHOLE__
(*$!i+: Modul muss mit $i- uebersetzt werden! *)
(*$!w+: Modul muss mit $w- uebersetzt werden! *)
#else
(*$!i-: Modul muss mit $i+ uebersetzt werden! *)
(*$!w-: Modul muss mit $w+ uebersetzt werden! *)
#endif
#endif
(*****************************************************************************)
(* ISO-ConvTypes                                                             *)
(* --------------------------------------------------------------------------*)
(* Stellt Typen fuer die Konvertierung zwischen Strings und Werten zur       *)
(* Verfuegung.                                                               *)
(* --------------------------------------------------------------------------*)
(* 27-Jul-93, Holger Kleinschmidt                                            *)
(*****************************************************************************)

#if !ISO_recursive_proc_decl
FROM PORTAB IMPORT ANYTYPE;
#endif

TYPE
  ConvResults = (  (* Typ zur Klassifizierung einer Stringrepraesentation *)
    strAllRight,   (* Die Stringrepraesentation ist korrekt bzgl. der
                      entsprechenden Konvertierung. *)
    strOutOfRange, (* Die Stringrepraesentation ist korrekt bzgl. der
                      entsprechenden Konvertierung, aber der Wert
                      ueberschreitet den entsprechenden Wertebereich. *)
    strWrongFormat,(* Die Stringrepraesentation ist nicht korrekt bzgl.
                      der entsprechenden Konvertierung. *)
    strEmpty       (* Der String enthaelt kein Zeichen (ausser Leerzeichen). *)
  );

TYPE
  ScanClass = ( (* Typ zu Klassifizierung der Eingabe fuer einen endlichen
                   Automaten zur Konvertierung. *)
    padding,    (* fuehrende Leerzeichen an diesem Punkt der Eingabe --
                   ignorieren *)
    valid,      (* gueltiges Zeichen an diesem Punkt der Eingabe --
                   akzeptieren *)
    invalid,    (* ungueltiges Zeichen an diesem Punkt der Eingabe --
                   abweisen *)
    terminator  (* beendendes Zeichen an diesem Punkt der Eingabe --
                   (gehoert nicht mehr zur Repraesentation) *)
  );

#if ISO_recursive_proc_decl
TYPE
  ScanState =   (* Typ der Prozedur fuer den Zustand des endlichen Automaten
                   zur Konvertierung. *)
    PROCEDURE(CHAR, VAR ScanClass, VAR ScanState);
#else
TYPE
  ScanState =   (* Typ der Prozedur fuer den Zustand des endlichen Automaten
                   zur Konvertierung. *)
    PROCEDURE(CHAR, VAR ScanClass, VAR ARRAY OF ANYTYPE);

(* Originaldefinition:
   ScanState =  PROCEDURE(CHAR, VAR ScanClass, VAR ScanState);

   Der Typ des letzten Parameters wurde geaendert, da die ``rekursive''
   Definition von 'ScanState' mit diesem Compiler nicht erlaubt ist.
 *)
#endif
END ConvTypes.

