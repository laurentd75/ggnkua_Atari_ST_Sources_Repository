DEFINITION MODULE TextIO;

(* standard library module *)

__DEF_SWITCHES__
#ifdef HM2
#ifdef __LONG_WHOLE__
(*$!i+: Modul muss mit $i- uebersetzt werden! *)
(*$!w+: Modul muss mit $w- uebersetzt werden! *)
#else
(*$!i-: Modul muss mit $i+ uebersetzt werden! *)
(*$!w-: Modul muss mit $w+ uebersetzt werden! *)
#endif
#endif
(*****************************************************************************)
(* ISO-TextIO                                                                *)
(* --------------------------------------------------------------------------*)
(* Texteingabe und -ausgabe auf den angegebenen Kanaelen.                    *)
(* Das Ergebnis von Eingabeoperationen kann ueber "IOResult.ReadResult()"    *)
(* erfragt werden.                                                           *)
(* --------------------------------------------------------------------------*)
(* 10-Jun-95, Holger Kleinschmidt                                            *)
(*****************************************************************************)

(*============== IMPLEMENTIERUNGSHINWEIS ====================================*)
(* 'ReadChar':                                                               *)
(*     Bei Zeilenende oder Dateiende ist das zurueckgelieferte Zeichen nicht *)
(*     undefiniert, sondern garantiert 0C.                                   *)
(*===========================================================================*)

IMPORT IOChan;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

(* Die folgenden Prozeduren lesen nur bis zum naechsten Zeilenende *)

PROCEDURE ReadChar ((* EIN/ -- *)     cid : IOChan.ChanId;
                    (* -- /AUS *) VAR ch  : CHAR          );

(* Falls moeglich, wird das naechste Zeichen aus dem Eingabestrom <cid>
   gelesen und <ch> zugewiesen, sonst ist <ch> undefiniert.

   "IOResult.ReadResult()" liefert:

   'allRight'   : Ein Zeichen wurde gelesen.
   'endOfLine'  : Es wurde kein Zeichen gelesen, da das naechste Zeichen
                  das Zeilenende ist.
   'endOfInput' : Es wurde kein Zeichen gelesen, da der Eingabestrom
                  zuende ist.
 *)


PROCEDURE ReadRestLine ((* EIN/ -- *)     cid : IOChan.ChanId;
                        (* -- /AUS *) VAR s   : ARRAY OF CHAR );

(* Liest alle Zeichen bis zum naechsten Zeilenende (dieses wird nicht
   mehr gelesen) oder dem Ende von <cid>, und weist <s> soviel wie moeglich
   davon zu.

   "IOResult.ReadResult()" liefert:

   'allRight'   : Es wurde mindestens ein Zeichen gelesen, und <s> konnte
                  alle Zeichen aufnehmen.
   'outOfRange' : Es wurde mindestens ein Zeichen gelesen, aber <s> konnte
                  nicht alle Zeichen aufnehmen.
   'endOfLine'  : Es wurde kein Zeichen gelesen, da das naechste Zeichen
                  das Zeilenende ist.
   'endOfInput' : Es wurde kein Zeichen gelesen, da der Eingabestrom
                  zuende ist.
 *)


PROCEDURE ReadString  ((* EIN/ -- *)     cid : IOChan.ChanId;
                       (* -- /AUS *) VAR s   : ARRAY OF CHAR );

(* Liest alle Zeichen bis zum naechsten Zeilenende (dieses wird nicht
   mehr gelesen) oder dem Ende von <cid>, aber maximal soviel wie <s>
   aufnehmen kann, und weist <s> den String zu.

   "IOResult.ReadResult()" liefert:

   'allRight'   : Es wurde mindestens ein Zeichen gelesen.
   'endOfLine'  : Es wurde kein Zeichen gelesen, da das naechste Zeichen
                  das Zeilenende ist.
   'endOfInput' : Es wurde kein Zeichen gelesen, da der Eingabestrom
                  zuende ist.
 *)


PROCEDURE ReadToken ((* EIN/ -- *)     cid : IOChan.ChanId;
                     (* -- /AUS *) VAR s   : ARRAY OF CHAR );

(* Entfernt fuehrende Leerzeichen aus <cid>, und liest dann alle
   Zeichen bis zum letzten Zeichen, das kein Leerzeichen ist, oder
   dem Zeilenende (das nicht mehr gelesen wird) oder dem Ende von <cid>.
   <s> wird soviel wie moeglich von den gelesenen Nicht-Leerzeichen
   zugewiesen.

   "IOResult.ReadResult()" liefert:

   'allRight'   : Es wurde mindestens ein Nicht-Leerzeichen gelesen, und
                  <s> konnte alle diese Zeichen aufnehmen.
   'outOfRange' : Es wurde mindestens ein Nicht-Leerzeichen gelesen, aber
                  <s> konnte nicht alle diese Zeichen aufnehmen.
   'endOfLine'  : Es wurde kein Nicht-Leerzeichen gelesen, da das naechste
                  Zeichen das Zeilenende ist.
   'endOfInput' : Es wurde kein Nicht-Leerzeichen gelesen, da der
                  Eingabestrom zuende ist.
 *)


(* Die folgende Prozedur ueberliest das naechste Zeilenende *)

PROCEDURE SkipLine ((* EIN/ -- *) cid : IOChan.ChanId );

(* Entfernt alle Zeichen aus <cid> einschliesslich dem naechsten
   Zeilenende oder bis <cid> zuende ist.

   "IOResult.ReadResult()" liefert:

   'allRight'   : Ein Zeilenende wurde gelesen.

   'endOfInput' : Es wurde kein Zeilenende gelesen, da der Eingabestrom
                  zuende ist.
 *)



(* Ausgabeprozeduren *)

PROCEDURE WriteChar ((* EIN/ -- *) cid : IOChan.ChanId;
                     (* EIN/ -- *) ch  : CHAR          );

(* Schreibt das Zeichen <ch> auf den Ausgabestrom <cid> *)


PROCEDURE WriteLn ((* EIN/ -- *) cid : IOChan.ChanId );

(* Schreibt ein Zeilenende auf den Ausgabestrom <cid> *)


PROCEDURE WriteString ((* EIN/ -- *)     cid : IOChan.ChanId;
                       (* EIN/ -- *) REF s   : ARRAY OF CHAR );

(* Schreibt den String <s> auf den Ausgabestrom <cid> *)

END TextIO.
