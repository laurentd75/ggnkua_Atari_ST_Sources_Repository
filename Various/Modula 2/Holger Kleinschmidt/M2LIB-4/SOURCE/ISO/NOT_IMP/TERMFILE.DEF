DEFINITION MODULE TermFile;

(* standard library module *)

__DEF_SWITCHES__
#ifdef HM2
#ifdef __LONG_WHOLE__
(*$!i+: Modul muss mit $i- uebersetzt werden! *)
(*$!w+: Modul muss mit $w- uebersetzt werden! *)
#else
(*$!i-: Modul muss mit $i+ uebersetzt werden! *)
(*$!w-: Modul muss mit $w+ uebersetzt werden! *)
#endif
#endif
(*****************************************************************************)
(* ISO-TermFile                                                              *)
(* --------------------------------------------------------------------------*)
(* Kanaele, die durch diesen Geraetetreiber geoeffnet werden, sind mit einem *)
(* einzelnen Terminal verbunden; eingegebene Zeichen werden zwischen allen   *)
(* angeschlossenen Kanaelen nach der Reihenfolge der Eingabeoperationen ver- *)
(* teilt.                                                                    *)
(* --------------------------------------------------------------------------*)
(* 26-Okt-94, Holger Kleinschmidt                                            *)
(*****************************************************************************)

IMPORT IOChan, ChanConsts;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

TYPE
  ChanId      = IOChan.ChanId;
  FlagSet     = ChanConsts.FlagSet;
  OpenResults = ChanConsts.OpenResults;

(* Folgende einelementige Werte von 'FlagSet' werden bei "Open*()"
 * akzeptiert:
 *)
CONST
  read  = FlagSet{ChanConsts.readFlag};
          (* Eingabeoperationen sind verlangt/verfuegbar *)
  write = FlagSet{ChanConsts.writeFlag};
          (* Ausgabeoperationen sind verlangt/verfuegbar *)
  text  = FlagSet{ChanConsts.textFlag};
          (* Textoperationen sind verlangt/verfuegbar *)
  raw   = FlagSet{ChanConsts.rawFlag};
          (* Binaeroperationen sind verlangt/verfuegbar *)
  echo  = FlagSet{ChanConsts.echoFlag};
          (* Bei interaktiven Geraeten ist das Echo beim Entfernen
             eines Zeichens aus dem Eingabestrom verlangt/verfuegbar
             (echo = Einzelzeichenmodus). *)

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

(* Kanaele, die mit dem Terminal verbunden sind, werden entweder im
   Zeilenmodus oder im Einzelzeichenmodus geoeffnet. Im Zeilenmodus erfolgt
   das Echo der Zeichen vor dem Hinzufuegen zum Eingabestrom, und die
   Zeichen werden zeilenweise dem Eingabestrom hinzugefuegt.
   Im Einzelzeichenmodus werden die Zeichen sofort beim Eingeben dem
   Eingabestrom hinzugefuegt, und das Echo erfolgt beim Ausfuehren einer
   Textleseoperation -- vorausgesetzt, es wurde noch kein Echo ausgefuehrt.
   Im Einzelzeichenmodus wird auch bei einer 'TextRead'- oder 'RawRead'-
   Operation hoechstens ein Zeichen gelesen.

   Wenn alle Kanaele im Zeilenmodus geoeffnet sind, arbeitet der Treiber
   ausschliesslich im Zeilenmodus, wenn alle Kanaele im Einzelzeichenmodus
   geoeffnet sind, arbeitet der Treiber ausschliesslich im Einzelzeichenmodus.
   Ein Echo entsteht nur bei einer 'TextRead'-Operation auf einem Kanal im
   Einzelzeichenmodus, nicht bei 'Look' oder 'Skip', damit interaktive
   Eingaberoutinen das Echo ungewollter Zeichen unterdruecken koennen.
   (HINWEIS: Welche Eingaberoutinen bei '(S)TextIO' benutzt werden, ist nicht
   festgelegt, sie sind nicht als interaktive Eingaberoutinen ausgelegt,
   sondern als Universalroutinen.)

   Wenn die Implementierung es erlaubt, kann bei mehreren Kanaelen
   Zeilen- und Einzelzeichenmodus gemischt auftreten. In diesem Fall
   wird das Echo solange verzoegert, bis die Behandlung der Zeichen
   anhand der Reihenfolge der Eingabeoperationen bestimmt werden kann.
   Hierdurch brauchen Programme, die das Terminal in unterschiedlichen
   Modi oeffnen, den Status des Terminals nicht explizit zu setzen und
   wiederherzustellen (??).
 *)



PROCEDURE Open ((* -- /AUS *) VAR cid   : ChanId;
                (* EIN/ -- *)     flags : FlagSet;
                (* -- /AUS *) VAR res   : OpenResults );

(* Versucht einen Kanal zu oeffnen, der mit dem Terminal verbunden ist.
   Falls der Kanal wie verlangt geoeffnet werden kann, enthaelt <cid>
   die Kennung des Kanals, und <res> ist gleich 'opened'. Sonst enthaelt
   <cid> die Kennung des ungueltigen Kanals, und <res> einen
   entsprechenden Wert.

   - Falls 'raw' nicht gesetzt ist, wird automatisch 'text' gesetzt.
   - Falls 'read' nicht gesetzt ist, wird automatisch 'write' gesetzt.
   - Falls 'echo' gesetzt ist, muss der Einzelzeichenmodus moeglich sein,
     sonst der Zeilenmodus.
 *)


PROCEDURE IsTermFile ((* EIN/ -- *) cid : ChanId ): BOOLEAN;

(* Testet, ob der Kanal <cid> von diesem Geraetetreiber geoeffnet wurde
   und mit dem Terminal verbunden ist.
 *)


PROCEDURE Close ((* EIN/AUS *) VAR cid : ChanId );

(* Falls der Kanal <cid> von diesem Geraetetreiber geoeffnet wurde und
   mit dem Terminal verbunden ist, wird der Kanal geschlossen, und <cid>
   erhaelt den Wert des ungueltigen Kanals "StdChans.InvalidChan()",
   andernfalls wird die Ausnahme 'wrongDevice' ausgeloest.
 *)

END TermFile.
