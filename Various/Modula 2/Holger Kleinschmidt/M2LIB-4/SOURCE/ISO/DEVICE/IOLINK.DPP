DEFINITION MODULE IOLink;

(* standard library module *)

__DEF_SWITCHES__
#ifdef HM2
#ifdef __LONG_WHOLE__
(*$!i+: Modul muss mit $i- uebersetzt werden! *)
(*$!w+: Modul muss mit $w- uebersetzt werden! *)
#else
(*$!i-: Modul muss mit $i+ uebersetzt werden! *)
(*$!w-: Modul muss mit $w+ uebersetzt werden! *)
#endif
#endif
(*****************************************************************************)
(* ISO-IOLink                                                                *)
(* --------------------------------------------------------------------------*)
(* Typen und Prozeduren fuer die Implementierung von Geraetetreibern.        *)
(* --------------------------------------------------------------------------*)
(* 26-Dez-95, Holger Kleinschmidt                                            *)
(*****************************************************************************)

FROM PORTAB IMPORT
(* TYPE *) UNSIGNED;

IMPORT IOChan, IOConsts, ChanConsts, SYSTEM;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

(* Werte dieses Typs werden benutzt, um Geraetetreiber zu identifizieren. *)
TYPE
  DeviceId;


PROCEDURE AllocateDeviceId ((* -- /AUS *) VAR did : DeviceId );

(* Weist <did> eine eindeutige Kennung zu, mit der sich der Geraete-
   treiber spaeter identifizieren kann. Diese Prozedur wird normalerweise
   im Modulrumpf des Geraetetreibers bei der Initialisierung aufgerufen.
 *)



PROCEDURE MakeChan ((* EIN/ -- *)     did : DeviceId;
                    (* -- /AUS *) VAR cid : IOChan.ChanId );

(* Versucht einen neuen Kanal fuer den durch <did> gekennzeichneten
   Geraetetreiber herzustellen. Die Kennung des neuen Kanals wird
   <cid> zugewiesen. Falls kein Kanal erzeugt werden kann, enthaelt
   <cid> die Kennung des ungueltigen Kanals.
 *)


(* Falls ein Kanal erfolgreich eroeffnet wurde, aber die 'open'-Funktion
   des Geraetetreibers aus irgendeinem Grund fehlgeschlagen ist, und
   bei einer erfolgreichen 'Close'-Opearation, wird diese Prozedur vom
   Geraetetreiber aufgerufen.
 *)

PROCEDURE UnMakeChan ((* EIN/ -- *)     did : DeviceId;
                      (* EIN/AUS *) VAR cid : IOChan.ChanId );

(* Falls <did> nicht der fuer den Kanal <cid> zustaendige Geraetetreiber
   ist, wird die Ausnahme 'wrongDevice' ausgeloest; sonst wird der Kanal
   freigegeben, und <cid> enthaelt die Kennung des ungueltigen Kanals.
 *)


(* Werte dieses Typs werden benutzt, um auf Geraetefunktionen zuzugreifen. *)
TYPE
  DeviceTablePtr = POINTER TO DeviceTable;


(* Die Geraetetreiber stellen Prozeduren dieses Typs zur Verfuegung: *)
TYPE
  LookProc     =PROCEDURE(DeviceTablePtr,VAR CHAR,VAR IOConsts.ReadResults);
  SkipProc     =PROCEDURE(DeviceTablePtr);
  SkipLookProc =PROCEDURE(DeviceTablePtr,VAR CHAR,VAR IOConsts.ReadResults);
  WriteLnProc  =PROCEDURE(DeviceTablePtr);
  TextReadProc =PROCEDURE(DeviceTablePtr,SYSTEM.ADDRESS,UNSIGNED,VAR UNSIGNED);
  TextWriteProc=PROCEDURE(DeviceTablePtr,SYSTEM.ADDRESS,UNSIGNED);
  RawReadProc  =PROCEDURE(DeviceTablePtr,SYSTEM.ADDRESS,UNSIGNED,VAR UNSIGNED);
  RawWriteProc =PROCEDURE(DeviceTablePtr,SYSTEM.ADDRESS,UNSIGNED);
  GetNameProc  =PROCEDURE(DeviceTablePtr,VAR ARRAY OF CHAR);
  ResetProc    =PROCEDURE(DeviceTablePtr);
  FlushProc    =PROCEDURE(DeviceTablePtr);
  FreeProc     =PROCEDURE(DeviceTablePtr);

  (* Nimmt saemtliche Operationen fuer das Schliessen des Kanals vor,
     einschliesslich dem Schreiben gepufferter Daten, gibt aber den
     Kanal nicht frei (-> "UnMakeChan()").
   *)

(* Geraetetabellen haben:

   o  Ein Feld, in dem der Geraetetreiber ``private'' Daten speichern kann.
   o  Ein Feld, in dem die Kennung des zugehoerigen Geraetetreibers gesp. ist.
   o  Ein Feld, in dem die Kennung des Kanals gespeichert ist.
   o  Ein Feld, in dem das Resultat der letzten Leseoperation gesp. ist.
   o  Ein Feld, in dem die Fehlercodes gespeichert werden, bevor eine Ausnahme
      ausgeloest wird.
   o  Ein Feld, in dem die Flags fuer den momentanen Zustand des Kanals
      gespeichert sind.
   o  Ein Feld fuer jede Geraeteprozedur.

   Die Felder weden von "MakeChan()" auf den unten angegebenen Wert
   initialisiert.
 *)

TYPE
  DeviceData = SYSTEM.ADDRESS;

  DeviceTable = RECORD                  (* initialisiert zu: *)
    cd          : DeviceData;           (* NIL *)
    did         : DeviceId;             (* Kennung des Geraetes *)
    cid         : IOChan.ChanId;        (* Kennung des Kanals *)
    result      : IOConsts.ReadResults; (* 'notKnown' *)
    errNum      : IOChan.DeviceErrNum;  (* undefiniert *)
    flags       : ChanConsts.FlagSet;   (* FlagSet{} *)
    doLook      : LookProc;             (* Loest Ausnahme 'notAvailable' aus *)
    doSkip      : SkipProc;             (* Loest Ausnahme 'notAvailable' aus *)
    doSkipLook  : SkipLookProc;         (* Loest Ausnahme 'notAvailable' aus *)
    doWriteLn   : WriteLnProc;          (* Loest Ausnahme 'notAvailable' aus *)
    doTextRead  : TextReadProc;         (* Loest Ausnahme 'notAvailable' aus *)
    doTextWrite : TextWriteProc;        (* Loest Ausnahme 'notAvailable' aus *)
    doRawRead   : RawReadProc;          (* Loest Ausnahme 'notAvailable' aus *)
    doRawWrite  : RawWriteProc;         (* Loest Ausnahme 'notAvailable' aus *)
    doGetName   : GetNameProc;          (* Liefert den Leerstring *)
    doReset     : ResetProc;            (* Tut nichts *)
    doFlush     : FlushProc;            (* Tut nichts *)
    doFree      : FreeProc;             (* Tut nichts *)
  END;


(* Falls die 'open'-Prozedur fuer den entsprechenden Kanal erfolgreich war,
   kann ein Geraetetreiber mit dem Aufruf der folgenden Funktion einen
   Zeiger auf die Geraetetabelle fuer den Kanal erhalten. Die Felder wurden
   von "MakeChan()" bereits initialisiert, aber der Geraetetreiber kann nun
   die Geraetetabelle mit den unterstuetzten Operationen, Flags und Puffer-
   daten versehen, die dann bei jeder Operation auf diesem Kanal benutzt
   werden.
 *)

PROCEDURE DeviceTablePtrValue
  ((* EIN/ -- *) cid : IOChan.ChanId;
   (* EIN/ -- *) did : DeviceId      ): DeviceTablePtr;

(* Falls <did> nicht der fuer den Kanal <cid> zustaendige Geraetetreiber
   ist, wird die Ausnahme 'wrongDevice' ausgeloest; sonst wird der Zeiger
   auf die Geraetetabelle des Kanals zurueckgeliefert.
 *)


(* Mithilfe der folgenden Prozedur kann ein Geraetetreiber feststellen,
   ob er fuer den Kanal zustaendig ist. Hiermit koennen die von den
   Geraetetreibern exportierten Auskunftsfunktionen realisiert werden.
 *)

PROCEDURE IsDevice ((* EIN/ -- *) cid : IOChan.ChanId;
                    (* EIN/ -- *) did : DeviceId      ): BOOLEAN;

(* Testet, ob der Geraetetreiber <did> fuer den Kanal <cid> zustaendig ist. *)



(* Klienten dieses Moduls koennen Ausnahmen ausloesen, wofuer die folgenden
   Definitionen benutzt werden koennen.
 *)

TYPE
  DevExceptionRange = [IOChan.notAvailable..IOChan.textParseError];


PROCEDURE RAISEdevException ((* EIN/ -- *) cid : IOChan.ChanId;
                             (* EIN/ -- *) did : DeviceId;
                             (* EIN/ -- *) x   : DevExceptionRange;
                             (* EIN/ -- *) s   : ARRAY OF CHAR     );

(* Falls <did> nicht der fuer den Kanal <cid> zustaendige Geraetetreiber
   ist, wird die Ausnahme 'wrongDevice' ausgeloest; sonst wird die
   angegebene Ausnahme <x> mit der Meldung <s> ausgeloest.
 *)



(* Fuer die gesamte IO-Bibliothek existiert nur ein Wert vom Typ
   EXCEPTIONS.ExceptionSource, um die Ausnahmen vom Typ 'DevExceptionRange'
   auszuloesen. Die folgenden Prozeduren sind vorhanden, damit dieser Wert
   nicht explizit exportiert werden muss.
 *)

PROCEDURE IsIOException ( ): BOOLEAN;

(* Testet, ob die aufrufende Koroutine in einer Ausnahmebehandlung ist,
   weil eine Ausnahme vom Typ 'DevExceptionRange' ausgeloest wurde.
 *)

PROCEDURE IOException ( ): IOChan.ChanExceptions;

(* Falls die aufrufende Koroutine in einer Ausnahmebehandlung ist, weil
   eine Ausnahme vom Typ 'DevExceptionRange' ausgeloest wurde, wird der
   entsprechende Wert zurueckgeliefert, ansonsten wird eine Ausnahme
   ausgeloest.
 *)

END IOLink.
