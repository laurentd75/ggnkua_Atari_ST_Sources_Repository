DEFINITION MODULE ChanConsts;

(* standard library module *)

__DEF_SWITCHES__
#ifdef HM2
#ifdef __LONG_WHOLE__
(*$!i+: Modul muss mit $i- uebersetzt werden! *)
(*$!w+: Modul muss mit $w- uebersetzt werden! *)
#else
(*$!i-: Modul muss mit $i+ uebersetzt werden! *)
(*$!w-: Modul muss mit $w+ uebersetzt werden! *)
#endif
#endif
(*****************************************************************************)
(* ISO-ChanConsts                                                            *)
(* --------------------------------------------------------------------------*)
(* 25-Jan-93, Holger Kleinschmidt                                            *)
(*****************************************************************************)

(* Allgemeine Typen und Werte fuer das Oeffnen von Kanaelen und die Analyse
   des Resultats.
 *)


TYPE
  ChanFlags = (
    readFlag,        (* Eingabeoperationen sind verlangt/verfuegbar *)
    writeFlag,       (* Ausgabeoperationen sind verlangt/verfuegbar *)
    oldFlag,         (* Eine Datei darf/muss existieren, oder existierte,
                        vor der Oeffnung eines Kanals. *)
    textFlag,        (* Textoperationen sind verlangt/verfuegbar *)
    rawFlag,         (* Binaeroperationen sind verlangt/verfuegbar *)
    interactiveFlag, (* Interaktive Benutzung ist verlangt/verfuegbar *)
    echoFlag         (* Bei interaktiven Geraeten ist das Echo beim
                        Entfernen eines Zeichens aus dem Eingabestrom
                        verlangt/verfuegbar *)
  );

  FlagSet = SET OF ChanFlags;


(* Einelementige Werte von 'FlagSet', um z.B. 'read+write' zu erlauben *)

CONST
  read        = FlagSet{readFlag};
  write       = FlagSet{writeFlag};
  old         = FlagSet{oldFlag};
  text        = FlagSet{textFlag};
  raw         = FlagSet{rawFlag};
  interactive = FlagSet{interactiveFlag};
  echo        = FlagSet{echoFlag};


(* Moegliche Resultate einer ``Kanaloeffnung''. Falls der Resultatwert
   ein anderer als 'opened' ist, wird beim Oeffnen "IOChan.InvalidChan()"
   als Kanalkennung geliefert.
 *)

TYPE
  OpenResults = (
    opened,            (* Das Oeffnen hat wie verlangt funktioniert *)
    wrongNameFormat,   (* Der angegebene Name ist fuer die zugrunde liegende
                          Implementierung (das zugrunde liegende Dateisystem)
                          nicht gueltig *)
    wrongFlags,        (* Das Geraet unterstuetzt nicht alle angegebenen
                          Flags *)
    tooManyOpen,       (* Das Geraet unterstuetzt keine weiteren Kanaele
                          mehr *)
    outOfChans,        (* Es koennen keine weiteren Kanaele mehr angelegt
                          werden (Speichermangel?) *)
    wrongPermissions,  (* Keine Berechtigung fuer Datei- oder Verzeichnis-
                          Zugriff *)
    noRoomOnDevice,    (* Wegen Platzmangel auf dem Geraet kann der Kanal
                          nicht geoffnet werden *)
    noSuchFile,        (* Die angegebene Datei existiert nicht *)
    fileExists,        (* Eine Datei mit dem angegebenen Namen existiert
                          bereits *)
    wrongFileType,     (* Die Datei ist von einem Typ, der die verlangten
                          Operationen nicht unterstuetzt *)
    noTextOperations,  (* Textoperationen werden nicht unterstuetzt *)
    noRawOperations,   (* Binaeroperationen werden nicht unterstuetzt *)
    noMixedOperations, (* Text- und Binaeroperationen gemeinsam werden nicht
                          unterstuetzt *)
    alreadyOpen,       (* Quelle/Ziel ist bereits fuer Operationen geoeffnet,
                          deren Kombination mit den verlangten Operationen
                          nicht unterstuetzt wird *)
    otherProblem       (* Wegen eines anderen Fehlers fehlgeschlagen *)
  );

END ChanConsts.
