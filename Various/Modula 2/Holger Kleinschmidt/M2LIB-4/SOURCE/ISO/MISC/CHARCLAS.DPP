DEFINITION MODULE CharClass;

(* required separate library module *)

__DEF_SWITCHES__
#ifdef HM2
#ifdef __LONG_WHOLE__
(*$!i+: Modul muss mit $i- uebersetzt werden! *)
(*$!w+: Modul muss mit $w- uebersetzt werden! *)
#else
(*$!i-: Modul muss mit $i+ uebersetzt werden! *)
(*$!w-: Modul muss mit $w+ uebersetzt werden! *)
#endif
#endif
(*****************************************************************************)
(* ISO-CharClass                                                             *)
(* --------------------------------------------------------------------------*)
(* Implementierungsspezifische(!) Klassifikation von Einzelzeichen           *)
(* --------------------------------------------------------------------------*)
(* 29-Jun-94, Holger Kleinschmidt                                            *)
(*****************************************************************************)

(*============== IMPLEMENTIERUNGSHINWEIS ====================================*)
(* Fuer diese Implementierung gilt:                                          *)
(* Die Funktionen dieses Moduls werden durch das 'LC_CTYPE'-Locale beein-    *)
(* flusst. Es gilt folgende Zuordnung:                                       *)
(*                                                                           *)
(* "IsNumeric(c)"    <=> "isdigit(c)"                                        *)
(* "IsLetter(c)"     <=> "isalpha(c)"                                        *)
(* "IsUpper(c)"      <=> "isupper(c)"                                        *)
(* "IsLower(c)"      <=> "islower(c)"                                        *)
(* "IsControl(c)"    <=> "iscntrl(c)"                                        *)
(* "IsWhiteSpace(c)" <=> "isspace(c)"                                        *)
(*===========================================================================*)


PROCEDURE IsNumeric ((* EIN/ -- *) ch : CHAR ): BOOLEAN;

(* Testet, ob <ch> ein Element der implementierungsspezifischen Menge
   der numerischen Zeichen ist, die mindestens die Ziffern '0' bis '9'
   enthaelt.
 *)

PROCEDURE IsLetter ((* EIN/ -- *) ch : CHAR ): BOOLEAN;

(* Testet, ob <ch> ein Element der implementierungsspezifischen Menge
   der Buchstaben ist, die mindestens die Buchstaben 'a' bis 'z' und
   'A' bis 'Z' enthaelt.
 *)

PROCEDURE IsUpper ((* EIN/ -- *) ch : CHAR ): BOOLEAN;

(* Testet, ob <ch> ein Element der implementierungsspezifischen Menge
   der Grossbuchstaben ist, die mindestens die Buchstaben 'A' bis 'Z'
   enthaelt.
 *)

PROCEDURE IsLower ((* EIN/ -- *) ch : CHAR ): BOOLEAN;

(* Testet, ob <ch> ein Element der implementierungsspezifischen Menge
   der Kleinbuchstaben ist, die mindestens die Buchstaben 'a' bis 'z'
   enthaelt.
 *)

PROCEDURE IsControl ((* EIN/ -- *) ch : CHAR ): BOOLEAN;

(* Testet, ob <ch> ein Element der implementierungsspezifischen Menge
   der Control-Zeichen ist.
 *)

PROCEDURE IsWhiteSpace ((* EIN/ -- *) ch : CHAR ): BOOLEAN;

(* Testet, ob <ch> entweder ein Leerzeichen ' ' oder ein Element der
   implementierungsspezifischen Menge der Formatsteuerungszeichen ist.
 *)

END CharClass.
