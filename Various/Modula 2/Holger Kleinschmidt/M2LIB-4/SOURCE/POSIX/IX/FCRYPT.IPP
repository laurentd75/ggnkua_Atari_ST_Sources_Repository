IMPLEMENTATION MODULE fcrypt;
__IMP_SWITCHES__
__RANGECHECK_OFF__
__STACKCHECK_OFF__
__DEBUG_OFF__
#ifdef HM2
#ifdef __LONG_WHOLE__
(*$!i+: Modul muss mit $i- uebersetzt werden! *)
(*$!w+: Modul muss mit $w- uebersetzt werden! *)
#else
(*$!i-: Modul muss mit $i+ uebersetzt werden! *)
(*$!w-: Modul muss mit $w+ uebersetzt werden! *)
#endif
#endif
(*****************************************************************************)
(* 28-Apr-96, Holger Kleinschmidt                                            *)
(*****************************************************************************)

(* lib/des/fcrypt.c *)
(* Copyright (C) 1995 Eric Young (eay@mincom.oz.au)
 * All rights reserved.
 *
 * This file is part of an SSL implementation written
 * by Eric Young (eay@mincom.oz.au).
 * The implementation was written so as to conform with Netscapes SSL
 * specification.  This library and applications are
 * FREE FOR COMMERCIAL AND NON-COMMERCIAL USE
 * as long as the following conditions are aheared to.
 *
 * Copyright remains Eric Young's, and as such any Copyright notices in '
 * the code are not to be removed.  If this code is used in a product,
 * Eric Young should be given attribution as the author of the parts used.
 * This can be in the form of a textual message at program startup or
 * in documentation (online or textual) provided with the package.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *    This product includes software developed by Eric Young (eay@mincom.oz.au)
 *
 * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * The licence and distribution terms for any publically available version or
 * derivative of this code cannot be changed.  i.e. this code cannot simply be
 * copied and put under another distribution licence
 * [including the GNU Public Licence.]
 *)

(* Eric Young.
 * This version of crypt has been developed from my MIT compatable
 * DES library.
 * The library is available at pub/Crypto/DES at ftp.psy.uq.oz.au
 * eay@mincom.oz.au or eay@psych.psy.uq.oz.au
 *)

(* Aenderungen fuer die Einbindung von libdes-3.23/fcrypt.c in Modula-2:

   o Prozedur des_set_key() verschoben, damit crypt() am Anfang steht.

   o Uebersetzen mit: gcc -O2 -c -mbaserel -mpcrel fcrypt.c

     Die globalen Konstanten (static const) und Variablen werden so
     relativ zum Basisregister A4 angesprochen, anstatt ueber absolute
     Adressen.

   o Disassemblieren von fcrypt.o fuer die weitere Bearbeitung im TurboAss.

   o Da die Konstanten ueber A4 adressiert werden, koennen die Daten direkt
     hinter dem Programmcode im Textsegment abgelegt werden, anstatt im
     Datensegment.
     Die globale Variable 'buff' muss allerdings im BSS-Segment stehen.
     Hierzu wird der Programmcode an den zwei Zugriffsstellen so modifiziert,
     dass die Variable nicht mehr ueber A4, sondern als zusaetzlicher
     Prozedurparameter adressiert wird.
     Die zwei Prozeduraufrufe mit JSR und absoluter Adresse werden
     durch Aufrufe mit BSR und relativer Adresse ersetzt. Damit die
     Codelaenge gleich bleibt, wird hinter die Aufrufe jeweils ein NOP
     eingefuegt.

   o Fuer den Aufruf der Funktion aus Modula-2 ist ein Wrapper zustaendig,
     der die Parameter- und Funktionswertuebergabe anpasst, die Adresse
     der globalen Variable als zusaetzlichen Parameter uebergibt und das
     Basisregister A4 auf den Beginn des Programmcodes setzt.
 *)

VAL_INTRINSIC
OSCALL_IMPORT

FROM SYSTEM IMPORT
(* PROC *) ADR;

FROM types IMPORT
(* TYPE *) StrPtr;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

VAR (* Statische Variable fuer realcrypt() *)
  buff : ARRAY [0..19] OF CHAR;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

#if (defined MM2) || (defined TDIM2)
__PROCFRAME_OFF__ (* Wegen fehlender RETURN-Anweisung *)
#endif
PROCEDURE crypt ((* EIN/ -- *) passwd : StrPtr;
                 (* EIN/ -- *) salt   : StrPtr ): StrPtr;

BEGIN
#if (defined MM2)
 ASSEMBLER
   MOVE.L  A4,-(SP)    ; veraendertes Register retten
   LEA     realcrypt(PC),A4 ; GCC Basisregister -> Konstanten, Variablen

;  CALL realcrypt(passwd, salt,...[buff]...)
;  zusaetzlicher Parameter funktioniert wegen variabler Parameterliste in C

   PEA     buff        ; <buff>
   MOVE.L -(A3),-(SP)  ; <salt>
   MOVE.L -(A3),-(SP)  ; <passwd>
   BSR.S   realcrypt   ;
   LEA     12(SP),SP   ;

   MOVEA.L (SP)+,A4    ; veraendertes Register wiederherstellen
#ifdef __RES_ON_STACK__
   MOVE.L  D0,(A3)+
#endif
   RTS
 realcrypt:
 END;
#elif (defined HM2)
 SETREG(0, ADR(buff));
(*
 move.l  A4,-(SP)     ; veraendertes Register retten
 lea     realcrypt(PC),A4 ; GCC Basisregister -> Konstanten, Variablen

;  CALL realcrypt(passwd, salt,...[buff]...)
;  zusaetzlicher Parameter funktioniert wegen variabler Parameterliste in C

 move.l  D0,-(SP)     ; <buff>
 move.l  12(A6),-(SP) ; <salt>
 move.l  8(A6),-(SP)  ; <passwd>
 bsr.s   realcrypt    ;
 lea     12(SP),SP    ;

 movea.l (SP)+,A4     ; veraendertes Register wiederherstellen

 movea.l (SP)+,A5     ; Prozedur-Returncode
 unlk    A6           ;
 movea.l (sp)+,A1     ;
 addq.w  #8,sp        ;
 jmp     (A1)         ;
realcrypt:
*)
 CODE(2F0CH,49FAH,001EH,2F00H,2F2EH,000CH,2F2EH,0008H);
 CODE(6110H,4FEFH,000CH,285FH,2A5FH,4E5EH,225FH,504FH);
 CODE(4ED1H);
#elif (defined TDIM2)
 SETREG(0, ADR(buff));
(*
 movea.l 4(SP),A0       ; A0 -> <salt>
 movea.l 8(SP),A1       ; A1 -> <passwd>
 move.l  A4,-(SP)       ; veraendertes Register retten
 lea     realcrypt(PC),A4 ; GCC Basisregister -> Konstanten, Variablen

;  CALL realcrypt(passwd, salt,...[buff]...)
;  zusaetzlicher Parameter funktioniert wegen variabler Parameterliste in C

 move.l  D0,-(SP)       ; <buff>
 move.l  A0,-(SP)       ; <salt>
 move.l  A1,-(SP)       ; <passwd>
 bsr.s   realcrypt      ;
 lea     12(SP),SP      ;

 movea.l (SP)+,A4       ; veraendertes Register wiederherstellen
 move.l  D0,12(SP)      ; Funktionswert & Prozedur-Returncode
 rts                    ;
realcrypt:
*)
 CODE(206FH,0004H,226FH,0008H,2F0CH,49FAH,0016H,2F00H);
 CODE(2F08H,2F09H,610CH,4FEFH,000CH,285FH,2F40H,000CH);
 CODE(4E75H);
#elif (defined LPRM2) || (defined SPCM2)
 SETREG(0, ADR(buff));
(*
; A4 wird von LPR selbst gerettet
 lea     realcrypt(PC),A4 ; GCC Basisregister -> Konstanten, Variablen

;  CALL realcrypt(passwd, salt,...[buff]...)
;  zusaetzlicher Parameter funktioniert wegen variabler Parameterliste in C

 move.l  D0,-(SP)       ; <buff>
 move.l  12(A6),-(SP)   ; <salt>
 move.l  16(A6),-(SP)   ; <passwd>
 bsr.s   realcrypt      ;
 lea     12(SP),SP      ;

 move.l  D0,20(A6)      ; Funktionswert & Prozedur-Returncode
 unlk    A6             ;
 movea.l (SP)+,A4       ;
 movea.l (SP)+,A0       ;
 addq.w  #8,SP          ;
 jmp     (A0)           ;
realcrypt:
*)
 CODE(49FAH,0020H,2F00H,2F2EH,000CH,2F2EH,0010H,6112H);
 CODE(4FEFH,000CH,2D40H,0014H,4E5EH,285FH,205FH,504FH);
 CODE(4ED0H);
#endif
(*
realcrypt:
            link      a6,#-$9c
            movem.l   d2-d4/a2-a3/a5,-(a7)
            movea.l   8(a6),a0
            movea.l   $c(a6),a2
            moveq     #0,d2
            lea       -$92(a6),a3
;
; Original
;           lea       $175c(a4),a1   ; buff
;
; Aenderung
            movea.l   $10(a6),a1
;
            movea.l   a1,a5
            move.b    #$41,d0
            tst.b     (a2)
            beq.b     l46
            move.b    (a2),d0
l46:        move.b    d0,(a1)
            andi.l    #$ff,d0
            lea       $169c(a4),a1
            move.b    0(a1,d0.l),d2
            move.b    #$41,d0
            tst.b     1(a2)
            beq.b     l64
            move.b    1(a2),d0
l64:        move.b    d0,1(a5)
            andi.l    #$ff,d0
            move.b    0(a1,d0.l),d0
            andi.l    #$ff,d0
            move.l    d0,d3
            asl.l     #4,d3
            suba.l    a1,a1
l7e:        move.b    (a0)+,d1
            beq.b     l9a
            move.b    d1,d0
            lsl.b     #1,d0
            move.b    d0,-8(a1,a6.l)
            addq.w    #1,a1
            moveq     #7,d4
            cmp.l     a1,d4
            bcc.b     l7e
            bra.b     l9a
l94:        clr.b     -8(a1,a6.l)
            addq.w    #1,a1
l9a:        moveq     #7,d4
            cmp.l     a1,d4
            bcc.b     l94
            lea       -$88(a6),a2
            move.l    a2,-(a7)
            pea       -8(a6)
;
; Original
;           jsr       des_set_key
;
; Aenderung
            bsr       des_set_key
            nop
;
            move.l    d3,-(a7)
            move.l    d2,-(a7)
            move.l    a2,-(a7)
            lea       -$9a(a6),a0
            pea       4(a0)
            move.l    a0,-(a7)
;
; Original
;           jsr       body
;
; Aenderung
            bsr       body
            nop
;
            move.l    -$9a(a6),d1
            move.b    d1,(a3)+
            move.l    d1,d0
            lsr.l     #8,d0
            move.b    d0,(a3)+
            move.l    d1,d0
            clr.w     d0
            swap      d0
            move.b    d0,(a3)+
            move.l    d1,d0
            clr.w     d0
            swap      d0
            lsr.w     #8,d0
            move.b    d0,(a3)+
            move.l    -$96(a6),d1
            move.b    d1,(a3)+
            move.l    d1,d0
            lsr.l     #8,d0
            move.b    d0,(a3)+
            move.l    d1,d0
            clr.w     d0
            swap      d0
            move.b    d0,(a3)+
            move.l    d1,d0
            clr.w     d0
            swap      d0
            lsr.w     #8,d0
            move.b    d0,(a3)
            suba.l    a3,a3
            move.b    #$80,d2
            clr.b     -$8a(a6)
            movea.w   #2,a1
            moveq     #0,d3
l112:       clr.b     d1
            suba.l    a2,a2
l116:       lsl.b     #1,d1
            lea       0(a6,a3.l),a0
            move.b    d2,d0
            and.b     -$92(a0),d0
            beq.b     l128
            ori.b     #1,d1
l128:       lsr.b     #1,d2
            bne.b     l132
            addq.w    #1,a3
            move.b    #$80,d2
l132:       addq.w    #1,a2
            moveq     #5,d4
            cmp.l     a2,d4
            bcc.b     l116
;
; Original
;           lea       $175c(a4),a2   ; buff
;
; Aenderung
            movea.l   $10(a6),a2
;
            move.b    d1,d3
            lea       $171c(a4),a0
            move.b    0(a0,d3.l),0(a2,a1.l)
            addq.w    #1,a1
            moveq     #$c,d4
            cmp.l     a1,d4
            bcc.b     l112
            clr.b     $d(a2)
            move.l    a2,d0
            movem.l   -$b4(a6),d2-d4/a2-a3/a5
            unlk      a6
            rts


Ab hier unveraendert

des_set_key:
            ...
body:
            ...
Tabellen
            ...
*)
 CODE(4E56H,0FF64H,48E7H,3834H,206EH,0008H,246EH,000CH);
 CODE(7400H,47EEH,0FF6EH,226EH,0010H,2A49H,103CH,0041H);
 CODE(4A12H,6702H,1012H,1280H,0280H,0000H,00FFH,43ECH);
 CODE(169CH,1431H,0800H,103CH,0041H,4A2AH,0001H,6704H);
 CODE(102AH,0001H,1B40H,0001H,0280H,0000H,00FFH,1031H);
 CODE(0800H,0280H,0000H,00FFH,2600H,0E983H,93C9H,1218H);
 CODE(6718H,1001H,0E308H,1380H,0E8F8H,5249H,7807H,0B889H);
 CODE(64ECH,6006H,4231H,0E8F8H,5249H,7807H,0B889H,64F4H);
 CODE(45EEH,0FF78H,2F0AH,486EH,0FFF8H,6100H,00B6H,4E71H);
 CODE(2F03H,2F02H,2F0AH,41EEH,0FF66H,4868H,0004H,2F08H);
 CODE(6100H,0326H,4E71H,222EH,0FF66H,16C1H,2001H,0E088H);
 CODE(16C0H,2001H,4240H,4840H,16C0H,2001H,4240H,4840H);
 CODE(0E048H,16C0H,222EH,0FF6AH,16C1H,2001H,0E088H,16C0H);
 CODE(2001H,4240H,4840H,16C0H,2001H,4240H,4840H,0E048H);
 CODE(1680H,97CBH,143CH,0080H,422EH,0FF76H,327CH,0002H);
 CODE(7600H,4201H,95CAH,0E309H,41F6H,0B800H,1002H,0C028H);
 CODE(0FF6EH,6704H,0001H,0001H,0E20AH,6606H,524BH,143CH);
 CODE(0080H,524AH,7805H,0B88AH,64DCH,246EH,0010H,1601H);
 CODE(41ECH,171CH,15B0H,3800H,9800H,5249H,780CH,0B889H);
 CODE(64C0H,422AH,000DH,200AH,4CEEH,2C1CH,0FF4CH,4E5EH);
 CODE(4E75H,4E56H,0FFFCH,48E7H,3F34H,206EH,0008H,246EH);
 CODE(000CH,7A00H,1A18H,7000H,1018H,0E188H,8A80H,7000H);
 CODE(1018H,4840H,4240H,8A80H,7000H,1018H,0E148H,4840H);
 CODE(4240H,8A80H,7800H,1818H,7000H,1018H,0E188H,8880H);
 CODE(7000H,1018H,4840H,4240H,8880H,1010H,0E140H,4840H);
 CODE(4240H,8880H,2004H,0E888H,0BB80H,2600H,0283H,0F0FH);
 CODE(0F0FH,0B785H,2003H,0E988H,0B184H,2005H,0E548H,4840H);
 CODE(4240H,0BB80H,243CH,0CCCCH,0000H,2600H,0C682H,2205H);
 CODE(0B781H,2003H,4240H,4840H,0E448H,2A01H,0B185H,2004H);
 CODE(0E548H,4840H,4240H,0B980H,2600H,0C682H,2204H,0B781H);
 CODE(2003H,4240H,4840H,0E448H,2801H,0B184H,2004H,0E288H);
 CODE(0BB80H,223CH,5555H,5555H,2600H,0C681H,0B785H,2003H);
 CODE(0D080H,0B184H,2005H,0E088H,0B980H,2600H,0283H,00FFH);
 CODE(00FFH,0B784H,2003H,0E188H,0B185H,2004H,0E288H,0BB80H);
 CODE(2600H,0C681H,0B785H,2003H,0D080H,0B184H,4281H,1204H);
 CODE(4841H,4241H,2004H,0280H,0000H,0FF00H,8280H,2004H);
 CODE(0280H,00FFH,0000H,4240H,4840H,8280H,2005H,0280H);
 CODE(0F000H,0000H,0E888H,2801H,8880H,203CH,0FFFH,0FFFFH);
 CODE(0CA80H,42AEH,0FFFCH,2640H,4BECH,125CH,41ECH,165CH);
 CODE(202EH,0FFFCH,0E580H,4AB0H,0800H,6714H,2205H,0E489H);
 CODE(2005H,7E1AH,0EFA8H,2A01H,8A80H,2204H,0E489H,6012H);
 CODE(2205H,0E289H,2005H,7E1BH,0EFA8H,2A01H,8A80H,2204H);
 CODE(0E289H,2004H,0EFA8H,2801H,8880H,2E0BH,0CA87H,0C887H);
 CODE(743FH,0C485H,43ECH,0E5CH,0E582H,2205H,0EC89H,7E03H);
 CODE(0C287H,2005H,0EE88H,7E3CH,0C087H,8280H,41E9H,0100H);
 CODE(0E581H,2431H,2800H,84B0H,1800H,2205H,7E0DH,0EEA9H);
 CODE(7E0FH,0C287H,2005H,7E0EH,0EEA8H,7E30H,0C087H,8280H);
 CODE(41E9H,0200H,0E581H,84B0H,1800H,2205H,4241H,4841H);
 CODE(0E849H,7E01H,0C287H,2005H,4240H,4840H,0EA48H,7E06H);
 CODE(0C087H,8280H,2005H,4240H,4840H,0EC48H,7E38H,0C087H);
 CODE(8280H,41E9H,0300H,0E581H,2C02H,8CB0H,1800H,743FH);
 CODE(0C484H,0E582H,2204H,0EE89H,7E03H,0C287H,2004H,0E088H);
 CODE(7E3CH,0C087H,8280H,41E9H,0500H,0E581H,2435H,2800H);
 CODE(84B0H,1800H,2004H,7E0DH,0EEA8H,41E9H,0600H,0280H);
 CODE(0000H,00FCH,84B0H,0800H,2204H,4241H,4841H,0EA49H);
 CODE(7E0FH,0C287H,2004H,4240H,4840H,0EC48H,7E30H,0C087H);
 CODE(8280H,0D2FCH,0700H,0E581H,2602H,86B1H,1800H,2203H);
 CODE(4841H,4241H,4280H,3006H,8280H,24C1H,2206H,4241H);
 CODE(4841H,2003H,4240H,2C01H,8C80H,0E99EH,24C6H,52AEH);
 CODE(0FFFCH,7E0FH,0BEAEH,0FFFCH,6C00H,0FEB2H,7000H,4CEEH);
 CODE(2CFCH,0FFD8H,4E5EH,4E75H,4E56H,0FFDCH,48E7H,3F34H);
 CODE(7800H,7A00H,2D6EH,0010H,0FFFCH,2D6EH,0014H,0FFF8H);
 CODE(2D6EH,0018H,0FFDCH,42AEH,0FFE0H,41ECH,065CH,47E8H);
 CODE(0100H,2D4BH,0FFF4H,47E8H,0300H,2D4BH,0FFF0H,47E8H);
 CODE(0500H,2D4BH,0FFECH,0D0FCH,0700H,2D48H,0FFE8H,7C00H);
 CODE(41ECH,065CH,47E8H,0200H,2D4BH,0FFE4H,4BE8H,0400H);
 CODE(45E8H,0600H,226EH,0FFFCH,2005H,4240H,4840H,2405H);
 CODE(0B182H,262EH,0FFF8H,0C682H,0C4AEH,0FFDCH,2003H,4840H);
 CODE(4240H,0B780H,0BB80H,2049H,2618H,0B183H,2002H,4840H);
 CODE(4240H,0B580H,0BB80H,2410H,0B182H,7E1CH,0EFBAH,723FH);
 CODE(0C282H,41ECH,065CH,0E581H,2002H,0EC88H,0280H,0000H);
 CODE(00FCH,266EH,0FFF4H,2233H,1800H,266EH,0FFF0H,82B3H);
 CODE(0800H,2002H,7E0EH,0EEA8H,0280H,0000H,00FCH,266EH);
 CODE(0FFECH,82B3H,0800H,2002H,4240H,4840H,0EC48H,0280H);
 CODE(0000H,00FCH,266EH,0FFE8H,82B3H,0800H,703FH,0C083H);
 CODE(0E580H,82B0H,0800H,2003H,0EC88H,0280H,0000H,00FCH);
 CODE(266EH,0FFE4H,82B3H,0800H,2003H,0EEA8H,0280H,0000H);
 CODE(00FCH,82B5H,0800H,2003H,4240H,4840H,0EC48H,0280H);
 CODE(0000H,00FCH,82B2H,0800H,0B384H,2004H,4240H,4840H);
 CODE(2404H,0B182H,262EH,0FFF8H,0C682H,0C4AEH,0FFDCH,2003H);
 CODE(4840H,4240H,0B780H,0B980H,2629H,0008H,0B183H,2002H);
 CODE(4840H,4240H,0B580H,0B980H,2429H,000CH,0B182H,7E1CH);
 CODE(0EFBAH,723FH,0C282H,0E581H,2002H,0EC88H,0280H,0000H);
 CODE(00FCH,266EH,0FFF4H,2233H,1800H,266EH,0FFF0H,82B3H);
 CODE(0800H,2002H,7E0EH,0EEA8H,0280H,0000H,00FCH,266EH);
 CODE(0FFECH,82B3H,0800H,2002H,4240H,4840H,0EC48H,0280H);
 CODE(0000H,00FCH,266EH,0FFE8H,82B3H,0800H,703FH,0C083H);
 CODE(0E580H,82B0H,0800H,2003H,0EC88H,0280H,0000H,00FCH);
 CODE(266EH,0FFE4H,82B3H,0800H,2003H,0EEA8H,0280H,0000H);
 CODE(00FCH,82B5H,0800H,2003H,4240H,4840H,0EC48H,0280H);
 CODE(0000H,00FCH,82B2H,0800H,0B385H,0D2FCH,0010H,5886H);
 CODE(7E1FH,0BE86H,6C00H,0FE72H,2404H,2805H,2A02H,52AEH);
 CODE(0FFE0H,7E18H,0BEAEH,0FFE0H,6C00H,0FE44H,2A04H,7E1FH);
 CODE(0EFBDH,2802H,0EFBCH,2005H,0E288H,0B980H,2400H,0282H);
 CODE(5555H,5555H,0B584H,2002H,0D080H,0B185H,2004H,0E088H);
 CODE(0BB80H,2400H,0282H,00FFH,00FFH,0B585H,2002H,0E188H);
 CODE(0B184H,2005H,0E488H,0B980H,2400H,0282H,3333H,3333H);
 CODE(0B584H,2002H,0E588H,0B185H,2004H,4240H,4840H,0BB80H);
 CODE(4282H,3400H,0B585H,2002H,4840H,4240H,0B184H,2005H);
 CODE(0E888H,0B980H,2400H,0282H,0F0FH,0F0FH,2002H,0E988H);
 CODE(0B584H,266EH,0008H,2684H,0B185H,266EH,000CH,2685H);
 CODE(7000H,4CEEH,2CFCH,0FFB8H,4E5EH,4E75H);

(* Tabellen *)
 CODE(0082H,0200H);
 CODE(0002H,0000H,8080H,0000H,8082H,0200H,0080H,0000H);
 CODE(8002H,0200H,8002H,0000H,8080H,0000H,8002H,0200H);
 CODE(0082H,0200H,0082H,0000H,8000H,0200H,8080H,0200H);
 CODE(0080H,0000H,0000H,0000H,8002H,0000H,0002H,0000H);
 CODE(8000H,0000H,0080H,0200H,0002H,0200H,8082H,0200H);
 CODE(0082H,0000H,8000H,0200H,0080H,0200H,8000H,0000H);
 CODE(0000H,0200H,0002H,0200H,8082H,0000H,0000H,0200H);
 CODE(8080H,0200H,8082H,0000H,0000H,0000H,0000H,0000H);
 CODE(8082H,0200H,0080H,0200H,8002H,0000H,0082H,0200H);
 CODE(0002H,0000H,8000H,0200H,0080H,0200H,8082H,0000H);
 CODE(0000H,0200H,0002H,0200H,8080H,0000H,8002H,0200H);
 CODE(8000H,0000H,8080H,0000H,0082H,0000H,8082H,0200H);
 CODE(0002H,0200H,0082H,0000H,8080H,0200H,0080H,0000H);
 CODE(8000H,0200H,8002H,0000H,0000H,0000H,0002H,0000H);
 CODE(0080H,0000H,8080H,0200H,0082H,0200H,8000H,0000H);
 CODE(8082H,0000H,0000H,0200H,8002H,0200H,1004H,2004H);
 CODE(0000H,0000H,0004H,2000H,1004H,0000H,1000H,0004H);
 CODE(0000H,2004H,1000H,2000H,0004H,2000H,0000H,2000H);
 CODE(1004H,0004H,0000H,0004H,1000H,2000H,0004H,0004H);
 CODE(1004H,2000H,1004H,0000H,0000H,0004H,0004H,0000H);
 CODE(1000H,2004H,1004H,0004H,0000H,2000H,0004H,2004H);
 CODE(1000H,0000H,0000H,0000H,0004H,0004H,1000H,2004H);
 CODE(0004H,2004H,1004H,2000H,1000H,0004H,1000H,0000H);
 CODE(0004H,0000H,0000H,2004H,1004H,2004H,0004H,0004H);
 CODE(1004H,2000H,1000H,2000H,0004H,2004H,1004H,2004H);
 CODE(0004H,0004H,1000H,0004H,0000H,0000H,1000H,0000H);
 CODE(0000H,2004H,0004H,0000H,1004H,0004H,0000H,2000H);
 CODE(1000H,0000H,0004H,2004H,1000H,2004H,1004H,2000H);
 CODE(0000H,2000H,0000H,0000H,1000H,0004H,0000H,0004H);
 CODE(1004H,2004H,0004H,2000H,1004H,0000H,1004H,0004H);
 CODE(0004H,0000H,0000H,2004H,1000H,2000H,1000H,2004H);
 CODE(0000H,0004H,1004H,0000H,0004H,2000H,4100H,0000H);
 CODE(0101H,0040H,0000H,0040H,4100H,0040H,4001H,0000H);
 CODE(0100H,0000H,4100H,0040H,0001H,0040H,0100H,0040H);
 CODE(0001H,0000H,0101H,0000H,4000H,0000H,4101H,0040H);
 CODE(4000H,0040H,4000H,0000H,4101H,0000H,0000H,0000H);
 CODE(4001H,0000H,0101H,0040H,0000H,0040H,4000H,0040H);
 CODE(4101H,0040H,0001H,0000H,4100H,0000H,4101H,0000H);
 CODE(0100H,0040H,4001H,0040H,0101H,0000H,0001H,0040H);
 CODE(0000H,0000H,0100H,0000H,4001H,0040H,0101H,0040H);
 CODE(0000H,0040H,4000H,0000H,0001H,0000H,4000H,0040H);
 CODE(4001H,0000H,0101H,0000H,4100H,0040H,0000H,0000H);
 CODE(0101H,0040H,0001H,0040H,4101H,0000H,4001H,0000H);
 CODE(0100H,0000H,4101H,0040H,4000H,0000H,4001H,0040H);
 CODE(4100H,0000H,0100H,0000H,4101H,0040H,0001H,0000H);
 CODE(0100H,0040H,4100H,0040H,0001H,0040H,0100H,0040H);
 CODE(0000H,0000H,4101H,0000H,4000H,0040H,4100H,0000H);
 CODE(4001H,0040H,0000H,0040H,0101H,0000H,0010H,0402H);
 CODE(0400H,0400H,0000H,0002H,0410H,0402H,0000H,0000H);
 CODE(0410H,0000H,0400H,0402H,0010H,0002H,0410H,0400H);
 CODE(0400H,0002H,0400H,0000H,0000H,0402H,0400H,0002H);
 CODE(0010H,0402H,0010H,0000H,0400H,0000H,0410H,0002H);
 CODE(0010H,0400H,0000H,0400H,0000H,0002H,0010H,0400H);
 CODE(0400H,0402H,0410H,0000H,0000H,0400H,0000H,0402H);
 CODE(0000H,0000H,0010H,0002H,0410H,0400H,0400H,0400H);
 CODE(0410H,0002H,0410H,0402H,0010H,0000H,0410H,0002H);
 CODE(0000H,0402H,0010H,0000H,0400H,0002H,0010H,0400H);
 CODE(0400H,0400H,0000H,0002H,0410H,0000H,0400H,0402H);
 CODE(0000H,0000H,0000H,0400H,0010H,0002H,0000H,0000H);
 CODE(0410H,0002H,0410H,0400H,0000H,0400H,0400H,0000H);
 CODE(0410H,0402H,0010H,0402H,0010H,0000H,0410H,0402H);
 CODE(0000H,0002H,0400H,0400H,0010H,0402H,0010H,0002H);
 CODE(0010H,0400H,0410H,0000H,0400H,0402H,0000H,0402H);
 CODE(0400H,0000H,0400H,0002H,0410H,0400H,0200H,0000H);
 CODE(0000H,4000H,0000H,0100H,0200H,4108H,0200H,4008H);
 CODE(0200H,0100H,0000H,4108H,0200H,4000H,0000H,4000H);
 CODE(0000H,0008H,0200H,0008H,0000H,4100H,0200H,0108H);
 CODE(0200H,4008H,0200H,4100H,0000H,0000H,0000H,4100H);
 CODE(0200H,0000H,0000H,4008H,0000H,0108H,0200H,0100H);
 CODE(0000H,4108H,0000H,0000H,0200H,0008H,0000H,0008H);
 CODE(0200H,0108H,0200H,4108H,0000H,4008H,0200H,4000H);
 CODE(0000H,0100H,0000H,0108H,0200H,4100H,0200H,4100H);
 CODE(0200H,0108H,0000H,4008H,0200H,4000H,0000H,4000H);
 CODE(0000H,0008H,0200H,0008H,0200H,0100H,0200H,0000H);
 CODE(0000H,4100H,0200H,4108H,0000H,0000H,0000H,4108H);
 CODE(0200H,0000H,0000H,0100H,0000H,4008H,0200H,0108H);
 CODE(0000H,0100H,0000H,0000H,0200H,4108H,0200H,4008H);
 CODE(0200H,4100H,0000H,0108H,0000H,4000H,0000H,4100H);
 CODE(0200H,4008H,0200H,0100H,0000H,0108H,0000H,0008H);
 CODE(0000H,4108H,0200H,4000H,0200H,0008H,2000H,0010H);
 CODE(0008H,0010H,0000H,0000H,2008H,0800H,0008H,0010H);
 CODE(0000H,0800H,2000H,0810H,0008H,0000H,0000H,0810H);
 CODE(2008H,0810H,0008H,0800H,2000H,0000H,2000H,0800H);
 CODE(2000H,0010H,2008H,0000H,0008H,0810H,0008H,0000H);
 CODE(2000H,0810H,2008H,0010H,0000H,0000H,0000H,0800H);
 CODE(0000H,0010H,2008H,0800H,2008H,0010H,2008H,0810H);
 CODE(2008H,0000H,2000H,0000H,0000H,0810H,0000H,0010H);
 CODE(0008H,0800H,0008H,0810H,2000H,0800H,0000H,0810H);
 CODE(2000H,0000H,2000H,0800H,0008H,0810H,2008H,0800H);
 CODE(0008H,0010H,0000H,0000H,2000H,0800H,2000H,0000H);
 CODE(0000H,0800H,2008H,0010H,0008H,0000H,0008H,0010H);
 CODE(2008H,0810H,0008H,0800H,0000H,0010H,2008H,0810H);
 CODE(0008H,0800H,0008H,0000H,2000H,0810H,2000H,0010H);
 CODE(2008H,0000H,0008H,0810H,0000H,0000H,0000H,0800H);
 CODE(2000H,0010H,2000H,0810H,2008H,0800H,2008H,0000H);
 CODE(0000H,0810H,0000H,0010H,2008H,0010H,0000H,1000H);
 CODE(0000H,0080H,0040H,0080H,0040H,0001H,0040H,1081H);
 CODE(0000H,1001H,0000H,1080H,0000H,0000H,0040H,0000H);
 CODE(0040H,0081H,0000H,0081H,0040H,1000H,0000H,0001H);
 CODE(0040H,1080H,0040H,1000H,0000H,0081H,0040H,0081H);
 CODE(0000H,1000H,0000H,1001H,0040H,1081H,0000H,0000H);
 CODE(0040H,0080H,0040H,0001H,0000H,1080H,0040H,1001H);
 CODE(0000H,1081H,0040H,1080H,0000H,0001H,0000H,1081H);
 CODE(0040H,1001H,0000H,0080H,0040H,0000H,0000H,1081H);
 CODE(0040H,1000H,0040H,1001H,0000H,0081H,0000H,1000H);
 CODE(0000H,0080H,0040H,0000H,0040H,1001H,0040H,0081H);
 CODE(0000H,1081H,0000H,1080H,0000H,0000H,0000H,0080H);
 CODE(0040H,0001H,0000H,0001H,0040H,0080H,0000H,0000H);
 CODE(0040H,0081H,0040H,0080H,0000H,1080H,0000H,0081H);
 CODE(0000H,1000H,0040H,1081H,0040H,0000H,0040H,1080H);
 CODE(0000H,0001H,0000H,1001H,0040H,1081H,0040H,0001H);
 CODE(0040H,1080H,0040H,1000H,0000H,1001H,0820H,0020H);
 CODE(0820H,8000H,0000H,8020H,0000H,0000H,0800H,8000H);
 CODE(0020H,0020H,0820H,0000H,0820H,8020H,0000H,0020H);
 CODE(0800H,0000H,0020H,8000H,0000H,8020H,0020H,8020H);
 CODE(0800H,8020H,0800H,0020H,0820H,0000H,0000H,8000H);
 CODE(0020H,8020H,0020H,0020H,0800H,8000H,0820H,8020H);
 CODE(0800H,0020H,0000H,0000H,0020H,8000H,0800H,0000H);
 CODE(0020H,0000H,0800H,8020H,0820H,0020H,0020H,0000H);
 CODE(0000H,8000H,0820H,8000H,0000H,0020H,0020H,0000H);
 CODE(0000H,8000H,0800H,0020H,0820H,8020H,0000H,8020H);
 CODE(0800H,0000H,0000H,0000H,0020H,8000H,0820H,0020H);
 CODE(0800H,8020H,0800H,8000H,0020H,0020H,0820H,8000H);
 CODE(0000H,0020H,0020H,0020H,0800H,8000H,0820H,8020H);
 CODE(0020H,0000H,0820H,0000H,0800H,0020H,0020H,8000H);
 CODE(0000H,8020H,0800H,8020H,0820H,0000H,0000H,0020H);
 CODE(0820H,8000H,0020H,8020H,0000H,0000H,0800H,0000H);
 CODE(0820H,0020H,0000H,8000H,0020H,8020H,0000H,0000H);
 CODE(0000H,0010H,2000H,0000H,2000H,0010H,0001H,0000H);
 CODE(0001H,0010H,2001H,0000H,2001H,0010H,0000H,0800H);
 CODE(0000H,0810H,2000H,0800H,2000H,0810H,0001H,0800H);
 CODE(0001H,0810H,2001H,0800H,2001H,0810H,0000H,0020H);
 CODE(0000H,0030H,2000H,0020H,2000H,0030H,0001H,0020H);
 CODE(0001H,0030H,2001H,0020H,2001H,0030H,0000H,0820H);
 CODE(0000H,0830H,2000H,0820H,2000H,0830H,0001H,0820H);
 CODE(0001H,0830H,2001H,0820H,2001H,0830H,0008H,0000H);
 CODE(0008H,0010H,2008H,0000H,2008H,0010H,0009H,0000H);
 CODE(0009H,0010H,2009H,0000H,2009H,0010H,0008H,0800H);
 CODE(0008H,0810H,2008H,0800H,2008H,0810H,0009H,0800H);
 CODE(0009H,0810H,2009H,0800H,2009H,0810H,0008H,0020H);
 CODE(0008H,0030H,2008H,0020H,2008H,0030H,0009H,0020H);
 CODE(0009H,0030H,2009H,0020H,2009H,0030H,0008H,0820H);
 CODE(0008H,0830H,2008H,0820H,2008H,0830H,0009H,0820H);
 CODE(0009H,0830H,2009H,0820H,2009H,0830H,0000H,0000H);
 CODE(0200H,0000H,0000H,2000H,0200H,2000H,0020H,0000H);
 CODE(0220H,0000H,0020H,2000H,0220H,2000H,0000H,0004H);
 CODE(0200H,0004H,0000H,2004H,0200H,2004H,0020H,0004H);
 CODE(0220H,0004H,0020H,2004H,0220H,2004H,0000H,0400H);
 CODE(0200H,0400H,0000H,2400H,0200H,2400H,0020H,0400H);
 CODE(0220H,0400H,0020H,2400H,0220H,2400H,0000H,0404H);
 CODE(0200H,0404H,0000H,2404H,0200H,2404H,0020H,0404H);
 CODE(0220H,0404H,0020H,2404H,0220H,2404H,1000H,0000H);
 CODE(1200H,0000H,1000H,2000H,1200H,2000H,1020H,0000H);
 CODE(1220H,0000H,1020H,2000H,1220H,2000H,1000H,0004H);
 CODE(1200H,0004H,1000H,2004H,1200H,2004H,1020H,0004H);
 CODE(1220H,0004H,1020H,2004H,1220H,2004H,1000H,0400H);
 CODE(1200H,0400H,1000H,2400H,1200H,2400H,1020H,0400H);
 CODE(1220H,0400H,1020H,2400H,1220H,2400H,1000H,0404H);
 CODE(1200H,0404H,1000H,2404H,1200H,2404H,1020H,0404H);
 CODE(1220H,0404H,1020H,2404H,1220H,2404H,0000H,0000H);
 CODE(0000H,0001H,0004H,0000H,0004H,0001H,0100H,0000H);
 CODE(0100H,0001H,0104H,0000H,0104H,0001H,0000H,0002H);
 CODE(0000H,0003H,0004H,0002H,0004H,0003H,0100H,0002H);
 CODE(0100H,0003H,0104H,0002H,0104H,0003H,0000H,0200H);
 CODE(0000H,0201H,0004H,0200H,0004H,0201H,0100H,0200H);
 CODE(0100H,0201H,0104H,0200H,0104H,0201H,0000H,0202H);
 CODE(0000H,0203H,0004H,0202H,0004H,0203H,0100H,0202H);
 CODE(0100H,0203H,0104H,0202H,0104H,0203H,0800H,0000H);
 CODE(0800H,0001H,0804H,0000H,0804H,0001H,0900H,0000H);
 CODE(0900H,0001H,0904H,0000H,0904H,0001H,0800H,0002H);
 CODE(0800H,0003H,0804H,0002H,0804H,0003H,0900H,0002H);
 CODE(0900H,0003H,0904H,0002H,0904H,0003H,0800H,0200H);
 CODE(0800H,0201H,0804H,0200H,0804H,0201H,0900H,0200H);
 CODE(0900H,0201H,0904H,0200H,0904H,0201H,0800H,0202H);
 CODE(0800H,0203H,0804H,0202H,0804H,0203H,0900H,0202H);
 CODE(0900H,0203H,0904H,0202H,0904H,0203H,0000H,0000H);
 CODE(0010H,0000H,0000H,0100H,0010H,0100H,0000H,0008H);
 CODE(0010H,0008H,0000H,0108H,0010H,0108H,0000H,1000H);
 CODE(0010H,1000H,0000H,1100H,0010H,1100H,0000H,1008H);
 CODE(0010H,1008H,0000H,1108H,0010H,1108H,0400H,0000H);
 CODE(0410H,0000H,0400H,0100H,0410H,0100H,0400H,0008H);
 CODE(0410H,0008H,0400H,0108H,0410H,0108H,0400H,1000H);
 CODE(0410H,1000H,0400H,1100H,0410H,1100H,0400H,1008H);
 CODE(0410H,1008H,0400H,1108H,0410H,1108H,0002H,0000H);
 CODE(0012H,0000H,0002H,0100H,0012H,0100H,0002H,0008H);
 CODE(0012H,0008H,0002H,0108H,0012H,0108H,0002H,1000H);
 CODE(0012H,1000H,0002H,1100H,0012H,1100H,0002H,1008H);
 CODE(0012H,1008H,0002H,1108H,0012H,1108H,0402H,0000H);
 CODE(0412H,0000H,0402H,0100H,0412H,0100H,0402H,0008H);
 CODE(0412H,0008H,0402H,0108H,0412H,0108H,0402H,1000H);
 CODE(0412H,1000H,0402H,1100H,0412H,1100H,0402H,1008H);
 CODE(0412H,1008H,0402H,1108H,0412H,1108H,0000H,0000H);
 CODE(1000H,0000H,0001H,0000H,1001H,0000H,0000H,0004H);
 CODE(1000H,0004H,0001H,0004H,1001H,0004H,2000H,0000H);
 CODE(3000H,0000H,2001H,0000H,3001H,0000H,2000H,0004H);
 CODE(3000H,0004H,2001H,0004H,3001H,0004H,0010H,0000H);
 CODE(1010H,0000H,0011H,0000H,1011H,0000H,0010H,0004H);
 CODE(1010H,0004H,0011H,0004H,1011H,0004H,2010H,0000H);
 CODE(3010H,0000H,2011H,0000H,3011H,0000H,2010H,0004H);
 CODE(3010H,0004H,2011H,0004H,3011H,0004H,0000H,1000H);
 CODE(1000H,1000H,0001H,1000H,1001H,1000H,0000H,1004H);
 CODE(1000H,1004H,0001H,1004H,1001H,1004H,2000H,1000H);
 CODE(3000H,1000H,2001H,1000H,3001H,1000H,2000H,1004H);
 CODE(3000H,1004H,2001H,1004H,3001H,1004H,0010H,1000H);
 CODE(1010H,1000H,0011H,1000H,1011H,1000H,0010H,1004H);
 CODE(1010H,1004H,0011H,1004H,1011H,1004H,2010H,1000H);
 CODE(3010H,1000H,2011H,1000H,3011H,1000H,2010H,1004H);
 CODE(3010H,1004H,2011H,1004H,3011H,1004H,0000H,0000H);
 CODE(0800H,0000H,0000H,0008H,0800H,0008H,0000H,0400H);
 CODE(0800H,0400H,0000H,0408H,0800H,0408H,0002H,0000H);
 CODE(0802H,0000H,0002H,0008H,0802H,0008H,0002H,0400H);
 CODE(0802H,0400H,0002H,0408H,0802H,0408H,0000H,0001H);
 CODE(0800H,0001H,0000H,0009H,0800H,0009H,0000H,0401H);
 CODE(0800H,0401H,0000H,0409H,0800H,0409H,0002H,0001H);
 CODE(0802H,0001H,0002H,0009H,0802H,0009H,0002H,0401H);
 CODE(0802H,0401H,0002H,0409H,0802H,0409H,0200H,0000H);
 CODE(0A00H,0000H,0200H,0008H,0A00H,0008H,0200H,0400H);
 CODE(0A00H,0400H,0200H,0408H,0A00H,0408H,0202H,0000H);
 CODE(0A02H,0000H,0202H,0008H,0A02H,0008H,0202H,0400H);
 CODE(0A02H,0400H,0202H,0408H,0A02H,0408H,0200H,0001H);
 CODE(0A00H,0001H,0200H,0009H,0A00H,0009H,0200H,0401H);
 CODE(0A00H,0401H,0200H,0409H,0A00H,0409H,0202H,0001H);
 CODE(0A02H,0001H,0202H,0009H,0A02H,0009H,0202H,0401H);
 CODE(0A02H,0401H,0202H,0409H,0A02H,0409H,0000H,0000H);
 CODE(0000H,0100H,0008H,0000H,0008H,0100H,0100H,0000H);
 CODE(0100H,0100H,0108H,0000H,0108H,0100H,0000H,0010H);
 CODE(0000H,0110H,0008H,0010H,0008H,0110H,0100H,0010H);
 CODE(0100H,0110H,0108H,0010H,0108H,0110H,0020H,0000H);
 CODE(0020H,0100H,0028H,0000H,0028H,0100H,0120H,0000H);
 CODE(0120H,0100H,0128H,0000H,0128H,0100H,0020H,0010H);
 CODE(0020H,0110H,0028H,0010H,0028H,0110H,0120H,0010H);
 CODE(0120H,0110H,0128H,0010H,0128H,0110H,0000H,0200H);
 CODE(0000H,0300H,0008H,0200H,0008H,0300H,0100H,0200H);
 CODE(0100H,0300H,0108H,0200H,0108H,0300H,0000H,0210H);
 CODE(0000H,0310H,0008H,0210H,0008H,0310H,0100H,0210H);
 CODE(0100H,0310H,0108H,0210H,0108H,0310H,0020H,0200H);
 CODE(0020H,0300H,0028H,0200H,0028H,0300H,0120H,0200H);
 CODE(0120H,0300H,0128H,0200H,0128H,0300H,0020H,0210H);
 CODE(0020H,0310H,0028H,0210H,0028H,0310H,0120H,0210H);
 CODE(0120H,0310H,0128H,0210H,0128H,0310H,0000H,0000H);
 CODE(0400H,0000H,0004H,0000H,0404H,0000H,0000H,0002H);
 CODE(0400H,0002H,0004H,0002H,0404H,0002H,0000H,2000H);
 CODE(0400H,2000H,0004H,2000H,0404H,2000H,0000H,2002H);
 CODE(0400H,2002H,0004H,2002H,0404H,2002H,0000H,0020H);
 CODE(0400H,0020H,0004H,0020H,0404H,0020H,0000H,0022H);
 CODE(0400H,0022H,0004H,0022H,0404H,0022H,0000H,2020H);
 CODE(0400H,2020H,0004H,2020H,0404H,2020H,0000H,2022H);
 CODE(0400H,2022H,0004H,2022H,0404H,2022H,0000H,0800H);
 CODE(0400H,0800H,0004H,0800H,0404H,0800H,0000H,0802H);
 CODE(0400H,0802H,0004H,0802H,0404H,0802H,0000H,2800H);
 CODE(0400H,2800H,0004H,2800H,0404H,2800H,0000H,2802H);
 CODE(0400H,2802H,0004H,2802H,0404H,2802H,0000H,0820H);
 CODE(0400H,0820H,0004H,0820H,0404H,0820H,0000H,0822H);
 CODE(0400H,0822H,0004H,0822H,0404H,0822H,0000H,2820H);
 CODE(0400H,2820H,0004H,2820H,0404H,2820H,0000H,2822H);
 CODE(0400H,2822H,0004H,2822H,0404H,2822H,0000H,0000H);
 CODE(0000H,0000H,0000H,0001H,0000H,0001H,0000H,0001H);
 CODE(0000H,0001H,0000H,0001H,0000H,0001H,0000H,0000H);
 CODE(0000H,0001H,0000H,0001H,0000H,0001H,0000H,0001H);
 CODE(0000H,0001H,0000H,0001H,0000H,0000H,0D2D3H,0D4D5H);
 CODE(0D6D7H,0D8D9H,0DADBH,0DCDDH,0DEDFH,0E0E1H,0E2E3H,0E4E5H);
 CODE(0E6E7H,0E8E9H,0EAEBH,0ECEDH,0EEEFH,0F0F1H,0F2F3H,0F4F5H);
 CODE(0F6F7H,0F8F9H,0FAFBH,0FCFDH,0FEFFH,0001H,0203H,0405H);
 CODE(0607H,0809H,0A0BH,0506H,0708H,090AH,0B0CH,0D0EH);
 CODE(0F10H,1112H,1314H,1516H,1718H,191AH,1B1CH,1D1EH);
 CODE(1F20H,2122H,2324H,2520H,2122H,2324H,2526H,2728H);
 CODE(292AH,2B2CH,2D2EH,2F30H,3132H,3334H,3536H,3738H);
 CODE(393AH,3B3CH,3D3EH,3F40H,4142H,4344H,2E2FH,3031H);
 CODE(3233H,3435H,3637H,3839H,4142H,4344H,4546H,4748H);
 CODE(494AH,4B4CH,4D4EH,4F50H,5152H,5354H,5556H,5758H);
 CODE(595AH,6162H,6364H,6566H,6768H,696AH,6B6CH,6D6EH);
 CODE(6F70H,7172H,7374H,7576H,7778H,797AH);
END crypt;
#if (defined MM2) || (defined TDIM2)
__PROCFRAME_ON__
#endif
END fcrypt.
