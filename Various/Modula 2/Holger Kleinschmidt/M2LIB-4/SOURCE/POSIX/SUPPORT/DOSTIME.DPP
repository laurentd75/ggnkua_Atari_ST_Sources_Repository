DEFINITION MODULE DosTime;
__DEF_SWITCHES__
#ifdef HM2
#ifdef __LONG_WHOLE__
(*$!i+: Modul muss mit $i- uebersetzt werden! *)
(*$!w+: Modul muss mit $w- uebersetzt werden! *)
#else
(*$!i-: Modul muss mit $i+ uebersetzt werden! *)
(*$!w-: Modul muss mit $w+ uebersetzt werden! *)
#endif
#endif
(*****************************************************************************)
(* DOS <-> UNIX-Datum                                                        *)
(* --------------------------------------------------------------------------*)
(* 06-Jan-96, Holger Kleinschmidt                                            *)
(*****************************************************************************)

FROM PORTAB IMPORT
(* TYPE *) UNSIGNEDLONG, UNSIGNEDWORD, WORDSET;

FROM types IMPORT
(* TYPE *) timeT;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

CONST
  SECSPERMIN  = LC(60);       (*                  60  *)
  SECSPERHOUR = LC(3600);     (*             60 * 60  *)
  SECSPERDAY  = LC(86400);    (*        24 * 60 * 60  *)
  SECSPERYEAR = LC(31536000); (*  365 * 24 * 60 * 60  *)

TYPE
  TimeCast = RECORD
    CASE TAG_COLON BOOLEAN OF
      (* Richtige Reihenfolge fuer 'Fdatime' usw. *)
      FALSE: dtime : WORDSET;
             ddate : WORDSET;
     |TRUE : xtime : timeT;
    END;
  END;

TYPE
  DayMonth = ARRAY [FALSE..TRUE] OF
               ARRAY [0..11] OF UNSIGNEDWORD;

TYPE
  DosDate = RECORD
    year : UNSIGNEDWORD; (* [1980..2099] *)
    mon  : UNSIGNEDWORD; (* [0..11] *)
    day  : UNSIGNEDWORD; (* [1..31] *)
    hour : UNSIGNEDWORD; (* [0..23] *)
    min  : UNSIGNEDWORD; (* [0..59] *)
    sec  : UNSIGNEDWORD; (* [0..58] *)
    (* Nicht von DOS unterstuetzt: *)
    yday : UNSIGNEDWORD; (* [0..365] *)
    wday : UNSIGNEDWORD; (* [0..6] *)
  END;

VAR
  DaysPerMonth : DayMonth; (* Tage im Monat *)
  MonthDays    : DayMonth; (* Tage im Jahr bis zum Monat *)

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

PROCEDURE DecodeDate ((* EIN/ -- *)     date    : WORDSET;
                      (* EIN/ -- *)     time    : WORDSET;
                      (* -- /AUS *) VAR decoded : DosDate );

PROCEDURE EncodeDate ((* EIN/ -- *) VAR encoded : DosDate;
                      (* -- /AUS *) VAR date    : WORDSET;
                      (* -- /AUS *) VAR time    : WORDSET );

(* Konvertieren ein Datum zwischen dem Typ 'DosDate' und den Formaten, die
   bei 'Tgetdate' und 'Tgetdate' verwendet werden. Die Felder 'wday' und
   'yday' von 'Dosdate' werden nicht beruecksichtigt.
 *)


PROCEDURE DateToSeconds ((* EIN/ -- *) VAR date : DosDate ): UNSIGNEDLONG;

PROCEDURE SecondsToDate ((* EIN/ -- *)     time : UNSIGNEDLONG;
                         (* -- /AUS *) VAR date : DosDate      );

(* Konvertieren ein Datum zwischen dem Typ 'DosDate' und der Anzahl von
   Sekunden seit dem 1.1.1970 0:00 Uhr lokaler Zeit, also ohne
   Zeitzonenkorrektur zu UTC. Die Felder 'wday' und 'yday' von <date>
   werden bei "DateToSeconds()" nicht verwendet aber von "SecondsToDate()"
   korrekt gesetzt.
 *)

END DosTime.
