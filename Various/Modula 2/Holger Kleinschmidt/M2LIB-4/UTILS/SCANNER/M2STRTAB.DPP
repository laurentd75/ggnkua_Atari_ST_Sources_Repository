DEFINITION MODULE M2StrTable;
__DEF_SWITCHES__
#ifdef HM2
#ifdef __LONG_WHOLE__
(*$!i+: Modul muss mit $i- uebersetzt werden! *)
(*$!w+: Modul muss mit $w- uebersetzt werden! *)
#else
(*$!i-: Modul muss mit $i+ uebersetzt werden! *)
(*$!w-: Modul muss mit $w+ uebersetzt werden! *)
#endif
#endif
(*****************************************************************************)
(* Dynamische Stringtabelle fuer die Repraesentation von Bezeichnern, Zahlen *)
(* und Schluesselwoertern. Die Stringrepraesentationen sind Teil der         *)
(* Symboltabelle eines Compilers.                                            *)
(* --------------------------------------------------------------------------*)
(* 28-Aug-96, Holger Kleinschmidt                                            *)
(*****************************************************************************)

FROM M2Syms IMPORT
(* TYPE *) Symbols;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

TYPE
  StrRepr;

(*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*)

 PROCEDURE NewStrRepr;

 PROCEDURE AddStrReprCh ((* EIN/ -- *) ch : CHAR );

 PROCEDURE EndStrRepr ((* -- /AUS *) VAR repr : StrRepr );
 (* Mit diesen drei Prozeduren kann eine Stringrepraesentation angelegt
    werden. Zu Anfang wird "NewStrRepr()" aufgerufen, dann kann der String
    Zeichen fuer Zeichen mit "AddStrReprCh()" waehrend des Scannens
    uebernommen werden; dadurch ist die Laenge nicht begrenzt. Zum Schluss
    wird "EndStrRepr()" ausgefuehrt, das eine eindeutige Kennung der
    Repraesentation zurueckliefert. War der String bereits in der Tabelle
    enthalten, wird lediglich die alte Kennung geliefert, sonst wird
    ein neuer Eintrag angelegt.
  *)

 PROCEDURE CreateStrRepr ((* EIN/ -- *) REF str  : ARRAY OF CHAR;
                          (* EIN/ -- *)     sym  : Symbols;
                          (* -- /AUS *) VAR repr : StrRepr );
 (* Vereinigt die drei oberen Prozeduren fuer Strings bekannter Laenge *)


 PROCEDURE EmptyStrRepr ((* -- /AUS *) VAR repr : StrRepr );
 (* Setzt <repr> auf einen definierten Wert, der eine ungueltige
  * Repraesentation anzeigt.
  *)

 PROCEDURE IsStrRepr ((* EIN/ -- *) repr : StrRepr ): BOOLEAN;
 (* Testet, ob <repr> eine gueltige Repraesentation ist *)



 PROCEDURE HasSymbol ((* EIN/ -- *) repr : StrRepr ): BOOLEAN;
 (* Testet, ob <repr> ein Symbol ungleich 'ErrorSym' besitzt *)

 PROCEDURE SetSymbol ((* EIN/ -- *) repr : StrRepr;
                      (* EIN/ -- *) sym  : Symbols );
 (* Macht <sym> zum Symbol von <repr> *)

 PROCEDURE GetSymbol ((* EIN/ -- *)     repr : StrRepr;
                      (* EIN/ -- *) VAR sym  : Symbols );
 (* Liefert das Symbol von <repr> in <sym> *)



 PROCEDURE GetStrRepr ((* EIN/ -- *)     repr : StrRepr;
                       (* -- /AUS *) VAR str  : ARRAY OF CHAR;
                       (* -- /AUS *) VAR done : BOOLEAN );
 (* Liefert die Stringrepraesentation von <repr> in <str>.
  * Falls <str> gross genug war, ist <done> gleich TRUE.
  *)

 PROCEDURE StrReprLen ((* EIN/ -- *) repr : StrRepr ): CARDINAL;
 (* Liefert die Laenge der Stringrepraesentation von <repr> *)

END M2StrTable.
