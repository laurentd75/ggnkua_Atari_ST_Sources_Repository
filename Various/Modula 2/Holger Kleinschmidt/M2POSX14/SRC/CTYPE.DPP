DEFINITION MODULE ctype;
__DEF_SWITCHES__
#ifdef HM2
#ifdef __LONG_WHOLE__
(*$!i+: Modul muss mit $i- uebersetzt werden! *)
(*$!w+: Modul muss mit $w- uebersetzt werden! *)
#else
(*$!i-: Modul muss mit $i+ uebersetzt werden! *)
(*$!w-: Modul muss mit $w+ uebersetzt werden! *)
#endif
#endif
(*****************************************************************************)
(* Tests und Umwandlungsfunktionen fuer Klassen von Zeichen. Diese ent-      *)
(* sprechen den Ansi-C-Funktionen, allerdings sind die Argumente keine       *)
(* INTEGER-Werte, sondern tatsaechlich Zeichen.                              *)
(*                                                                           *)
(* Die Funktionen werden durch das Locale 'LC_CTYPE' beeinflusst.            *)
(* --------------------------------------------------------------------------*)
(* 18-Apr-94, Holger Kleinschmidt                                            *)
(*****************************************************************************)

PROCEDURE iscntrl  ((* EIN/ -- *) c : CHAR ): BOOLEAN;
PROCEDURE isspace  ((* EIN/ -- *) c : CHAR ): BOOLEAN;
PROCEDURE islower  ((* EIN/ -- *) c : CHAR ): BOOLEAN;
PROCEDURE isupper  ((* EIN/ -- *) c : CHAR ): BOOLEAN;
PROCEDURE isalpha  ((* EIN/ -- *) c : CHAR ): BOOLEAN;
PROCEDURE isdigit  ((* EIN/ -- *) c : CHAR ): BOOLEAN;
PROCEDURE isxdigit ((* EIN/ -- *) c : CHAR ): BOOLEAN;
PROCEDURE isalnum  ((* EIN/ -- *) c : CHAR ): BOOLEAN;
PROCEDURE isgraph  ((* EIN/ -- *) c : CHAR ): BOOLEAN;
PROCEDURE isprint  ((* EIN/ -- *) c : CHAR ): BOOLEAN;
PROCEDURE ispunct  ((* EIN/ -- *) c : CHAR ): BOOLEAN;

PROCEDURE tolower  ((* EIN/ -- *) c : CHAR ): CHAR;
PROCEDURE toupper  ((* EIN/ -- *) c : CHAR ): CHAR;

(* Nicht Ansi-C: *)
PROCEDURE isblank  ((* EIN/ -- *) c : CHAR ): BOOLEAN;

PROCEDURE isascii  ((* EIN/ -- *) c : CHAR ): BOOLEAN;

PROCEDURE tocard   ((* EIN/ -- *) c : CHAR ): CARDINAL;
PROCEDURE todigit  ((* EIN/ -- *) i : CARDINAL ): CHAR;

END ctype.
