DEFINITION MODULE ApplTool;

(*
Application Tools.

UK __DATE__ __TIME__
*)

(*DEF_SWITCHES*)

FROM PORTAB IMPORT SIGNEDWORD,UNSIGNEDWORD;

(* converts some ids using special codes of ApplFind() - works only for
   MultiTOS

   sample call:

   ApId:= ApplConv(-1,pid); pid of any process

   pid:= ApplConv(-2,ApId); ApId of any application

   ApId:= ApplConv(0,0); ApId of the current process
*)

PROCEDURE ApplConv(Mode: SIGNEDWORD; Id: SIGNEDWORD): SIGNEDWORD;

(* inquire some system informations:

Type = 0: Out1 = font height of the normal AES font
          Out2 = font id
          Out3 = type of font:
                   0 = system font
                   1 = FSM-GDOS font
                 >=2 = reserved

Type = 1: Out1 = font height of the small AES font
          Out2 = font id
          Out3 = type of font:
                   0 = system font
                   1 = FSM-GDOS font
                 >=2 = reserved

Type = 2: Out1 = current screen resolution
          Out2 = number of colors supported by the AES
          Out3 = supporting color icons yes/no
          Out4 = new resource file format yes/no

Type = 3: Out1 = language:
                   0 = english
                   1 = german
                   2 = french
                   3 = reserved
                   4 = spanish
                   5 = italian
                   6 = swedish (not implemented)

Type = 4: Out1 = pre-emptive multitasking yes/no
          Out2 = extended appl_find modes supported yes/no
          Out3 = appl_search implemented yes/no
          Out4 = rsrc_rcfix implemented yes/no

Type = 5: Out1 = objc_xfind implemented yes/no
          Out2 = reserved
          Out3 = menu_click implemented yes/no
          Out4 = shel_r/ddef implemented yes/no

Type = 6:

Type = 7: reserved

Type = 8:

Type = 9: Out1 = submenus supported yes/no
          Out2 = popup menus supported yes/no
          Out3 = scrollable menus supported yes/no
          Out4 = extended MN_SELECTED message yes/no

Type = 10: Out1: bit 0..7  =
                 bit 8..15 =
           Out2 =
           Out3 =
           Out4 = ARGV parameter passing yes/no

Type = 11: Out1: bit 0  = WF_TOP returns window below current one yes/no
                 bit 1  = wind_get(WF_NEWDESK) supported yes/no
                 bit 2  = WF_COLOR get/set supported yes/no
                 bit 3  = WF_DCOLOR get/set supported yes/no
                 bit 4  = wind_get(WF_OWNER) supported yes/no
                 bit 5  = WF_BEVENT get/set supported yes/no
                 bit 6  = WF_BOTTOM supported yes/no
                 bit 7  = WF_ICONFY supported yes/no
                 bit 8  = WF_UNICONFY supported yes/no
                 bit 9..15 reserved
           Out2: reserved
           Out3: bit 0  = iconfier gadget
                 bit 1  = bottomer gadget
                 bit 2  = shift+click to send window to bottom yes/no
                 bit 3  = hot close box
                 bit 4..15 reserved
           Out4: wind_update check and set allowed yes/no

Type = 12: Out1: bit 0  = WM_NEWTOP message meaningful yes/no
                 bit 1  = WM_UNTOPPED message sent yes/no
                 bit 2  =
                 bit 3  =
                 bit 4  = MultiTOS shutdown and resolution change message
                          yes/no
                 bit 5  = CH_EXIT message sent yes/no
                 bit 6  = WM_BOTTOM message sent yes/no
                 bit 7  = WM_ICONFY message sent yes/no
                 bit 8  = WM_UNICONFY message sent yes/no
                 bit 9  = WM_ALLICONFY message sent yes/n0
                 bit 10 =

           Out2: bit 0  =
                 bit 1  =

           Out3: bit 0  = WM_ICONFY message gives coordinates yes/no
                 bit 1  =

           Out4 = reserved

Type = 13: Out1 = 3D objects supported yes/no
           Out2 = objc_sysvar presence
                    0 = objc_sysvar not present
                    1 = objc_sysvar present
                    2 = extended objc_sysvar present
           Out3 = GDOS fonts within dialogs supported yes/no
           Out4 = reserved

Type = 14: Out1 = flying dialogs supported yes/no
           Out2 = MagiC style keyboard tables supported yes/no
           Out3 = last cursor position is returned yes/no
           Out4 = reserved

caution: this system call only since AES version 4.0 or MagiC 3.0.
         Type > 3 only since AES version 4.1 or MagiC 3.0.
*)

PROCEDURE ApplGetInfo(    Type: UNSIGNEDWORD;
                      VAR Out1: UNSIGNEDWORD;
                      VAR Out2: UNSIGNEDWORD;
                      VAR Out3: UNSIGNEDWORD;
                      VAR Out4: UNSIGNEDWORD);

(* returns a MiNT signal. ApplSignal() is to be called within
   the main event loop. Use a timer event to keep the loop
   running
*)

TYPE ApSignals = (ApSigNull,ApSigInt,ApSigQuit,ApSigTerm);

PROCEDURE ApplSignal(): ApSignals;

END ApplTool.
