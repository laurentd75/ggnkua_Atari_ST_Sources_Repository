DEFINITION MODULE EdPlus;
FROM SYSTEM IMPORT ADDRESS;
FROM VDIRasters IMPORT MFDBType;

FROM GEMVDIbase IMPORT PxyArrayType;
CONST
(*     maxchar = 02000H; *)(* 8K *)
(*    buffsize = 05000H; *)(* = 20K *)(***)(* 00001000H; (***)*) (* 02800H = 10K, 01000H = 4K, 02000H = 8K *)
          lm = 2; (* left margin *)
(*+
        colW = 8; (* for any resolution *)
+*)
   RETURNKEY = 01C0DH; (* Return key keycode *)
(*ds*)
   macrosize = 81; (* space for each macro *)
   configname = 'EDITPLUS.CFG';
(*ds*)
  (* Registers *)
  D0 = 0;
  D1 = 1;
  D2 = 2;
  D3 = 3;
  A0 = 8;
  A1 = 9;
  A2 = 10;
  A3 = 11;
  A4 = 12;
  A5 = 13;
  A6 = 14;
  A7 = 15; (* user stack pointer *)

TYPE
     Substrg = ARRAY[0..20] OF CHAR;
     Fseltype = ARRAY[0..100] OF CHAR; (* increased from 60 to 100 1/15/92 *)
     Pathtype = ARRAY[0..88] OF CHAR;
     Fsel0type = ARRAY[0..12] OF CHAR;
(*ds*)
     Macrotype = ARRAY[0..macrosize] OF CHAR;
(*ds*)
     IORectype = RECORD
                   ibuffadr: ADDRESS;
                   ibuffsize,
                   ibuffhead,
                   ibufftail: CARDINAL;
                 END;

VAR
  cfg:  RECORD
          tabspaces,
          eollen,
          textwrapW,
          printmargin,
          maxdispline:  CARDINAL;
          defoverwrite: INTEGER; (* default to overwrite in save dialog? *)
          eolchar:      CHAR;
          insertmode,
          casesens,    (* default to case sensitive in search dialog? *)
          autowrap,
          autoload,
          printsetup,  (* use macro 10 as printer setup string? *)
          dobak,       (* create BAK for every save *)
          hackable: BOOLEAN;  (* allow going Disk & RAM editing *)
          deffind: INTEGER;   (* pick/find in loadbigpart & viewram *)
          fsel0:        Fsel0type;
          oldpath:      Pathtype;
(*ds*)
          macro:       ARRAY[1..10] OF Macrotype; (* [0..macrosize] OF CHAR; *)
(*ds*)
          autoindent: BOOLEAN;
          eurodate:   CHAR; (* 3.2 *)
          hexdisp,
          needclick:   BOOLEAN;
          charht, wind1Y,wind1X,wind1W:  INTEGER; (* saved small wind1Y *)
(* start 3.1 additions *)
          printinit, printend: Substrg; (* 3.1 *)
(**
    block end CR? FF?
    Serial port = modem or printer?
      strip serial LF's?
      serial printinit?
      serial left margin?
**)
          maxbuff, minsys: LONGCARD; (* max buffsize, min remaining system *)
          eolstrg: ARRAY[0..2] OF CHAR;
          askall: INTEGER; (* default query/all for replace *)
          kwikstrip: INTEGER; (* default strip cr/lf for kwiksend *)
          reserved: ARRAY[0..17] OF CHAR; (* save space for later use *)
(*
          reserved: ARRAY[0..19] OF CHAR; (* save space for later use *)
*)
        END; (* config record *)

(*
  kbdrec: IORectype;
*)
(*
  kbdbuffadr: ADDRESS; (* for saving 'old' address & size *)
  kbdbuffsize: CARDINAL;
*)
  kbdrecptr: POINTER TO IORectype;
(*
  charray:              ARRAY[0..maxchar] OF CHAR;
  lnptrarray:           ARRAY[0..maxlines] OF CARDINAL;
*)
  (* 2.30 1/30/92 *)
  DTA:       ARRAY[0..43] OF CHAR; (* 44-byte GEM disk transfer address buffer *)
  daccTitle: ARRAY[0..12] OF CHAR;
  notistrg:  ARRAY[0..9] OF CHAR; (* for notice *)
  pipeBuff:                     ARRAY[0..7] OF INTEGER;

  mark:                         ARRAY[0..3] OF LONGCARD; (* bookmarks *)

  newchar, typeahead (*, eolchar *):       CHAR;
    (* typeahead: 0C = none, 1C = stalker, 2C = outdev *)
  ok, bigpart, ismdx, saved:  BOOLEAN;

  kreturn, saveline, line, lastline, outdev,
  linepos, maxpos, newlinepos, startcol, pageW, wrapW,
  lastcol, curdispline,
  linelen, displaylen,  leftedge, blocktype,
  counter, byteslin, maxlines, vcurx:        CARDINAL;

  VDIHandle, Window1, topwind,
  fullX, fullY, fullW, fullH,
  Appl, dacc, (* maxX,*) maxY, workX,workY,workW,workH,
  rowH, colW, (* res,*) defrowH, (* useme1 *) useme2, useme3, wind1H, vcury:  INTEGER;

  i, last, blockstart, blockend, pastelen, accbuffsize,
  delstart, buffsize, newbuffsize, fileend, lasti, tmplong:  LONGCARD;

  ptr1, ptr2:         POINTER TO CHAR;
  cardptr, mresetptr: POINTER TO CARDINAL;
  longptr:            POINTER TO LONGCARD;
  adrptr:             POINTER TO ADDRESS;
  startadr, lineAadr, (* vfntad *) screenadr,
  bpadr, lnptradr, newlnptradr, olddta:          ADDRESS;
  mhideptr:         POINTER TO INTEGER;
  mfdb :            POINTER TO MFDBType; (* memory form definition block *)
  clipxy2:          PxyArrayType;
(*ds*)
  configpath:       Pathtype;
(*ds*)
  fsel:             Fseltype;
  diaryname:        Fsel0type;
  startf, endf:     LONGCARD; (* file pointers to start/end of bigpart *)

PROCEDURE InitMenu;
PROCEDURE PageBigFile(forward, ask: BOOLEAN): BOOLEAN;
PROCEDURE ShowNew;

END EdPlus.
