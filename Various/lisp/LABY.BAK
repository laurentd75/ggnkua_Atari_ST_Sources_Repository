;;; CODAGE DU LABYRINTHE ;;;

(setq laby '( (a1 * b1)       (b1 a1 b2)         (c1 c2 d1)
              (a2 a3 b2)      (b2 a2 b1)         (c2 c3 c1)
              (a3 a4 b3 a2)   (b3  a3)           (c3 d3 c2)
              (a4 a5 a3)      (b4 b5 c4)         (c4 b4 d4)
              (a5 a6 a4)      (b5 b6 b4)         (c5 c6 d5)
              (a6 a7 a5)      (b6 b5)            (c6 d6 c5)
              (a7 b7 a6)      (b7 a7 c7)         (c7 b7 d7)

              (d1 c1 e1)      (e1 d1 f1)         (f1 e1 f2)
              (d2 c2 e2)      (e2 d2 e3)         (f2 f1 f3)
              (d3 c3 e3)      (e3 d3 e4 e2)      (f3 f2 f4)
              (d4 c4 e4)      (e4 d4 e5 e3)      (f4 f3 f5)
              (d5 c5)         (e5 e6 e4)         (f5 f4 f6)
              (d6 c6 d7 e6)   (e6 d6 e5)         (f6 f5 f7)
              (d7 c7 d6)      (e7 f7)            (f7 e7 f6)
            )
)

;;;                              OUTILS 
;;;            pour la construction/deconstruction a droite

(de consdroite (liste1 sexpr)
     (append liste1 (list sexpr))
)

(de listetronq (liste2)
 (if (null (cdr liste2))
          ()
          (cons (car liste2) (listetronq (cdr liste2)))
 )
)

;;;                             PROGRAMME 

(de thes (case liste)
  (cond
   ((equal case ()) 
(thes (cadr (member (car (last liste)) 
      (cassq (car (last (listetronq liste))) laby)))
      (listetronq liste)))
   ((member case liste)
(thes (cadr (member case (cassq (car (last liste)) laby))) liste))
   ((equal case '*) liste)
   (t (thes (car (cassq case laby)) (consdroite liste case)))
  )
)

(de thes2 (case liste liste2)
  (cond
   ((equal case ()) 
(thes2 (cadr (member (car (last liste)) 
      (cassq (car (last (listetronq liste))) laby)))
      (listetronq liste)
       liste2 ))
   ((member case liste)
(thes2 (cadr (member case 
           (cassq (car (last liste)) laby))) liste liste2))
   ((equal case '*) liste2)
   (t (thes2 (car (cassq case laby)) (consdroite liste case)
                                    (consdroite liste2 case)))
  )
)

 ;;;      APPELS UTILISATEUR

(de thesee (case)
    (thes case () )
)

(de thesee2 (case)
    (thes2 case () ())
)
 
 
 
