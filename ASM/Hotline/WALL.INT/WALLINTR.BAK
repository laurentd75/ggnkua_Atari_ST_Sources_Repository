;		WALLEETJE INTROKE

SCROLLHEIGHT=154
CHAR_HEIGHT=24
CHAR_AMOUNT=46            
OFFSETBUFFER=152
WHICHMUZAK=1

	SECTION     TEXT

	MOVE.L $4(A7),BASE1
        CLR.L       -(SP)
        MOVE.W      #$0020,-(SP)
        TRAP        #1
        ADDQ.L      #6,SP
        MOVE.L      D0,oldstack
	MOVE.B	    $FFFFFA19.W,OLDA19
	CLR.B	    $FFFFFA19.W
	MOVEM.L	    PALLET2,D0-D7
	MOVEM.L	    D0-D7,$FFFF8240.W
	BSR	    INITSCROLL
        BSR         initrt1
	BSR	    COPYGRAPH
	BSR	    INITSCROLL
	BSR	    HBLON
	BSR	    HBLON2
	MOVEQ	    #0,D0
	JSR	    MUSIC
	JSR	    MUSIC+18
	LEA	     newirq,A0		;SET NEW VBL VEC
	MOVE.L      A0,$70.W
checkkey:
        CMPI.B      #$39,KEY
        BNE.S       checkkey
        MOVE.L	    OLDVBL,$70.W
	JSR	    MUSIC+22
	JSR	    HBLOFF
	BSR	    ENDRT1
	MOVE.L	    #$FF,D0
	JSR	    MUSIC
	move.w      #$777,$ffff8240.w
	move.w      #$000,$ffff8246.w
        MOVE.L      oldstack,-(SP)
	MOVE.B	    #4,$484.W
        MOVE.W      #$0020,-(SP)
        TRAP        #1
        ADDQ.L      #6,SP
RELOCATE:
	MOVE.L BASE1,A5
	pea	(a5)
	pea	(a5)
	LEA GAME,A3
	MOVE.L $2(A3),A0
	ADD.L $6(A3),A0
	MOVE.L A0,BASE2
	ADD.L A3,A0
	LEA $1C(A0),A0
	MOVE.L $8(A5),D0
	LEA GAME+$1C,A1
	TST.L (A0)
	BEQ.S QUIT
	ADD.L (A0)+,A1
NEXT1	ADD.L D0,(A1)
NEXT2	CLR.L D1
	MOVE.B (A0)+,D1
	TST.W D1
	BEQ.S QUIT
	CMP.B #$1,D1
	BNE.S NEXT3
	LEA $FE(A1),A1
	BRA.S NEXT2

NEXT3	ADD.L D1,A1
	BRA.S NEXT1

QUIT	MOVE.L $2(A3),$C(A5)
	MOVE.L $6(A3),$14(A5)
	MOVE.L $A(A3),$1C(A5)
	MOVE.L $8(A5),D0
	MOVE.L $C(A5),D1
	ADD.L D0,D1
	MOVE.L D1,$10(A5)
	MOVE.L $14(A5),D0
	ADD.L D0,D1
	MOVE.L D1,$18(A5)

	LEA COPY,A0
	LEA $7FF00,A1
	MOVE.L A1,A5
	MOVEQ #$2F,D0
COPY_SET
	MOVE.B (A0)+,(A1)+
	DBF D0,COPY_SET

	LEA GAME+$1C,A0
	MOVE.L BASE1,A1
	LEA $100(A1),A1
	MOVE.L A1,A3
	MOVE.L BASE2,A4
	ADD.L A1,A4
	MOVE.L #EOF,A2
	JMP (A5)

COPY	MOVE.L (A0)+,(A1)+
	CMP.L A2,A0
	BLT.S COPY

CLEAR	CLR.L (A4)+
	CMP.L A2,A4
	BLT.S CLEAR
	JMP (A3)

HBLON:	
	MOVE.W	SR,-(SP)		;SAVE OLD STATUS REG
	MOVE.W	#$2700,SR		;ALL INTERRUPTS OFF
	LEA	SAVEREG,A0	;SAVE TIMER REGISTERS
	MOVE.B	$FFFFFA07.W,(A0)+	;TIMER B INTERRUPT ENABLE REG
	MOVE.B	$FFFFFA09.W,(A0)+	;TIMER C INTERRUPT ENABLE REG
	MOVE.B	$FFFFFA13.W,(A0)+	;TIMER B MASK REG'A'
	MOVE.B	$FFFFFA17.W,(A0)+	;VECTOR REG
	MOVE.B	$FFFFFA1B.W,(A0)+	;TIMER B CONTROL REG
	MOVE.B	$FFFFFA21.W,(A0)	;TIMER B DATA REG
	MOVE.L	$118.W,OLD118
	MOVE.W (SP)+,SR
	RTS
HBLON2:
	MOVE.W  SR,-(SP)
	MOVE.W  #$2700,SR
	MOVE.L	#NEWKEY,$118.W
	LEA	OLDVBL,A0	;SAVE OLD VBL
	MOVE.L	$70.W,(A0)	
	LEA	OLDHBL,A0	;SAVE OLD HBL
	MOVE.L	$120.W,(A0)
	BCLR.B	#$5,$FFFFFA09.W	;SET TIMER C OFF
	OR.B	#%00000001,$FFFFFA07.W ;ENABLE INTERRUPT TIMER B
	OR.B	#%00000001,$FFFFFA13.W ;TIMER B ON
	BCLR	#3,$FFFFFA17.W	;SET AUTOMATIC END OF INTERRUPT 
 	LEA	HBL,A0	;SET NEW HBL VEC   
	MOVE.L	A0,$120.W
	MOVE.W	(SP)+,SR		;ALL INTERRUPTS ON
	RTS

HBLOFF: MOVE.W	SR,-(SP)		;SAVE STATUS REG
	MOVE.W	#$2700,SR		;ALL INTERRUPTS OFF
	MOVE.L	OLD118,$118.W
	MOVE.L	OLDHBL,$120.W
	LEA	SAVEREG,A0	;SAVE TIMER REGISTERS
	MOVE.B	(A0)+,$FFFFFA07.W	;TIMER B INTERRUPT ENABLE REG
	MOVE.B	(A0)+,$FFFFFA09.W	;TIMER C INTERRUPT ENABLE REG
	MOVE.B	(A0)+,$FFFFFA13.W	;TIMER B MASK REG'A'
	MOVE.B	(A0)+,$FFFFFA17.W	;VECTOR REG
	MOVE.B	(A0)+,$FFFFFA1B.W	;TIMER B CONTROL REG
	MOVE.B	(A0),$FFFFFA21.W	;TIMER B DATA REG
	MOVE.W	(SP)+,SR	
	RTS

OLDVBL: DS.L	1

COPYGRAPH:	
	LEA	PIC+2,A0
	MOVEM.L	(A0)+,D0-D7
	MOVEM.L	D0-D7,LOGO
	MOVE.L	$44E,A1
	MOVE.W	#8000-1,D0
COPLOOPJE:
	MOVE.L	(A0)+,(A1)+
	DBF	D0,COPLOOPJE	
	RTS
HBL:	
	MOVEM.L	D0-D7,-(SP)
	MOVEM.L	CHARS+2,D0-D7
	MOVEM.L	D0-D7,$FFFF8240.W
	MOVEM.L	(SP)+,D0-D7
	CLR.B	 $fffffa1b.w
	MOVE.B	 #72,$FFFFFA21.W	
	move.b   #8,$fffffa1b.w
	RTE

NEWKEY:	
	MOVE.B	$FFFFFC02.W,KEY		
	RTE
newirq:
	CLR.B	    $FFFFFA1B.W		;STOP TIMER B
	MOVE.B	    #150,$FFFFFA21.W	
	MOVE.L	    #HBL,$120.W		;SET FIRST HBL VECTOR
        MOVEM.L     D0-A6,-(SP)         ;<- store reg. for all original numbers in  mem.
	BCLR	    #3,$FFFFFA17.W	;AUTOMATIC END OF INTERRUPT MODE
	MOVE.B	    #8,$FFFFFA1B.W	;START EVENT COUNT TIMER B
        MOVEM.L	    LOGO,D0-D7
	MOVEM.L     D0-D7,$FFFF8240.W
	BSR         SCROLL
	JSR	    MUSIC+26
        MOVEM.L     (SP)+,D0-A6
        RTE

initrt1:
	MOVE.L	    $44E,screenad1
        MOVE.W      #$0004,-(SP)        ;<- stores resolut
        TRAP        #14
        ADDQ.L      #2,SP
        MOVE.W      D0,oldres
        MOVEM.L     $FFFF8240.w,D0-D7   ;<- stores color
        MOVEM.L     D0-D7,oldpal
        MOVE.W      #0,-(SP)            ;<- switch resolut
        MOVE.L      #-1,-(SP)
        MOVE.L      #-1,-(SP)
        MOVE.W      #5,-(SP)
        TRAP        #14
        LEA         12(SP),SP
        MOVE.B      $00000484.w,oldkey
        MOVE.B      #2,$00000484.w
        MOVE.B      #$12,$FFFFFC02.w
        RTS
ENDRT1:
        MOVE.W      oldres,-(SP)
        MOVE.L      #-1,-(SP)
        MOVE.L      #-1,-(SP)
        MOVE.W      #5,-(SP)
        TRAP        #14
        LEA         12(SP),SP
        MOVE.B      oldkey,$00000484.w
        MOVE.B      #8,$FFFFFC02.w      ;<- mouse on
        MOVEM.L     oldpal,D0-D7
        MOVEM.L     D0-D7,$FFFF8240.w
        RTS

INITSCROLL:
	BSR         TEXTCONVERTER
	BSR	    SHIFTCHARS
	MOVE.L	    #TEXTBUFFER,CHARADDR
	MOVE.L	    #SCROLLBUFFER1+OFFSETBUFFER,BUFFERADD1
	MOVE.L	    #SCROLLBUFFER2+OFFSETBUFFER,BUFFERADD2
	MOVE.L	    #SCROLLBUFFER3+OFFSETBUFFER,BUFFERADD3
	MOVE.L	    #SCROLLBUFFER4+OFFSETBUFFER,BUFFERADD4
	RTS
SCROLL:
		MOVE.L	ROUTINEADDR,A0
		CMPI.L	#-1,(A0)
		BNE.S	NOTENDROUTINE
		MOVE.L	#ROUTINETAB,A0
NOTENDROUTINE:	
		MOVE.L	(A0)+,A1
		MOVE.L	A0,ROUTINEADDR
		JSR	(A1)
		CMP.B	#10,CHARCOUNTER
		BNE.S	NOTRESTORE
		CLR.B	CHARCOUNTER
		MOVE.L	#SCROLLBUFFER1+OFFSETBUFFER,BUFFERADD1
		MOVE.L	#SCROLLBUFFER2+OFFSETBUFFER,BUFFERADD2
		MOVE.L	#SCROLLBUFFER3+OFFSETBUFFER,BUFFERADD3
		MOVE.L	#SCROLLBUFFER4+OFFSETBUFFER,BUFFERADD4
NOTRESTORE:	RTS
ROUTINE1: 
		MOVE.L	CHARADDR,A0
		CMPI.W	#-1,(A0)
		BNE.S	NOTENDCHARS
		LEA	TEXTBUFFER,A0
NOTENDCHARS:	
		MOVE.L	(A0)+,CHARPOINTER
		MOVE.L	A0,CHARADDR
		MOVE.L	CHARPOINTER,A0
		ADD.L	#SHIFTBUFFER4,A0
		MOVE.L	BUFFERADD1,A1
		MOVEQ	#CHAR_HEIGHT-1,D0
SETLOOP:	
		MOVEM.L	(A0)+,D1-D6
		OR.L	D1,(A1)+
		OR.L	D2,(A1)+
		MOVEM.L	D3-D6,(A1)
		LEA	320-8(A1),A1
		DBF	D0,SETLOOP
SETBUFFER1:	
		MOVE.L	BUFFERADD1,A0
		MOVEQ	#CHAR_HEIGHT-1,D0
		BSR	SETBUFFER
		RTS
ROUTINE2:
		MOVE.L	CHARPOINTER,A0
		ADD.L	#SHIFTBUFFER3,A0
		MOVE.L	BUFFERADD2,A1
		MOVEQ	#CHAR_HEIGHT-1,D0
SETLOOP2:	
		MOVEM.L	(A0)+,D1-D6
		OR.L	D1,(A1)+
		OR.L	D2,(A1)+
		MOVEM.L	D3-D6,(A1)
		LEA	320-8(A1),A1
		DBF	D0,SETLOOP2
SETBUFFER2:	
		MOVE.L	BUFFERADD2,A0
		MOVEQ	#CHAR_HEIGHT-1,D0
		BSR	SETBUFFER
		RTS
ROUTINE3:
		MOVE.L	CHARPOINTER,A0
		ADD.L	#SHIFTBUFFER2,A0
		MOVE.L	BUFFERADD3,A1
		MOVEQ	#CHAR_HEIGHT-1,D0
SETLOOP3:	
		MOVEM.L	(A0)+,D1-D6
		OR.L	D1,(A1)+
		OR.L	D2,(A1)+
		MOVEM.L	D3-D6,(A1)
		LEA	320-8(A1),A1
		DBF	D0,SETLOOP3
SETBUFFER3:	
		MOVE.L	BUFFERADD3,A0
		MOVEQ	#CHAR_HEIGHT-1,D0
		BSR	SETBUFFER
		RTS
ROUTINE4:
		MOVE.L	CHARPOINTER,A0
		ADD.L	#SHIFTBUFFER1,A0
		MOVE.L	BUFFERADD4,A1
		MOVEQ	#CHAR_HEIGHT-1,D0
SETLOOP4:	
		MOVEM.L	(A0)+,D1-D6
		OR.L	D1,(A1)+
		OR.L	D2,(A1)+
		MOVEM.L	D3-D6,(A1)
		LEA	320-8(A1),A1
		DBF	D0,SETLOOP4
SETBUFFER4:	
		MOVE.L	BUFFERADD4,A0
		MOVEQ	#CHAR_HEIGHT-1,D0
		BSR	SETBUFFER
		RTS
ROUTINE5:
		ADDQ.L	#8,BUFFERADD1
		MOVE.L	BUFFERADD1,A0
		MOVEQ	#CHAR_HEIGHT-1,D0
		BSR	SETBUFFER
		ADDQ.L	#8,BUFFERADD1
		MOVE.L	BUFFERADD1,A0
		LEA	-8*2(A0),A0
		MOVEQ	#CHAR_HEIGHT-1,D0
CHARMOVE1:
		MOVEM.L	(A0),D1-D6
		MOVEM.L	D1-D6,-160(A0)
		LEA	320(A0),A0
		DBF	D0,CHARMOVE1
		RTS
ROUTINE6:
		ADDQ.L	#8,BUFFERADD2
		MOVE.L	BUFFERADD2,A0
		MOVEQ	#CHAR_HEIGHT-1,D0
		BSR	SETBUFFER
		ADDQ.L	#8,BUFFERADD2
		MOVE.L	BUFFERADD2,A0
		LEA	-8*2(A0),A0
		MOVEQ	#CHAR_HEIGHT-1,D0
CHARMOVE2:
		MOVEM.L	(A0),D1-D6
		MOVEM.L	D1-D6,-160(A0)
		LEA	320(A0),A0
		DBF	D0,CHARMOVE2
		RTS
ROUTINE7:
		ADDQ.L	#8,BUFFERADD3
		MOVE.L	BUFFERADD3,A0
		MOVEQ	#CHAR_HEIGHT-1,D0
		BSR	SETBUFFER
		ADDQ.L	#8,BUFFERADD3
		MOVE.L	BUFFERADD3,A0
		LEA	-8*2(A0),A0
		MOVEQ	#CHAR_HEIGHT-1,D0
CHARMOVE3:
		MOVEM.L	(A0),D1-D6
		MOVEM.L	D1-D6,-160(A0)
		LEA	320(A0),A0
		DBF	D0,CHARMOVE3
		RTS
ROUTINE8:
		ADDQ.L	#8,BUFFERADD4
		MOVE.L	BUFFERADD4,A0
		MOVEQ	#CHAR_HEIGHT-1,D0
		BSR	SETBUFFER
		ADDQ.L	#8,BUFFERADD4
		ADDQ.B	#1,CHARCOUNTER
		MOVE.L	BUFFERADD4,A0
		LEA	-8*2(A0),A0
		MOVEQ	#CHAR_HEIGHT-1,D0
CHARMOVE4:
		MOVEM.L	(A0),D1-D6
		MOVEM.L	D1-D6,-160(A0)
		LEA	320(A0),A0
		DBF	D0,CHARMOVE4
		RTS
SETBUFFER:
		MOVE.L	screenad1,A1
		ADD.L	#SCROLLHEIGHT*160,A1
		LEA	-OFFSETBUFFER(A0),A0
		MOVE.W	#CHAR_HEIGHT-1,D0
SETBUFFERLOOP:	
		MOVEM.L	(A0)+,D1-D7/A2-A4
		MOVEM.L	D1-D7/A2-A4,(A1)
		MOVEM.L	(A0)+,D1-D7/A2-A4
		MOVEM.L	D1-D7/A2-A4,40(A1)
		MOVEM.L	(A0)+,D1-D7/A2-A4
		MOVEM.L	D1-D7/A2-A4,80(A1)
		MOVEM.L	(A0)+,D1-D7/A2-A4
		MOVEM.L	D1-D7/A2-A4,120(A1)
		LEA	160(A0),A0
		LEA	160(A1),A1
		DBF	D0,SETBUFFERLOOP
		RTS

ROUTINETAB:	DC.L	ROUTINE1,ROUTINE2,ROUTINE3,ROUTINE4 
		DC.L	ROUTINE5,ROUTINE6,ROUTINE7,ROUTINE8
		DC.L	-1
SHIFTCHARS:
		LEA	TEXTTAB+4,A0
		LEA	SHIFTBUFFER1,A2
		MOVE.W	#CHAR_AMOUNT-1,D1
COPYCHARLOOP2:		
		MOVE.L	(A0),A3
		LEA	34(A3),A3
		LEA	8(A0),A0		
		MOVE.W	#CHAR_HEIGHT-1,D0
COPYCHARLOOP:
		MOVE.L	00(A3),(A2)+	
		MOVE.L	04(A3),(A2)+
		MOVE.L	08(A3),(A2)+	
		MOVE.L	12(A3),(A2)+
		MOVE.L	#00000,(A2)+	
		MOVE.L	#00000,(A2)+
		LEA	160(A3),A3
		DBF	D0,COPYCHARLOOP
		DBF	D1,COPYCHARLOOP2
SHIFT:	
		LEA	SHIFTBUFFER1,A0
		LEA	SHIFTBUFFER1,A1
		ADD.L	#(16+8)*(CHAR_HEIGHT)*(CHAR_AMOUNT),A1
		MOVE.W	#3-1,D0
SHIFTLOOP1:		
		MOVE.W	#((16+8)*(CHAR_HEIGHT)*(CHAR_AMOUNT))/4-1,D1
COPYBUFFERLOOP:
		MOVE.L	(A0)+,(A1)+
		DBF	D1,COPYBUFFERLOOP
SHIFTALLCHARS:
		MOVE.W	#CHAR_AMOUNT-1,D1	
SHIFTLOOP3:
		MOVE.W	#CHAR_HEIGHT-1,D3
SHIFTLOOP2:
		MOVEQ	#4-1,D2
SHIFTPLANE1:
		MOVE.W	#0,CCR		
		ROXR.W	00+0(A0)
		ROXR.W	08+0(A0)
		ROXR.W	16+0(A0)
		DBF	D2,SHIFTPLANE1
		MOVEQ	#4-1,D2
SHIFTPLANE2:
		MOVE.W	#0,CCR		 
		ROXR.W	00+2(A0)
		ROXR.W	08+2(A0)
		ROXR.W	16+2(A0)
		DBF	D2,SHIFTPLANE2
		MOVEQ	#4-1,D2
SHIFTPLANE3:
		MOVE.W	#0,CCR		
		ROXR.W	00+4(A0)
		ROXR.W	08+4(A0)
		ROXR.W	16+4(A0)
		DBF	D2,SHIFTPLANE3
		MOVEQ	#4-1,D2
SHIFTPLANE4:
		MOVE.W	#0,CCR		
		ROXR.W	00+6(A0)
		ROXR.W	08+6(A0)
		ROXR.W	16+6(A0)
		DBF	D2,SHIFTPLANE4
		LEA	24(A0),A0
		DBF	D3,SHIFTLOOP2
		DBF	D1,SHIFTLOOP3
		SUB.L	#(16+8)*(CHAR_HEIGHT)*(CHAR_AMOUNT),A0
		DBF	D0,SHIFTLOOP1	
		RTS

TEXTCONVERTER:	
		LEA	TEXT,A1
		LEA	TEXTBUFFER,A2
OM1:		
		LEA	TEXTTAB2,A0
		MOVEQ	#0,D0
		MOVEQ	#0,D1
		MOVE.B	(A1),D0
		MOVE.L	(A0),D1
OM2:		
		CMP.L	#-1,(A0)
		BNE.S	NEXT
		ADDQ.L	#1,A1
		BRA.S	OM1
NEXT:		
		MOVE.L	(A0),D1
		CMP.L	D0,D1		
		BEQ.S	OM3	
		ADD.L	#8,A0
		BRA	OM2
OM3:		ADDQ.L	#4,A0
		MOVE.L	(A0)+,(A2)+
		ADDQ.L	#1,A1
		CMP.B	#-1,(A1)
		BNE.S	OM1
		MOVE.L	#-1,(A2)
		RTS
TEXTTAB2:
	DC.L	"A",0*(24*CHAR_HEIGHT),"B",1*(24*CHAR_HEIGHT)
	DC.L	"C",2*(24*CHAR_HEIGHT),"D",3*(24*CHAR_HEIGHT)
	DC.L	"E",4*(24*CHAR_HEIGHT),"F",5*(24*CHAR_HEIGHT)
	DC.L	"G",6*(24*CHAR_HEIGHT),"H",7*(24*CHAR_HEIGHT)
	DC.L	"I",8*(24*CHAR_HEIGHT),"J",9*(24*CHAR_HEIGHT)
	DC.L	"K",10*(24*CHAR_HEIGHT),"L",11*(24*CHAR_HEIGHT)
	DC.L	"M",12*(24*CHAR_HEIGHT),"N",13*(24*CHAR_HEIGHT)
	DC.L	"O",14*(24*CHAR_HEIGHT),"P",15*(24*CHAR_HEIGHT)
	DC.L	"Q",16*(24*CHAR_HEIGHT),"R",17*(24*CHAR_HEIGHT)
	DC.L	"S",18*(24*CHAR_HEIGHT),"T",19*(24*CHAR_HEIGHT)
	DC.L	"U",20*(24*CHAR_HEIGHT),"V",21*(24*CHAR_HEIGHT)
	DC.L	"W",22*(24*CHAR_HEIGHT),"X",23*(24*CHAR_HEIGHT)
	DC.L	"Y",24*(24*CHAR_HEIGHT),"Z",25*(24*CHAR_HEIGHT)
	DC.L	"0",26*(24*CHAR_HEIGHT),"1",27*(24*CHAR_HEIGHT)
	DC.L	"2",28*(24*CHAR_HEIGHT),"3",29*(24*CHAR_HEIGHT)
	DC.L	"4",30*(24*CHAR_HEIGHT),"5",31*(24*CHAR_HEIGHT)
	DC.L	"6",32*(24*CHAR_HEIGHT),"7",33*(24*CHAR_HEIGHT)
	DC.L	"8",34*(24*CHAR_HEIGHT),"9",35*(24*CHAR_HEIGHT)
	DC.L	"(",36*(24*CHAR_HEIGHT),")",37*(24*CHAR_HEIGHT)
	DC.L	"!",38*(24*CHAR_HEIGHT),".",39*(24*CHAR_HEIGHT)
	DC.L	",",40*(24*CHAR_HEIGHT),"-",41*(24*CHAR_HEIGHT)
	DC.L	"?",42*(24*CHAR_HEIGHT),":",43*(24*CHAR_HEIGHT)
	DC.L	"+",44*(24*CHAR_HEIGHT)," ",45*(24*CHAR_HEIGHT)
	DC.L	-1
TEXTTAB:
	DC.L	"A",(CHARS)+(0*CHAR_HEIGHT*160)+(0*16)
	DC.L	"B",(CHARS)+(0*CHAR_HEIGHT*160)+(1*16)
	DC.L	"C",(CHARS)+(0*CHAR_HEIGHT*160)+(2*16)
	DC.L	"D",(CHARS)+(0*CHAR_HEIGHT*160)+(3*16)
	DC.L	"E",(CHARS)+(0*CHAR_HEIGHT*160)+(4*16)
	DC.L	"F",(CHARS)+(0*CHAR_HEIGHT*160)+(5*16)
	DC.L	"G",(CHARS)+(0*CHAR_HEIGHT*160)+(6*16)
	DC.L	"H",(CHARS)+(0*CHAR_HEIGHT*160)+(7*16)
	DC.L	"I",(CHARS)+(0*CHAR_HEIGHT*160)+(8*16)
	DC.L	"J",(CHARS)+(0*CHAR_HEIGHT*160)+(9*16)
	DC.L	"K",(CHARS)+(1*CHAR_HEIGHT*160)+(0*16)
	DC.L	"L",(CHARS)+(1*CHAR_HEIGHT*160)+(1*16)
	DC.L	"M",(CHARS)+(1*CHAR_HEIGHT*160)+(2*16)
	DC.L	"N",(CHARS)+(1*CHAR_HEIGHT*160)+(3*16)
	DC.L	"O",(CHARS)+(1*CHAR_HEIGHT*160)+(4*16)
	DC.L	"P",(CHARS)+(1*CHAR_HEIGHT*160)+(5*16)
	DC.L	"Q",(CHARS)+(1*CHAR_HEIGHT*160)+(6*16)
	DC.L	"R",(CHARS)+(1*CHAR_HEIGHT*160)+(7*16)
	DC.L	"S",(CHARS)+(1*CHAR_HEIGHT*160)+(8*16)
	DC.L	"T",(CHARS)+(1*CHAR_HEIGHT*160)+(9*16)
	DC.L	"U",(CHARS)+(2*CHAR_HEIGHT*160)+(0*16)
	DC.L	"V",(CHARS)+(2*CHAR_HEIGHT*160)+(1*16)
	DC.L	"W",(CHARS)+(2*CHAR_HEIGHT*160)+(2*16)
	DC.L	"X",(CHARS)+(2*CHAR_HEIGHT*160)+(3*16)
	DC.L	"Y",(CHARS)+(2*CHAR_HEIGHT*160)+(4*16)
	DC.L	"Z",(CHARS)+(2*CHAR_HEIGHT*160)+(5*16)
	DC.L	"0",(CHARS)+(2*CHAR_HEIGHT*160)+(6*16)
	DC.L	"1",(CHARS)+(2*CHAR_HEIGHT*160)+(7*16)
	DC.L	"2",(CHARS)+(2*CHAR_HEIGHT*160)+(8*16)
	DC.L	"3",(CHARS)+(2*CHAR_HEIGHT*160)+(9*16)
	DC.L	"4",(CHARS)+(3*CHAR_HEIGHT*160)+(0*16)
	DC.L	"5",(CHARS)+(3*CHAR_HEIGHT*160)+(1*16)
	DC.L	"6",(CHARS)+(3*CHAR_HEIGHT*160)+(2*16)
	DC.L	"7",(CHARS)+(3*CHAR_HEIGHT*160)+(3*16)
	DC.L	"8",(CHARS)+(3*CHAR_HEIGHT*160)+(4*16)
	DC.L	"9",(CHARS)+(3*CHAR_HEIGHT*160)+(5*16)
	DC.L	"(",(CHARS)+(3*CHAR_HEIGHT*160)+(6*16)
	DC.L	")",(CHARS)+(3*CHAR_HEIGHT*160)+(7*16)
	DC.L	"!",(CHARS)+(3*CHAR_HEIGHT*160)+(8*16)
	DC.L	".",(CHARS)+(3*CHAR_HEIGHT*160)+(9*16)
	DC.L	",",(CHARS)+(4*CHAR_HEIGHT*160)+(0*16)
	DC.L	"-",(CHARS)+(4*CHAR_HEIGHT*160)+(1*16)
	DC.L	"?",(CHARS)+(4*CHAR_HEIGHT*160)+(2*16)
	DC.L	":",(CHARS)+(4*CHAR_HEIGHT*160)+(3*16)
	DC.L	"+",(CHARS)+(4*CHAR_HEIGHT*160)+(4*16) 
	DC.L	" ",(CHARS)+(4*CHAR_HEIGHT*160)+(5*16)
	DC.L	-1
	even

PIC:			INCBIN C:\ASSEMBLE\DEVPAC\SOURCES\WALL.PI1	
CHARS:			INCBIN C:\ASSEMBLE\DEVPAC\SOURCES\GAMEDEMO\FONT.DAT	
WHICHDRAWROUT:		DS.B	1
XYADDRES:		DS.L	1
OLDXYADDRES1:		DS.L	1
OLDXYADDRES2:		DS.L	1
NOTHING:		DS.B	320
ROTATEADDR:		DS.L	1
CHARCOUNTER:		DS.B	1
CHARADDR:		DS.L	1
ROUTINEADDR:		DC.L	ROUTINETAB
BUFFERADD1:		DS.L	1
BUFFERADD2:		DS.L	1
BUFFERADD3:		DS.L	1
BUFFERADD4:		DS.L	1
CHARPOINTER:		DS.L	1
ROUTINEADR:		DS.L	1
SCROLLBUFFER1:		DS.B	(CHAR_HEIGHT*320)
SCROLLBUFFER2:		DS.B	(CHAR_HEIGHT*320)
SCROLLBUFFER3:		DS.B	(CHAR_HEIGHT*320)
SCROLLBUFFER4:		DS.B	(CHAR_HEIGHT*320)
SHIFTBUFFER1:		DS.B	(16+8)*(CHAR_HEIGHT)*(CHAR_AMOUNT)
SHIFTBUFFER2:		DS.B	(16+8)*(CHAR_HEIGHT)*(CHAR_AMOUNT)
SHIFTBUFFER3:		DS.B	(16+8)*(CHAR_HEIGHT)*(CHAR_AMOUNT)
SHIFTBUFFER4:		DS.B	(16+8)*(CHAR_HEIGHT)*(CHAR_AMOUNT)

	SECTION	DATA
MUSIC:		INCBIN C:\ASSEMBLE\DEVPAC\WALL.MUS

TEXT:
	DC.B	"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789()!.,-?:+    "
ENDTEXT:
	DC.B	-1
	EVEN
TEXTBUFFER:   	DS.L	ENDTEXT-TEXT+1
	EVEN
SAVEREG:	DS.B	6
OLDHBL:		DS.L	1
WHICHSCREEN:    DS.B 1
KEY:     	DS.B 1
oldstack:       DS.L 1
oldres:         DS.W 1
oldscr:         DS.L 1
screenad1:      DS.L 1
oldpal:         DS.L 8
oldirq:         DS.L 1
oldkey:         DS.B 1
OLDA19:		DS.B 1
LOGO:		DS.W 16
PALLET2:	DS.W 16
OLD118:		DS.L 1
BASE1		DC.L $0
BASE2		DC.L $0
GAME		INCBIN C:\INTROS\HTLINTRO.PRG
EOF

	        EVEN

                END





