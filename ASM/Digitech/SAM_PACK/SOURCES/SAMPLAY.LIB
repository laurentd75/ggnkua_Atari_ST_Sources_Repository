Replay		move.w  d0,sam_rate
        	move.w  d1,norm_crn
		move.b	d2,loop
                move.l  a0,-(sp)        ;Stack sample filename
                move.l  #-1,-(sp)
                move.w  #$48,-(sp)      ;Free memory
                trap    #1              ;Malloc
                addq.l  #6,sp
                move.l  d0,memfree
                move.l  d0,-(sp)
                move.w  #$48,-(sp)      ;Reserve all free memory
                trap    #1              ;Malloc
                addq.l  #6,sp
                move.l  d0,memstrt      ;Start of free memory
                movea.l (sp)+,a0        ;restore sample filename
                clr.w   -(sp)           ;Readonly
                move.l  a0,-(sp)        ;Filename
                move.w  #$3d,-(sp)
                trap    #1              ;Fopen
                addq.l  #8,sp
                bmi     desktop         ;Error opening file
                move.w  d0,handle
                move.l  memstrt,-(sp)   ;Buffer address
                move.l  memfree,-(sp)   ;Buffer length
                move.w  handle,-(sp)    ;File handle nr
                move.w  #$3f,-(sp)
                trap    #1              ;Fread
                adda.l  #$0c,sp
                tst.l   d0
                bmi     desktop         ;Error reading file
                movea.l memstrt,a0      ;Begin Samplebuffer
		bsr	setup
                move.w  handle,-(sp)
                move.w  #$3e,-(sp)
                trap    #1              ;Fclose
                addq.l  #4,sp
                move.w  sam_rate,d0
                lea     freq,a0
                move.b  0(a0,d0.w),cur_freq ;Initialiseer Sample frequentie
                pea     initsc          ;Initialiseer Soundchip
                move.w  #$26,-(sp)
                trap    #14             ;Supexec
                addq.l  #6,sp
                pea     timer
                move.w  #$26,-(sp)
                trap    #14             ;Supexec
                addq.l  #6,sp

conin2:         move.w  #2,-(sp)        ;Console
                move.w  #2,-(sp)
                trap    #13             ;Bconin
                addq.l  #4,sp
                swap    d0              ;Give me the scancode
                cmpi.b  #1,d0           ;ESC key ?
                beq.s   q_loop
                cmpi.b  #$50,d0         ;Downkey
                bne.s   conin2_1
                addi.b  #1,cur_freq
                bra.s   conin2_3
conin2_1:       cmpi.b  #$48,d0         ;Upkey
                bne.s   conin2_2
                subi.b  #1,cur_freq
                bra.s   conin2_3
conin2_2:       cmpi.b  #$02,d0         ;1
                bmi.s   conin2          ;Key not used
                cmpi.b  #$09,d0
                bpl.s   conin2
                subq.w  #2,d0
                andi.w  #$ff,d0         ;High byte could be undefined ?
                lea     freq,a0
                move.b  0(a0,d0.w),cur_freq
conin2_3:       pea     update_freq
                move.w  #$26,-(sp)
                trap    #14             ;Supexec
                addq.l  #6,sp
                bra.s   conin2
q_loop:         pea     de_timer
                move.w  #$26,-(sp)
                trap    #14             ;Supexec
                addq.l  #6,sp
desktop:        move.l  memstrt,-(sp)
                move.w  #$49,-(sp)
                trap    #1              ;Mfree
                addq.l  #6,sp
                rts                     ;Back to the main menu

		include	replay.lib

memfree:        DS.L 1
memstrt:        DS.L 1
sam_rate:       DS.W 1
handle:         DS.W 1
