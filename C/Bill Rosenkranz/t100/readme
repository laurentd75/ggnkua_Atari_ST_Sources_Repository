
t100 v1.0 20 sept 1991
----------------------

t100 is a simple ANSI/vt100 emulator. Well, almost a vt100 emulator. It is
not quite finished but is usable. It lacks scroll region and does not send
any status info (like current cursor position) back to the host if it
was requested. These things could be relatively easily added by using
curses. For a list of escapes t100 handles (and does not handle) see file
"codes". I don't have very good documentation on the vt100.

Note that this is a terminal emulator, NOT a whiz-bang communication
package. There no are auto-dialers, file transfers, or a macro programming
language. There is a shell escape, however. The advantage t100 has is it
comes with source code so you can modify it and learn. Actually, with
a shell escape, you should be able to invoke kermit (or xmodem or whatever)
while logged into a host and start a transfer. I have not figured out
how to configure kermit to do this, however. And I don't normally use
[xyz]modem for transfers to the office.

t100 only works on mono systems because I don't have a set of fonts made
for medium resolution. If you make a set similar to these, just add them
in via the header files (bold.h, uline.h, roman.h, and reverse.h which
are the raw font bitmap data). No checks are made to see whether you are
in mono or not so be careful. If you compile with vt100_mode = 0, you
should have a vt52 emulator since in that case all AUX data received is
just sent to the console, which is a vt52, more or less. I have not tried
this.

t100 replaces the system font on startup and whenever it needs to support
bold, underline, and reverse characters. The host sends these as escape
sequences. PORTABILITY ALERT: uses line A (just $A000) to find the font
header. Either 1) compile with -UUSE_FONTS, or 2) figure out another way
to get the font header (and hence the font data pointer) and patch fonts.c.
The fonts were lifted from manpager (which I wrote and posted). The font
is Times Roman (as good as you can do it in 8x16 and have both normal and
bold versions, I suspect). Some of the 8-bit chars are probably missing
(eg ones above ASCII 127). The underline font only underlines letters and
numbers. For everything underlined, -DALL_ULINE and recompile (uline.[ch]).

I compiled it with gcc 1.40 and mintlib10. It does not need MiNT, but I
think it will run under MiNT, allowing it to be backgrounded with an ALT-z.
Not tested. It runs under TOS 1.2. Also, only sets baud rate, not parity,
etc. I use the control panel to do this anyway. Default baud rate is 2400
baud.

To run, just do:

	t100

or click on it from the desktop. There are currently no arguments.

You can then type commands to modem (e.g. AT, ATDTnumber, etc.). It should
also work with other devices on the serial port.

Here are the escape sequences that are intercepted by t100:

	alt-q	quit
	alt-c	configure
	alt-s	shell escape
	HELP	help screen (the HELP key, that is).

At this time, alt-l is not implemented, though the code to drop DTR is
in the source. I am not sure of this scheme to send a break. There are
several methods I know of.

For more info, look at the source, in particular the top of file t100.c.
I also included a termcap entry for t100 which should be ok (t100.tc).
There is no manpage. This file and the source are the docs.

Enjoy...

-Bill Rosenkranz
rosenkra@convex.com

