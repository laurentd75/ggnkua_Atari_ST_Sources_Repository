MAIN.C
	main() - executes initialization code and the starts the program.
	set_table()	   makes a table of ASCII hex bytes for 0 to 255    
INIT.C
	init_resources() -     loads resource array   
	init_menu() -          sets up menu bar    
	init_dialog() -        sets up dialog boxes    
	init_path() -	       sets up fs_inpath for fsel_input in files.c
	shutdown(code)
	cleanup() - 		   cleans up memory on shutdown   
	int open_vwork(form) - open virtual work area for each window   
EVENTS.C
	TaskMaster() -         handles event_multi call
WIND.C
	do_window(message) -   handles all window messages
	do_resize(message)
	do_fullsize(handle)
	do_update(message)
	update_window(windhandle)
	setclip(thewindow, r1)
	windowptr findwindowptr(handle)
	windowptr new_window(thekind)
	open_window(thewin)
	dispose_window(thewin)
	dispose_win_resources(thewin)
	make_frontwin(thewin)
	rot_wind()
	wind_blank(thewin)
MENU.C
	do_menu(message) - 	handles menu messages
	handle_desk(itemid)
	handle_file(itemid)
	new()  /* opens a new window with associated file  */
	handle_marks(itemid)
	start_mark(thewin)
	end_mark(thewin)
	clear_marks(thewin)
	handle_edit(itemid)
	handle_search(itemid)
	prot_warn()
FILES.C
	read_file(thewin) - 	read file into ram buffer
	write_file(thewin) - 	write to a named file
	save_file(thewin) -		write to current file thewin->title
	getfile(thewin) - ret 1 name in thewin->title or 0 with cancel
	delfile() - returns 1 with del, 0 with cancel 
	drives() -  display disk space on selected drive
ONEPAGE.C
	one_page(thewin, blank) - draw one window full of data 
	unsigned getbyte(thewin,pos) - get any byte in file in ram
	putbyte(thewin,pos,lnum) - put byte lnum into file at pos 
	one_line0(thewin,pos) - draw a single line of data in window
	one_line2(thewin,pos)	/* handles mixed marked and unmarked */
	one_line1(thewin,pos)	/* handles unmarked text	*/
BUFFMAN.C
	linkbufptr addmember(thewin) - add new block to linked list
	insert_member(bufptr) -  insert a new block into a lined list
	dispose_buf(thewin) - delete an entire file buffer, all blocks in list
	dispose_member(thewin,memtodel) - delete one block from linked list
SLIDER.C
	vhandler(message)
	redraw_vslider(wihandle)    /* redraws vslider in new postion  */
	size_vslider(wihandle)  /* set slider size  and redraws it */
	scroll(thewin,upflag,dnflag) - scroll text in window
CURSOR.C
	putcur(thewin,type) - draws and undraws the cursor
KEYS.C
	do_kbd(keycode,keymods) - handles all keyboard input
	do_kbd2(thewin,keycode,keymods) - handles hexadecimal input
	cur_up(thewin)
	cur_down(thewin)
	cur_right(thewin)
	cur_left(thewin)
	check_scroll(thewin) - cursor off screen?  scroll or reposition
	repos(thewin)  /* reposition and redraw with cursor on screen */
	jump_pos(thewin) /* reset display parameters so cursor on screen */
	ins_rpl(thewin)  /* enters hex charactes into the file */
	enter_it(thewin,inbuf,lnum)- insert or replace byte redrawing screen
	hex_chk(thewin, ch) /* checks to see if a hex character was entered */
	wr_ins_rpl(insflag) /* writes insert/replace/hex/ascii on menu line */
	cursor(x,y)   /* position the cursor*/
	alt_keys(keycode)  /* handle alt key command mode  */
BUTTON.C
	do_button(mousex,mousey) - handles all mouse stuff including drag box
	long calc_pos(mousex,mousey) claculates new position in file
EDIT.C
	delete_one(thewin,pos,flag) /* delete one byte */
	cutit(thewin) /* cut out the marked text   */
	copy(thewin) /* copy the marked text to the cutbuffer */
	paste(thewin) /* paste the cutbuffer into the file before the cursor */
	insert_it(thewin,incopy,addr2)
		inserts incopy bytes from string pointed to by addr2
		into the file before the position of the cursor
SEARCH.C
	find(thewin) /* handles search and replace dialog box  */
	char *chk_sstr_len(thewin) /* check search string length */
	char *chk_rstr_len(thewin) /* check replace string length */
	find0(thewin) /* handles results from srch/rpl dialog */
	forward1(thewin,sstr) /* searches forward */
	long forward2(thewin,sstr)
	rp_forw(thewin,sstr) /* replace going forward */
	back1(thewin,sstr) /* search backwards */
	long back2(thewin,sstr)
	ronce(thewin,sstr,rstr) /* replace once */
	rall(thewin,sstr,rstr) /* replace all */
	rver(thewin,sstr,rstr) /* replace with verify */
	do_dialog(dialog)   /* draw dialog boxes centered with form_do  */
	do_dialxy(dialog,x,y) /* draw dialog at specific position with form_do */
	drw_dialxy(dialog,x,y) /* draw object at a position.. no form_do */
SEND.C
	send_vslid(thewin) /* send application slider message */
	send_redraw(thewin) /* send application a redraw message */
	immed_redraw(thewin) /* bypass event multi and do a screen redraw */
	send_arrow(thewin,direction) /* send application an arrow message */
PRINTER.C
	print(thewin) /* send file or block to printer */
	print_line(thewin,pos) /* send a line to the printer */
	pr_print(str) /* send a string to the printer */







