
CFLOW --> function declarations and calls in C source
by Mark Ellington
[V85.06.20 for C86 by Lawrence R. Steeger]


            C Source: jove.c

           C Include: jove.h
Can't Open C Include: setjmp.h

** # define ptrproto(x) ()
 * # else
 * # define ptrproto(x) x
 * # endif
 * #else

** # define proto(x) ()

** # define ptrproto(x) ()
 * #endif
 * */
 * #ifdef REALSTDC
        start()
        start()

** # define UNMACRO(proc)(proc)
 * #endif
 * #ifndef NULL
 * # define NULL 0
 * #endif
 * #ifndef EOF
 * #endif
 * typedef int bool;
 * #ifdef IPROCS
 * typedef struct process Process;
 * #endif
 * typedef struct window Window;
 * typedef struct position Bufpos;
 * typedef struct mark Mark;
 * typedef struct buffer Buffer;
 * typedef struct line Line;
 * typedef struct iobuf IOBUF;

           C Include: buf.h

== MinorMode(x) BufMinorMode(curbuf,(x))
 = BufMinorMode()
 * #include "buf.h"

           C Include: wind.h n)),
 * #include "wind.h"

           C Include: io.h.h n)),
 * #include "io.h"
Can't Open C Include: dataobj.h),
 * #include "dataobj.h"
Can't Open C Include: keymaps.h),
 * #include "keymaps.h"
Can't Open C Include: argcount.h,
 * #include "argcount.h"
Can't Open C Include: util.hnt.h,
 * #include "util.h"
Can't Open C Include: vars.hnt.h,
 * #include "vars.h"

           C Include: screen.h.h,
 * #include "screen.h"
 * legitimate offsets into array of strings */
 * extern jmp_buf mainjmp;
 * extern char NullStr[];
 * extern char *ProcFmt;
 * extern int
 * LastKeyStruck,
 * RecDepth,
 * InJoverc;
 * extern bool
 * InMacDefine,
 * TOabort,
 * has been read */
 * be processed */
 * Interactive,
 * inIOread,
 * Asking,
 * InRealAsk;
 * extern int
 * AskingWidth;
 * extern char
 * *Inputp,
 * Minibuf[LBSIZE],
 * ShcomBuf[LBSIZE],
 * *version;
 * extern char mesgbuf[MESG_SIZE];
Can't Open C Include: externs.had
 * #include "externs.h"
 * #ifndef W_OK
 * # define W_OK 2
 * # define X_OK 1
 * # define F_OK 0
 * #endif
Can't Open C Include: fp.hrns.had
Can't Open C Include: termcap.had

           C Include: ctype.h.had

== jiswhite(c)(jisspace(c))
 = jisspace()

** # define jtolower(c)((c)|040)
 * #else
 * extern char jtolower proto((int
 * #endif

           C Include: chars.h.had
Can't Open C Include: disp.hh.had

           C Include: re.h.hh.had
Can't Open C Include: rec.hhh.had
Can't Open C Include: sys/stream.hhhh.had
Can't Open C Include: sys/ptem.hd
Can't Open C Include: signal.h.hd
Can't Open C Include: errno.hh.hd
Can't Open C Include: ttystate.h,

** finish(code)
 * int code;
            signal()
            mess()
            stop()
            read()
            read()
            strt()
            getrawinchar()
            message()
                redisplay()
        UnsetTerm()
        kill()
                lsave()
                SyncRec()
                writef()
                strerror()
                ModBufs()
                    writef()
                    writef()
                writef()
            writef()
        flushscreen()
            signal()
            tmpremove()
            recremove()
        abort()
        exit()
        exit()
        rst()
        exit()

** #if defined(SYSV) || defined(M_XENIX)

** #if defined(SYSV) || defined(M_XENIX)
 * private void

** setblock(fd,on)
 * register int fd;
 * bool on;
            fcntl()
            finish()
        fcntl()
        finish()

** Peekc()

** Ungetc(c)
 * int c;

** ffs(int iggy)

** jgetchar()
                    select()
                complain()
                strerror()
                        read()
                        ffs()
                        proc()
            finish()

** jgetchar()
            getrawinchar()
                    readn()
                        complain()
                        finish()
                        readn()
                            complain()
                            finish()
                    proc()
                        stop()
                    read()
                    finish()

** charp()
            gtty()
            ioctl()
        setblock()
        read()
        setblock()
        empty()
        ready()
        rawchkc()

** ResetTerm()
        sgtty()
        ttyset()
        putpad()
        putpad()
        putpad()
        chkmail()
        init()

** UnsetTerm(mesg)
 * char *mesg;
        ttyset()
        INSmode()
        putpad()
        putpad()
        Placur()
        putpad()
        putpad()
        writef()
        flushscreen()

** PauseJove()
        UnsetTerm()
        ModBufs()
        kill()
        ResetTerm()
        ClAndRedraw()

** jcloseall()
        tmpclose()
        recclose()
        closekmem()

** Push()
        SIGRESULT()
        ptrproto()
        signal()
        SIGRESULT()
        ptrproto()
        signal()
        SigHold()
        SigHold()
        alarm()
        stop()
        fork()
            strt()
            complain()
            strerror()
            UnsetTerm()
            ModBufs()
            SigRelse()
            SigRelse()
            signal()
            UnsetTerm()
            ModBufs()
            signal()
            signal()
            jcloseall()
            execl()
            basename()
            name()
            complain()
            strerror()
            exit()
        SigRelse()
        dowait()
        rst()
        spawnl()
        basename()
        message()
        ResetTerm()
        SigRelse()
        ClAndRedraw()
        signal()
        off()
        getCWD()
        signal()
        alarm()
        time()
        strt()

** ttsize()
        ioctl()
Can't Open C Include: sys/jioctl.hze()
        ioctl()
        getCO()
        getLI()
        page()

** biff_init()
        ttyname()
        stat()
        fstat()

** biff(on)
 * int on;
        chmod()
        fchmod()

** ttinit()
        init()
        ioctl()
        ioctl()
        sgtty()

** do_sgtty()
        ioctl()
        tcgetattr()
        gtty()
        ioctl()
        defined()
        defined()
        defined()
        defined()
        setmode()

** tty_reset()
        ttyset()
        ttinit()
        ttyset()

** ttyset(n)
 * bool n;
        ioctl()
        tcsetattr()
        ioctl()
        stty()
        ioctl()
        ioctl()
        ioctl()
        setmode()
        biff()

** getch()
            SyncRec()
        Peekc()
        getc()
            message()
            redisplay()
            jgetchar()
            finish()
            putc()
        stroke()

** dorecover()
        UnsetTerm()
        kill()
        execl()
        writef()
        strerror()
        flushscreen()
        exit()

** ShowVersion()
        mess()

** UNIX_cmdline(argc,argv)
 * int argc;
 * char *argv[];
        ShowVersion()
                strlwr()
                add()
                find()
                    SetABuf()
                    SetBuf()
                    SetLine()
                    line()
                    SetLine()
                    NextWindow()
                    SetBuf()
                    find()
                    ErrParse()
                    tag()
                    tag()
                    int()
                wind()
                int()

** raw_scream(m)
 * const char *m;
        write()
        strlen()

** error(const char *fmt,...)
 * #else

** error(fmt,va_alist)
 * const char *fmt;
 * va_dcl
 * #endif
            init()
            format()
            end()
        rbell()
        longjmp()

** complain(const char *fmt,...)
 * #else

** complain(fmt,va_alist)
 * const char *fmt;
 * va_dcl
 * #endif
            init()
            format()
            end()
        rbell()
        longjmp()

** raw_complain(const char *fmt,...)
 * #else

** raw_complain(fmt,va_alist)
 * const char *fmt;
 * va_dcl
 * #endif
            init()
            format()
            end()
            scream()

** confirm(const char *fmt,...)
 * #else

** confirm(fmt,va_alist)
 * const char *fmt;
 * va_dcl
 * #endif
        init()
        format()
        end()
        ask()
        longjmp()

** Recur()
        swritef()
        MakeMark()
        DoKeys()
        SetBuf()
        select()
        arg()
        ToMark()
        DelMark()

** DoKeys(firsttime)
 * bool firsttime;
        env()
        setjmp()
            cmdline()
                ModMacs()
                    rbell()
                    CharUpcase()
                    ask()
                ModBufs()
                    rbell()
                    CharUpcase()
                    ask()
                KillProcs()
            env()
            getDOT()
                openfiles()
                stack()
                redisplay()
            setjmp()
                value()
                strokes()
            HiliteMenu()
            on()
            getch()
            dispatch()

** scanvec(args,str)
 * register char **args,
 * *str;
            strcmp()

** updmode(junk)
 * int junk;
        redisplay()
        signal()
        alarm()
        time()

** win_reshape(junk)
 * int junk;
        SigHold()
        ttsize()
                wind()
        scr()
        scr()
        flushscreen()
        redisplay()
        SigRelse()
        signal()

** main()
        main()
            MacInit()
                proto()
                cache()
                exit()
            getArgs()
            setjmp()
                writef()
                finish()
            getenv()
            getenv()
                strcpy()
                strlen()
            switchar()
            getTERM()
            getenv()
            ttsize()
            InitEvents()
            InitCM()
            init()
            getenv()
                strcpy()
            getenv()
            strcpy()
            getenv()
                strcpy()
            scr()
            init()
            winit()
            pinit()
            init()
                scanvec()
                chkCWD()
                setCWD()
                getCWD()
            getenv()
            strlen()
            getenv()
                strcpy()
                swritef()
                getenv()
            InitKeymaps()
            ttinit()
            settout()
            ResetTerm()
            joverc()
            getenv()
            joverc()
            scanvec()
                swritef()
                joverc()
            scanvec()
            dorecover()
            scanvec()
            FullRecover()
            signal()
            off()
            signal()
            signal()
            signal()
            signal()
            signal()
            signal()
            signal()
            signal()
            alarm()
            time()
            scr()
            flushscreen()
            RedrawDisplay()
            DoKeys()
            finish()
Can't Open C Include: dos.h
        off()
            intdos()
            bdos()
        rst()
            bdos()
