.TH CONFIGUR 1 foo bar "FNORDADEL BBS SOFTWARE"
.SH NAME
configur.tos - configuration program for Fnordadel
.SH SYNOPSIS
configur [X] [-c] [+] [+{var}] [+{novar}] [+{var=value}] [...]
.SH DESCRIPTION
Configur reads the file ctdlcnfg.sys which it expects to find in the 
current directory (the directory in which configur is run).  It will 
create any system data files which need to be created and will scan 
currently existing data files.  Configur produces ctdltabl.sys which 
is used by citadel.tos and by many Fnordadel utilities.
If configur is being run for the first time, it will attempt to create 
the following files:
.PP
.nf
#msgdir\\ctdlmsg.sys
#sysdir\\ctdllog.sys
#sysdir\\ctdlflr.sys
#roomdir\\room0000.sys ... roomnnnn.sys
#netdir\\ctdlnet.sys
.fi
.PP
Configur, when invoked with no arguments or only "-c", will ask the Sysop
if he or she wants to wipe clean some or all of the above data files.
.SH OPTIONS
.IP X
If this or any other dummy parameter is present configur 
will assume that it is running unattended and will not ask 
if .sys files are to be changed or wiped clean.
.IP -c
This tells configur to use the "checkpoint" file (checkpt.sys in the
#sysdir) to drastically speed up
the scan of the message base when configur starts its run.  However, if
there is corruption in your
message base this feature may do more harm than good.  On the other (and
rarer) hand, checkpointing may save your bacon with certain sorts of
corruption.
.PP
The why of things is this: configur needs to find out what the newest
and oldest messages are in your message base.  Normally, it will start
at sector 0 of the message file and scan every message until the file's
end, recording the newest and oldest message numbers found.  This is the
"brute force and ignorance" approach; it takes time, but is normally secure.
.PP
On the speedier side, we do know something about the structure of the
message file: the oldest message will always follow the newest one, due
to the cirular nature of the message base.  Even better, each time
we save a message into the file, we know where the newest message went,
and its message ID#.  So Fnordadel writes this information into the
checkpt.sys file so that configur can read it and find the exact place
to start its scan.
.PP
Normally, with no errors, the newest message will thus be the first one
read, and the oldest will be the second one read.  If they don't match
what checkpt.sys says they should be, configur knows something is wrong
and keeps scanning trying to find the right values.  It will generate an
error message if it can't find what checkpt.sys says the right values
should be.  In such a case, you should probably rerun without -c.
.IP +
This has the effect of re-reading the ctdlcnfg.sys file 
and changing the variables stored in ctdltabl.sys 
accordingly.  It does not scan data files and therefore is 
used only when changing cosmetic variable values.
.IP +var
This has the effect of setting the binary switch 'var' to
1 (i.e. turning on the particular feature).
.IP +novar
This has the opposite effect of the above (i.e. it turns
off the variable 'var').  Note the lack of a space between
'no' and the 'var'.
.IP +var=value
This is used to change a non-binary numeric variable.  The
variable 'var' is set to the value 'value'. 
.PP
The last three '+' arguments are used to change cosmetic
variables on the fly.  To make the changes permanent,
ctdlcnfg.sys should be edited to reflect the new values.
.SH NOTES
Configur will tell you if it runs into anything abnormal, like a missing
data file, misconfigured variable, et cetera.  If it thinks the error is
serious enough (which is usual) then configur will stop right there and
let you fix it.
.PP
PLEASE ensure that the configuration file (ctdlcnfg.sys) matches
reality (i.e. what is in the system files).  If you use a Fnordadel
utility to, say, change the number of rooms in the system, ensure
that you've changed the appropriate value in ctdlcnfg.sys BEFORE
you run configur again.  Nasty things WILL happen if you don't!
.PP
There is no way to change string variables on-the-fly with the
"+var=value" notation.  You have to edit ctdlcnfg.sys for that; and
indeed, we recommend not being cute with the [+var...] arguments
and just sticking to editing ctdlcnfg.sys.  Life will be less
confusing that way.
.PP
While configur is processing the rooms of an existing setup, it will
check for empty "temporary" type rooms.  Any such rooms that it finds will be
purged from the system.
.SH FILES
.DT
.ta \w'configur.tos\ \ \ 'u
.br
configur.tos	Configuration program.
.br
ctdlcnfg.sys	List of customizing information.
.br
ctdltabl.sys	Tables file read and written by citadel.tos
.br
	and regenerated by configur.
.br
checkpt.sys	The checkpoint file, in #sysdir.
.br
.SH SEE ALSO
.DT
.ta \w'ctdlcnfg.doc\ \ \ 'u
.br
ctdlcnfg.doc	A fully-commented version of ctdlcnfg.sys.
.br
The Fnordadel Reference Manual
.br
.SH AUTHORS
Configur is one of the original Citadel programs, and probably still
contains original CrT code.
.PP
Lots of it was written by Hue, Jr., for Citadel-86.
.PP
It was extensively hacked by David Parsons for STadel.
.PP
And, it was hacked yet again by Adrian Ashley and Royce Howland for
the Fnordadel system, including a major rearrangement and rehashing
by AA.
