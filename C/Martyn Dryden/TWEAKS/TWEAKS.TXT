TWinpEAKS
by Martyn Dryden
Public Domain (Share And Enjoy!)

Quick instructions
==================
To define or re-define a button, hold down Alternate while
clicking on the button.

To enter the ESCape code (ASCII 27), hold down Control and
type a left square bracket ([).  Similarly for other ASCII
control-characters.

Slow instructions
=================
Lovingly dedicated to the one TV programme that keeps me away
from my ST, this accessory provides a neat way to tweak your
printer - that is, to send it commands and control codes, to
activate its various features or change its operating mode.

Up to eight printer functions or modes are instantly
available at the click of a mouse.  Sets of eight definitions
can be saved as .TWK files, and loaded from disk at any time.

Both the codes that are sent to the printer, and the names
given to them, are fully user definable.  Being a desk
accessory, TWinpEAKS is usable from either the GEM Desktop,
or any properly written GEM based program.

How to use
==========

(1) Installation

Copy TWEAKS.ACC to the root directory (not in a folder) of
your boot disk.

Optional:  Also copy the DEFAULT.TWK file to the root
directory of your boot disk.  The definitions in this file
will be activated automatically at start-up.

Optional:  Also copy any other .TWK files you may wish to
use.  These can go in a folder, wherever's convenient.

(2) Day-to-day use

Choose TWinpEAKS from the Desk or leftmost pop-down menu on
the GEM Desktop or within your application.  A box will
appear with eight printer function buttons, plus Save, Load,
and Done buttons.

Click the printer function button you wish to use.  It will
flash briefly, as the commands are sent to your printer.  

When finished, click the Done button.

If a button is not labelled with the name of a function, then
most likely no codes have been defined for that button.  In
this case, when you click it, an alert box will tell you so. 
See below for how to define a button's function.

(3) Button function definition

To define or re-define a button's function, click on the
button while holding down the Alternate key.  A new box will
appear, allowing you to enter the name you wish to appear on
the button, and the codes to be sent when you click on it.

Type the data.  Click on OK when done, or Cancel if you
change your mind.

The following keys manipulate the box:
  Tab:  moves from the first to the second field
  Esc:  clears out the field completely
  Up/Down arrows:  move from field to field
  Left/Right arrows:  move the editing cursor
  Return:  same as the OK button

You almost certainly will wish to enter some non-keyboard
characters into the Codes field - for example the Escape code
(ASCII 27) which is used in most printer control sequences. 
You can enter these by using Control key equivalents.  Hold
down the Control key and type the character:

Control-A is ASCII 1
        B          2
... and so on, up to ...
        Z         26
        [         27 (Escape)  <-- IMPORTANT ONE!
        \         28
        ]         29
        ^         30
        _         31

Please note, there is no way to enter a NUL (ASCII 0) into
the Codes string.  Check your printer manual, please!  If it
requires a NUL as one of its codes (for example, as the last
code in a Tab setting command), any normal printer will
equally accept a "0" (ASCII 48).

If you know of a printer to which this doesn't apply, then
please let me know, and I will figure out a way round this
limitation.

(4) Disk file management

Clicking on Save will save your current definitions as a .TWK
file.  A File Selector appears - just type the name you wish
them saved as.  There is no need to type the .TWK, this will
be added by the program.

If you save them as DEFAULT.TWK on your boot disk (same
directory as the accessory itself) then they will be loaded
automatically at start-up.

If you save them under a name that already exists then you
will be given the opportunity to cancel.

Clicking on Load allows you to load a previously saved .TWK
file and make the stored definitions current.

Example
=======
Suppose you own a H-P DeskJet Plus (obviously a person of
taste and refinement) and you want to print your annual
forecast from your spreadsheet.  This comes out to about 130
characters wide, but only 20 rows deep.

You could print this in Condensed mode (17cpi) on normal A4
paper.  But to be more readable, you decide to go for
Landscape orientation in larger print.

130 characters at 10cpi won't fit an A4 sheet, you need
12cpi.  The DeskJet doesn't have Elite (12cpi) printing, but
there is a command to set the horizontal motion index (HMI) -
the distance the carriage moves between characters - to any
multiple of 1/120in.  Thus, by setting the HMI to 10, we can
print 12 characters in the space of 10 - slightly crowded but
entirely readable.  In fact, quite elegant looking.

Suppose your spreadsheet is brain damaged and cannot output a
pound sign (ASCII 187) - don't laugh, it has been known - but
uses a hash (ASCII 35) instead.  You will want to set the
printer to the 'UK' character set, so that it prints a pound
when it receives a hash.

A glance at the DeskJet Plus manual reveals the following in
the list of escape codes:

Landscape:  ESC & l 1 O
UK chars:   ESC ( 1 E
Set HMI:    ESC & k # H

In the Set HMI code, the # is to be replaced by the number
you wish to set it to (in our case 10), in decimal ASCII
characters.

Hold down Alternate and click on one of the buttons, so that
the data entry box pops up.  Give the button a suitable name,
such as Sheet (8 characters or less).

In the Codes field, type the following (not the spaces):

Ctrl-[  &  l  1  O  Ctrl-[  (  1  E  Ctrl-[  &  k  1  0  H

Each time you type Ctrl-[ you will see the Escape character
appear in the Codes field (like a small E and C together). 
The other characters appear as normal.  When finished the
field will appear as per this:

ec&l1Oec(1Eec&k10H

where 'ec' represents the Escape character as described
above.

All finished, hit Return or click OK.  The previous box
re-appears, and one of the buttons is now labelled Sheet.
Click on this button - it will flash briefly - and everything
you print from now on will be landscape and 12 characters per
inch, and all hashes will print as pound signs.

You might want to define Draft and Final buttons, and
possibly a Reset button to set everything back to normal:

Draft:    Ctrl-[  (  s  1  Q
Final:    Ctrl-[  (  s  2  Q
Reset:    Ctrl-[  E 

Printer port
============
TWinpEAKS will send its output to the port defined as the
'Printer' port.  By default this is the parallel port. 
However, if you have used Atari's Control Panel to define the
serial port as your printer port, then the codes will go to
the serial port instead.  Thus, nothing special is needed to
make TWinpEAKS work with a serial printer.

By defining the serial port as your printer port, and
connecting an auto-dial modem, you can use TWinpEAKS as a
handy phone dialler accessory.

Error messages
==============
TWinpEAKS is reasonably well error trapped, and most of the
possible problems will produce some sensible message.  

No codes defined for this button ...
The Codes field for this button is empty.  Hold down
Alternate while clicking the button, to define some codes.

Printer not responding ...
No 'printer ready' signal is present at the printer port.  Is
the printer connected, on-line, with paper available, and
have you selected the correct port using the Atari Control
Panel?  If not, then just fix the problem, and click on
Retry.

Can't open the file ...
TWinpEAKS could not open the file you asked it to load.  Does
the file exist?

Doesn't seem to be a TWinpEAKS file ...
You asked TWinpEAKS to load a file that, as far as it can
tell, it didn't create.  (.TWK files contain a 'magic number'
to identify 'legal' .TWK files.)

File exists, OK to replace?
You asked TWinpEAKS to save a file under an existing
filename.  Click on Cancel if you do not wish to overwrite
the existing file.

Can't create the file ...
TWinpEAKS could not create the file you asked it to save.  Is
the disk write protected?  More obscurely, are you trying to
overwrite an existing file that's marked as Read-only?

The file was not written ...
Confirms that you did not wish to overwrite an existing file,
and your definitions have not, after all, been saved.

Program status
==============
As stated above, this program is public domain.  But I wrote
it and I'm reasonably happy with it, it's my copyright,
please don't pass it off as someone else's work.  

I would be quite interested in creating a more elaborate
version of TWinpEAKS, to sell as shareware at low cost - five
pounds or thereabouts.  Features that I would envisage
including are:

*  three or four more 'pages' of buttons and codes
*  mouse-driven entry of non-keyboard characters into the   
Codes fields
*  ability to include NUL (ASCII zero) in the Codes
*  ability to download a file (user defined font, graphics   
etc) as part of a command

If you would be interested in paying such an amount for such
a program (which would come with printed documentation,
technical support, and other shareware-type features) then
please let me know, because if no-one is, then I won't!

.TWK file structure
===================
A .TWK file can usefully be hacked, for example to place an
informative name in the dialog box header.  (Currently there
is no other way to do this.)  The file is 356 bytes long and
consists of the following fields:

Offset       Length       Field
======       ======       =====
   0            2         Laura's magic number (0xDEAD)
   2           26         Dialog box header string
28+(41*n)       8         Name of button n+1
36+(41*n)      33         Codes for button n+1
                          (0 <= n <= 7)
