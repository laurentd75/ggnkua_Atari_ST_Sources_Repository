This is a new release of SZADB debugger.  Original version 1.0 was
written by Johann Ruegg of the Sozobon fame and Don Dugger.  This
new version 1.2 was build upon original by Anthony Howe and Michal
Jaegermann. (Version 1.1 was used internally and never released.)

Short summary of differences between two versions:
	- more stepping commands (next, finish, jump)
	- szadb requests can be attached to breakpoints and
	  stepping commands and will be executed automatically
	- function keys can be defined to do useful things
	- szadb output can be saved in a file
	- support for other compilers besides Sozobon C
          (MWC, gcc after small modifications, hooks for other compilers)
	- debugee arguments can be passed on a command line
	- some initial defaults are changed
        - improved disassembler
        - expanded documentation

As previously all sources are included.  Together with sources are packed
LaTeX sources for 'szadb PRIMER' - 20 page document which gives a gentle
introduction to debugging with szadb.  A poor line printer approximation
of this material is posted together with binaries.  The symbol table is
not stripped from adb.ttp so you may try it on itself.

Just to whet your appetite the following tip.  To set-up initial breakpoints
and definitions for your debugging session create file like that:

F1 main:b $k11;$k12;$k13;$k14;1000$s;main:d;$b;:c
F11 myfunca+4:b <sp=X;<sp,8/x
F12 myfuncb+4:b ="xxy = "; <a6+8/X
F13 :n <sp=X
F14 :f <sp=X;<d0=p

Pass name of this file to szadb with -k option. Start debugger, hit F1 
and <return> followed by :c and you are in business.  Read docs to decipher
this mumbo-jumbo above.

   Happy bug hunting,
   Michal Jaegermann
   Edmonton, Alberta, CANADA
   ntomczak@ualtavm.bitnet, ntomczak@vm.cms.ualberta.ca
