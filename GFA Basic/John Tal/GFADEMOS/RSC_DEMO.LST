' ******************************************************************
' *                                                                *
' *                          RSC_DEMO.LST                          *
' *                                                                *
' *                Written for ST FORMAT MAGAZINE                  *
' *                                                                *
' *          This program will run in GFA Basic V2 or V3           *
' *                                                                *
' *                                                                *
' ******************************************************************
'
' This demo, will put up a FORM, constructed with a RESOURCE editor.
' The form, will allow you to change the current disk drive, from a
' choice of those connected.
'
'
'
@Rsrc_free     ! free space for resource file
'
@Rsrc_load("st_form.rsc") !load resource file
'
Do
  ' Just as a demo we will keep on doing the drive box
  @Do_resource
  Alert 2,"Run again ",1,"Stop|Cont",V  ! do you want to go again?
  Exit If V=1
Loop
'
Procedure Do_resource
  Showm
  Num=Bios(10) !         number of drives connected in binary
  Curdrv%=Gemdos(&H19)+1 ! current drive
  @Rsrc_gaddr(0,0,Tree%) !get address of our resource into tree%
  Tree%=Lpeek(Addrout)
  @Form_center(Tree%,Fx%,Fy%,Fw%,Fh%)! get the size for all resolutiions
  For N%=2 To 17           ! disable any drives not connected
    If Not @Btst(Num,N%-2)
      @Ob_disable(Tree%,N%)
    Endif
  Next N%
  @Ob_set(Tree%,Curdrv%+1) ! set current drive as preselected
  @Objc_draw(Tree%,0,99,Fx%,Fy%,Fw%,Fh%) ! draw the FORM
  @Form_do(Tree%,S%)! wait till OK pressed
  For N%=2 To 17
    If @Btst(@Ob_state(Tree%,N%),0) !find object selected
      Ndr%=N%-1 ! new drive ?
    Endif
  Next N%
  If Curdrv%<>Ndr%
    Curdrv%=Ndr%       ! if new drive <> current drive
    Chdrive Ndr%       ! change disk drives
    Dr$=Chr$(Asc("A")+Curdrv%-1)
  Endif
  @Ob_clr(Tree%,18)! clear the OK button
  Print "Drive =";Dr$,Curdrv%
Return
'
Procedure Objc_draw(Tree%,Drstartob%,Drdepth%,Fx%,Fy%,Fw%,Fh%)
  @Fill_gcont(42,6,1,1,0)
  @Fill_gint(Drstartob%,Drdepth%,Fx%,Fy%,Fw%,Fh%)
  Lpoke Addrin,Tree%
  @Gem
Return
'
Procedure Form_do(Tree%,Dostartob%)
  @Fill_gcont(50,1,1,1,0)
  Dpoke Gintin,Dostartob%
  Lpoke Addrin,Tree%
  @Gem
Return
'
Procedure Form_center(Tree%,Fx%,Fy%,Fw%,Fh%)
  @Fill_gcont(54,0,5,1,0)
  Lpoke Addrin,Tree%
  @Gem
  Fx%=Dpeek(Gintout+2)
  Fy%=Dpeek(Gintout+4)
  Fw%=Dpeek(Gintout+6)
  Fh%=Dpeek(Gintout+8)
Return
'
Procedure Rsrc_load(Name$)
  Lpfname%=Varptr(Name$)
  @Fill_gcont(110,0,1,1,0)
  Lpoke Addrin,Lpfname%
  Gemsys 110
  If Dpeek(Gintout)=0
    Out 2,7
    Print "Resource not found"
    Stop
  Endif
Return
'
Procedure Rsrc_free
  @Fill_gcont(111,0,1,0,0)
  @Gem
Return
'
Procedure Rsrc_gaddr(Gtype%,Gindex%,Tree%)
  @Fill_gcont(112,2,1,0,1)
  Dpoke Gintin,Gtype%
  Dpoke Gintin+2,Gindex%
  @Gem
  Tree%=Lpeek(Addrout)
Return
'
Procedure Fill_gcont(V1%,V2%,V3%,V4%,V5%)
  Dpoke Gcontrl,V1%
  Dpoke Gcontrl+2,V2%
  Dpoke Gcontrl+4,V3%
  Dpoke Gcontrl+6,V4%
  Dpoke Gcontrl+8,V5%
Return
'
Procedure Fill_gint(V1%,V2%,V3%,V4%,V5%,V6%)
  Dpoke Gintin,V1%
  Dpoke Gintin+2,V2%
  Dpoke Gintin+4,V3%
  Dpoke Gintin+6,V4%
  Dpoke Gintin+8,V5%
  Dpoke Gintin+10,V6%
Return
'
Procedure Gem
  Gemsys
  Ret=Dpeek(Gintout)
Return
Procedure Ob_disable(Tree%,Obj%)
  Dpoke ((Tree%+24*Obj%)+10),Dpeek((Tree%+24*Obj%)+10) Or 8
Return
Procedure Ob_set(Tree%,Obj%)
  Dpoke ((Tree%+24*Obj%)+10),Dpeek((Tree%+24*Obj%)+10) Or 1
Return
Procedure Ob_clr(Tree%,Obj%)
  Dpoke ((Tree%+24*Obj%)+10),Dpeek((Tree%+24*Obj%)+10) Xor 1
Return
Deffn Ob_state(Tree%,Obj%)=Dpeek((Tree%+24*Obj%)+10)
Deffn Btst(Var,Bit)=(Var And 2^Bit)=(2^Bit)
Deffn Bset(Var,Bit)=Var Or 2^Bit
Deffn Bclr(Var,Bit)=(2^Bit And Var) Xor Var
