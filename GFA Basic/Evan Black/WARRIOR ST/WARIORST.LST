' ********************************************************************
'
'                              WARRIOR ST
'
'                  GFA BASIC 3.0 program by Evan Black
'                        graphics by Jason Black
'
'              (C) Copyright by 1990 Antic Publishing, Inc.
'
' **********************************************************************
'
' Standard error checking routines
' GFA BASIC 3.0
' AHJ for Antic Publishing, START Magazine
'
path$=DIR$(0)+"\"                      ! set variables for error check
rez%=XBIOS(4)
'
DEFMOUSE 0
IF rez%<>0 THEN                        !Low rez required
  ALERT 3,"Sorry, Warrior ST runs in|low resolution only.",1," OK ",dummy
  EDIT
ENDIF
'
IF NOT EXIST(path$+"WARIORST.PC1")     !check for datafiles in same folder
  ALERT 3,"The datafile WARIORST.PC1 must be|in the same folder as WARIORST.GFA.",1," OK ",dummy
  EDIT
ENDIF
DIM spalette%(16,3)
@save_pal                              !Save user's color palette
'
' End of standard error checking routines
'
HIDEM
@init_compress
@load_pc1("WARIORST.PC1")
fade!=FALSE
@setup
@init
DO
  SHOWM
  edflag!=FALSE
  @title
  IF edflag!
    @loadscrn
    IF a|<>28
      @editor
    ENDIF
  ELSE
    REPEAT
    UNTIL INKEY$="" AND MOUSEK=0
    @loadscrn
    IF a|<>28
      @game
    ENDIF
  ENDIF
LOOP
> PROCEDURE setup ! initial setup
  DIM p$(2,10),arrow$(2,10),screen|(32,20,9),sp|(2,2,9),edit|(32,20),image$(50),small$(50),smallp$(9)
  DIM x&(2),y&(2),d|(2),ax&(2),ay&(2),s|(2),bc|(2),button!(2),m|(2),bf!(2),amf!(2),warp%(2)
  DIM ox%(2),oy%(2),ad|(2),bh|(2),lives|(2),arrows|(2),ar|(2)
  DIM mnu|(29,2),ep|(2,2),sequence|(9),explode&(2,3),f$(26),column$(3),pal%(15,3)
  DIM win$(2,2),warp$(4),explode$(4),color%(15,3)
  REM initialize screens, stone wall on top & bottom
  helpflag!=TRUE
  RESTORE color
  FOR i%=0 TO 15
    FOR a|=1 TO 3
      READ x%
      pal%(i%,a|)=x%
    NEXT a|
  NEXT i%
  color:
  DATA 7,7,7,4,4,4,3,4,6,5,5,5,4,6,6,2,3,6,2,6,7,6,6,3,5,5,2,1,6,7,3,7,7,3,3,3,0,0,0,6,6,2,2,2,2,2,4,6
  ARRAYFILL screen|(),0
  desc$=SPACE$(144)
  FOR z%=1 TO 9
    FOR x%=1 TO 32  ! solid lines on top & bottom
      screen|(x%,1,z%)=1
      screen|(x%,18,z%)=1
    NEXT x%
    sp|(1,1,z%)=3   ! player positions
    sp|(1,2,z%)=3
    sp|(2,1,z%)=30
    sp|(2,2,z%)=16
    MID$(desc$,(z%-1)*16+1,16)="   Warrior ST   "
  NEXT z%
  FOR x%=1 TO 19 ! set menu values for editor
    mnu|(x%,1)=x%*2-1
    mnu|(x%,2)=x%*2
  NEXT x%
  GET 49,149,98,199,win$(1,1) ! red wins w/arrow
  GET 149,149,198,199,win$(1,2) ! red wins no arrow
  GET 99,149,148,199,win$(2,1) ! blue wins w/arrow
  GET 199,149,248,199,win$(2,2) ! blue wins no arrow
  GET 0,147,20,199,column$(1) ! whole column
  REM  GET 0,154,15,156,column$(2) ! section of middle
  GET 28,184,48,199,column$(3) ! top & bottom borders
  GET 257,185,319,199,smalltit$
  DEFFILL 0,1
  PBOX 0,145,200,199 ! erase column before getting title
  GET 0,36,319,150,title$
  FOR x%=1 TO 32  ! read images
    GET 10*x%-10,0,10*x%-1,9,image$(x%)
    GET 2*x%+198,20,2*x%+199,21,small$(x%)
  NEXT x%
  FOR x%=33 TO 38
    GET 10*x%-130,10,10*x%-121,19,image$(x%)
    GET 2*x%+198,20,2*x%+199,21,small$(x%)
  NEXT x%
  GET 260,10,269,19,image$(0)
  GET 260,10,261,11,small$(0)
  GET 276,20,277,21,small$(39)
  GET 278,20,279,21,small$(40)
  GET 280,20,281,21,small$(41)
  a|=0
  FOR x%=0 TO 7 ! get players
    xx%=x%*10
    INC a|
    IF x%=2 OR x%=5
      INC a|
    ENDIF
    GET xx%,10,xx%+9,19,p$(1,a|)
    GET xx%,20,xx%+9,29,p$(2,a|)
    GET xx%+80,10,xx%+89,19,arrow$(2,a|)
    GET xx%+80,20,xx%+89,29,arrow$(1,a|)
  NEXT x%
  FOR x%=1 TO 4
    xx%=x%*10
    GET xx%+150,10,xx%+159,19,explode$(x%)
    GET xx%+150,20,xx%+159,29,warp$(5-x%)
  NEXT x%
  GET 0,30,9,39,e$
  DIM as%(32255/4)
  as%=(VARPTR(as%(0))+255) AND &HFFFF00
  ss%=XBIOS(3)
  os%=XBIOS(3)
  ~XBIOS(5,L:os%,L:os%,-1)
  STICK (0)
  DEFFILL 0
  z%=1
RETURN
> PROCEDURE fade_in
  IF fade!=FALSE
    ARRAYFILL color%(),0
    FOR c%=1 TO 7
      FOR i%=0 TO 15
        FOR a|=1 TO 3
          IF pal%(i%,a|)<c%
            INC color%(i%,a|)
          ENDIF
        NEXT a|
      NEXT i%
      VSYNC
      FOR i%=0 TO 15
        SETCOLOR i%,color%(i%,1),color%(i%,2),color%(i%,3)
      NEXT i%
    NEXT c%
    fade!=TRUE
  ENDIF
RETURN
> PROCEDURE fade_out
  fade!=FALSE
  FOR c%=1 TO 7
    FOR i%=0 TO 15
      FOR a|=1 TO 3
        IF color%(i%,a|)>0
          DEC color%(i%,a|)
        ENDIF
      NEXT a|
    NEXT i%
    VSYNC
    FOR i%=0 TO 15
      SETCOLOR i%,color%(i%,1),color%(i%,2),color%(i%,3)
    NEXT i%
  NEXT c%
RETURN
> PROCEDURE init
  men|=2
  d|(1)=8
  d|(2)=4
  x&(1)=sp|(1,1,z%)*10-10
  y&(1)=sp|(1,2,z%)*10+10
  x&(2)=sp|(2,1,z%)*10-10
  y&(2)=sp|(2,2,z%)*10+10
  arrows|(1)=20
  arrows|(2)=20
  amf!(1)=FALSE
  amf!(2)=FALSE
  warp%(1)=0
  warp%(2)=0
  ARRAYFILL explode&(),0
  @redraw
  SGET bk$
RETURN
> PROCEDURE game
  @fade_out
  ~XBIOS(5,L:os%,L:os%,-1)
  ARRAYFILL sequence|(),0
  FOR x%=1 TO 9
    a|=FALSE
    REPEAT
      xx%=RANDOM(9)+1
      IF sequence|(xx%)=0
        sequence|(xx%)=x%
        a|=1
      ENDIF
    UNTIL a|
  NEXT x%
  lives|(1)=5
  lives|(2)=5
  ac&=0
  seq|=1
  z%=sequence|(seq|)
  @init
  ~XBIOS(5,L:as%,L:ss%,-1)
  REPEAT
    @fade_in
    FOR man|=1 TO 2  ! initialize arrow variables
      bh|(man|)=0
      bf!(man|)=FALSE
      amf!(man|)=FALSE
    NEXT man|
    REPEAT
      @jstick
      @shoot
      @arrow
      @move
      i$=INKEY$
    UNTIL collide|>0 OR i$=CHR$(27)
    IF collide|<>0
      FOR x%=1 TO 10
        @move
      NEXT x%
      ~XBIOS(5,L:os%,L:os%,-1)
      DEC lives|(collide|)
      a|=collide| XOR 3
      PBOX 110,60,210,143
      COLOR 5
      BOX 130,70,189,130
      FOR x%=110 TO 190 STEP 20
        PUT x%,60,column$(3)
        PUT x%,128,column$(3)
      NEXT x%
      PUT 112,75,column$(1)
      PUT 188,75,column$(1)
      DEFFILL 0,0
      GET 128,130,142,141,bk1$
      PBOX 128,130,142,141
      GET 178,130,192,141,bk2$
      PBOX 178,130,192,141
      PUT 130,132,p$(1,8)
      PUT 180,132,p$(2,4)
      s1!=FALSE
      s2!=FALSE
      IF a|=1
        FOR y%=1 TO 3
          SOUND 1,0,1,3,0
          SOUND 2,0,1,5,0
          SOUND 3,0,1,6,0
          WAVE 7,7,1,30720,5
          IF y%=2
            PAUSE 10
          ELSE
            PAUSE 5
          ENDIF
          WAVE 0,0
        NEXT y%
      ELSE
        FOR y%=1 TO 3
          SOUND 1,0,1,2,0
          SOUND 2,0,1,4,0
          SOUND 3,0,1,5,0
          WAVE 7,7,1,30720,5
          IF y%=1
            PAUSE 10
          ELSE
            PAUSE 5
          ENDIF
          WAVE 0,0
        NEXT y%
      ENDIF
      i%=0
      REPEAT
        IF s1! OR s2!
          INC i%  ! counter if button isn't pressed.
        ENDIF
        FOR y%=1 TO 2
          VSYNC
          PUT 135,75,win$(a|,y%)
          FOR x%=1 TO 10
            PAUSE 1
            IF STRIG(1) AND NOT (s1!)
              PUT 128,130,bk1$
              s1!=TRUE
            ENDIF
            IF STRIG(2) AND NOT (s2!)
              PUT 178,130,bk2$
              s2!=TRUE
            ENDIF
          NEXT x%
          WAVE 0,0
        NEXT y%
      UNTIL (s1! AND i%>10) OR (s2! AND i%>10) OR (s1! AND s2!)
      collide|=0
      EXIT IF lives|(1)=0 OR lives|(2)=0
      INC seq|
      IF seq|<10 AND lives|(1)<>0 AND lives|(2)<>0
        @fade_out
        z%=sequence|(seq|)
        @init
      ENDIF
    ENDIF
  UNTIL lives|(1)=0 OR lives|(2)=0 OR i$=CHR$(27)
  IF i$=CHR$(27)
    ~XBIOS(5,L:os%,L:os%,-1)
  ENDIF
  IF lives|(1)<lives|(2)  ! Blue Wins
    PBOX 80,50,240,165
    FOR x%=80 TO 220 STEP 20
      PUT x%,50,column$(3)
      PUT x%,150,column$(3)
    NEXT x%
    PUT 80,65,column$(1)
    PUT 220,65,column$(1)
    GET 80,75,240,117,temp$
    FOR y%=80 TO 110 STEP 10
      PUT 80,y%-3,temp$
    NEXT y%
    temp$=""
    PUT 135,80,win$(2,2)
    COLOR 8
    BOX 130,90,189,120
    PUT 128,70,smalltit$
    DEFTEXT 15
    TEXT 108,130,"  GAME OVER  "
    TEXT 108,138,"PRESS ANY KEY"
    TEXT 108,146," TO CONTINUE "
    FOR x%=0 TO 40
      SOUND 7,13,2+x%/2,4,0
      SOUND 7,13,3+x%/2,3,0
      SOUND 7,13,1+x%/2,4,0
    NEXT x%
    FOR y%=1 TO 3
      SOUND 1,0,1,2,0
      SOUND 2,0,1,4,0
      SOUND 3,0,1,5,0
      WAVE 7,7,1,30720,0
      IF y%=2
        PAUSE 20
      ELSE
        PAUSE 10
      ENDIF
    NEXT y%
  ELSE   ! Red wins
    PBOX 80,50,240,165
    FOR x%=80 TO 220 STEP 20
      PUT x%,50,column$(3)
      PUT x%,150,column$(3)
    NEXT x%
    PUT 80,65,column$(1)
    PUT 220,65,column$(1)
    GET 80,75,240,117,temp$
    FOR y%=80 TO 110 STEP 10
      PUT 80,y%-3,temp$
    NEXT y%
    temp$=""
    PUT 135,80,win$(1,2)
    COLOR 11
    BOX 130,90,189,120
    PUT 128,70,smalltit$
    DEFTEXT 11
    TEXT 108,130,"  GAME OVER  "
    TEXT 108,138,"PRESS ANY KEY"
    TEXT 108,146," TO CONTINUE "
    FOR x%=0 TO 40
      SOUND 7,13,2+x%/2,5,0
      SOUND 7,13,3+x%/2,3,0
      SOUND 7,13,1+x%/2,4,0
    NEXT x%
    FOR y%=1 TO 3
      SOUND 1,0,1,3,0
      SOUND 2,0,1,5,0
      SOUND 3,0,1,6,0
      WAVE 7,7,1,30720,0
      IF y%=1
        PAUSE 20
      ELSE
        PAUSE 10
      ENDIF
    NEXT y%
  ENDIF
  REPEAT
  UNTIL INKEY$=""
  REPEAT
  UNTIL INKEY$<>""
  @fade_out
RETURN
> PROCEDURE editor
  ~XBIOS(5,L:os%,L:os%,-1)
  STICK 0
  edflag!=TRUE
  z%=1 ! screen being edited
  @scrn_edit
  @fade_out
  @redraw
  d|=1
  @mnu
  @fade_in
  DO
    REPEAT
    UNTIL INKEY$=""
    REPEAT
      MOUSE mx%,my%,mz%
      KEYTEST k%
      k|=k% AND &HFF
      IF k|=0
        k%=(k% AND &HF0000)/8192 ! 16=help, 8=undo
      ELSE
        k%=0
      ENDIF
      IF my%<20 AND helpflag!=TRUE AND k|=0 AND k%=0
        @help
      ELSE
        @hbox_off
        oix&=-1
      ENDIF
    UNTIL mz%<>0 OR k|<>0 OR k%<>0
    IF k|>96 AND k|<123
      SUB k|,32   ! convert small letters to caps
    ENDIF
    IF (mz%<>0 AND my%<20) OR (k|=<90 AND k|=>48) OR (k%=16 OR k%=8)  ! menu bar
      rdflag!=TRUE
      @c
      ADD iy&,2
      IF ix&<20 AND k|=0 AND k%=0 ! block selected
        d|=mnu|(ix&,iy&)
        PUT 205,5,image$(d|)
        rdflag!=FALSE
        @edit_scrn
      ELSE IF (ix&=30 AND iy&=2 AND mz%=1) OR k|=85 OR k%=8 ! undo
        temp$="undo this screen?|erases all changes"
        ALERT 1,temp$,1,"UNDO|CANCEL",x%
        IF x%=1
          @scrn_edit
        ENDIF
      ELSE IF (ix&=32 AND iy&=2 AND mz%=1) OR k|=84   ! test
        @hbox_off
        REPEAT
        UNTIL INKEY$="" AND MOUSEK=0
        lives|(1)=5
        lives|(2)=5
        test!=TRUE
        @edit_scrn
        @fade_out
        @init
        @fade_in
        men|=1
        HIDEM
        REPEAT
          @jstick
          @move
          @shoot
          i$=INKEY$
        UNTIL STRIG(2) OR i$=CHR$(27)
        ~XBIOS(5,L:os%,L:os%,-1)
        STICK 0
        SHOWM
        test!=FALSE
        @edit_scrn
        @fade_out
      ELSE IF (ix&=31 AND iy&=1 AND mz%=1) OR k|=76  ! load
        @hbox_off
        DEFFILL 0,0
        PBOX 0,115,319,199
        PUT 0,131,column$(1)
        PUT 299,131,column$(1)
        FOR x%=0 TO 300 STEP 20
          PUT x%,115,column$(3)
          PUT x%,184,column$(3)
        NEXT x%
        @up
        @edit_scrn
        @loadscrn
        @scrn_edit
        @fade_out
      ELSE IF (ix&=32 AND iy&=1 AND mz%=1) OR k|=88  ! exit
        @hbox_off
        temp$="EXIT.  This will|erase your screens if|you haven't saved them."
        ALERT 1,temp$,1,"Exit|Cancel",x%
        IF x%=1
          edflag!=FALSE
          @fade_out
          EXIT IF TRUE
        ENDIF
      ELSE IF (ix&=28 AND iy&=1 AND mz%=1) OR (k|>48 AND k|<58)   ! change screen
        @edit_scrn
        IF k|<>0
          SUB k|,48
          z%=k|
          @scrn_edit
        ELSE
          @small
        ENDIF
      ELSE IF (ix&=29 AND iy&=1 AND mz%=1) OR k|=72 OR k%=16! Help
        helpflag!=NOT (helpflag!)
        DEFTEXT 13,,,6
        IF helpflag!
          DEFTEXT 10
        ENDIF
        TEXT 281,7,"H"
        rdflag!=FALSE
      ELSE IF k|=77 OR ((ix&=24 OR ix&=25) AND mz%<>0)! Mirror
        REPEAT
        UNTIL MOUSEK=0
        @hbox_off
        IF mz%=1
          DEFFILL 0
          PBOX 0,0,319,19
          COLOR 7
          BOX 0,0,319,19
          FOR x%=64 TO 256 STEP 64
            LINE x%,0,x%,19
          NEXT x%
          DEFTEXT 13,,,6
          TEXT 16,14,"NONE"
          COLOR 2
          LINE 96,2,96,17
          LINE 152,10,167,10
          LINE 216,17,231,2
          LINE 288,2,288,17
          LINE 280,10,295,10
          COLOR 5
          BOX 88,7,93,12
          BOX 99,7,104,12
          BOX 157,2,162,7
          BOX 157,13,162,18
          BOX 217,2,222,7
          BOX 225,13,230,18
          BOX 280,2,285,7
          BOX 280,13,285,18
          BOX 291,2,296,7
          BOX 291,13,296,18
          REPEAT
            MOUSE mx%,my%,mz%
          UNTIL mz%=2 OR (mz%=1 AND my%<19)
          IF mz%=1
            mirror%=INT(mx%/64)
          ENDIF
        ELSE
          mirror%=0
        ENDIF
        rdflag!=FALSE
        @mnu
      ELSE IF (ix&=29 AND iy&=2 AND mz%=1) OR k|=78 ! Name
        @hbox_off
        PBOX 46,82,274,118
        BOX 46,82,274,118
        DEFTEXT 13,,,6
        TEXT 56,100,"Enter Name for this Screen"
        LET name$=MID$(desc$,(z%-1)*16+1,16)
        @text_input(88,108,16,0)
        IF LEN(name$)<16
          a|=16-LEN(name$)
          LET name$=SPACE$(a|/2)+name$+SPACE$(a|/2)
          IF ODD(a|)
            LET name$=name$+" "
          ENDIF
        ENDIF
        MID$(desc$,(z%-1)*16+1,16)=name$
      ELSE IF ix&=27 AND mz%=1 ! iy=1 red guy; iy=2 blue guy
        @hbox_off
        REPEAT
        UNTIL MOUSEK=0
        x%=iy&
        PUT 205,5,p$(x%,8-(4*(x%-1)))
        REPEAT
          REPEAT
            MOUSE mx%,my%,mz%
          UNTIL mz%<>0 AND my%>30 AND my%<190
          @c
          IF mz%=1 AND my%>29 AND my%<190 AND edit|(ix&,iy&)=0
            PUT ep|(x%,1)*10-10,ep|(x%,2)*10+10,image$(edit|(ep|(x%,1),ep|(x%,2)))
            ep|(x%,1)=ix&
            ep|(x%,2)=iy&
            PUT ix&*10-10,iy&*10+10,p$(x%,8-(4*(x%-1)))
            x%=0
          ENDIF
        UNTIL x%=0 OR mz%=2
        rdflag!=FALSE
        @mnu
      ELSE IF (ix&=31 AND iy&=2 AND mz%=1) OR k|=83  ! save
        @hbox_off
        DEFFILL 0,0
        PBOX 0,115,319,199
        PUT 0,131,column$(1)
        PUT 299,131,column$(1)
        FOR x%=0 TO 300 STEP 20
          PUT x%,115,column$(3)
          PUT x%,184,column$(3)
        NEXT x%
        @up
        @edit_scrn
        @savescrn
        @fade_out
      ELSE IF (ix&=30 AND iy&=1 AND mz%=1) OR k|=67  ! clear
        @hbox_off
        temp$=" |CLEAR this Screen?"
        ALERT 3,temp$,1,"CLEAR|CANCEL",x%
        IF x%=1
          ARRAYFILL edit|(),0
          FOR x%=1 TO 32
            edit|(x%,1)=1
            edit|(x%,18)=1
          NEXT x%
        ENDIF
      ELSE IF (ix&=28 AND iy&=2 AND mz%=1) ! toggle overwrote flag
        oflag!=NOT (oflag!)
        rdflag!=FALSE
      ELSE IF k|=46  ! no overwrite
        oflag!=FALSE
        rdflag!=FALSE
      ELSE IF k|=42  ! set overwrite flag
        oflag!=TRUE
        rdflag!=FALSE
      ELSE IF TRUE  ! no action, no redraw
        rdflag!=FALSE
      ENDIF
      IF rdflag!
        @redraw
        @mnu
        @fade_in
      ELSE
        @oflag
        REPEAT
        UNTIL MOUSEK=0
      ENDIF
    ELSE ! screen
      IF my%>20  ! block selected on screen
        @c
        dd|=d|
        IF mz%=2
          dd|=0
        ENDIF
        IF (iy&=1 OR iy&=18) AND (dd|>8 OR dd|<1) ! only indestructable on top & bottom
          dd|=1
        ENDIF
        dd1|=dd|
        IF edit|(ix&,iy&)=0 OR d|=0 OR oflag! OR mz%=2
          edit|(ix&,iy&)=dd|
          PUT ix&*10-10,iy&*10+10,image$(dd|)
          IF mirror%=1 OR mirror%=4  !horiz.
            dd|=dd1|
            IF dd|=9
              dd|=10
            ELSE IF dd|=10
              dd|=9
            ELSE IF dd|=27 OR dd|=28 OR dd|=33
              ADD dd|,2
            ELSE IF dd|=29 OR dd|=30 OR dd|=35
              SUB dd|,2
            ENDIF
            PUT (33-ix&)*10-10,iy&*10+10,image$(dd|)
            edit|(33-ix&,iy&)=dd|
          ENDIF
          IF mirror%=2 OR mirror%=4 ! vert.
            dd|=dd1|
            IF dd|=9 OR dd|=27 OR dd|=29 OR dd|=31
              ADD dd|,1
            ELSE IF dd|=10 OR dd|=28 OR dd|=30 OR dd|=32
              SUB dd|,1
            ENDIF
            PUT ix&*10-10,(19-iy&)*10+10,image$(dd|)
            edit|(ix&,19-iy&)=dd|
          ENDIF
          IF mirror%=3 OR mirror%=4 ! diag
            dd|=dd1|
            IF dd|=27
              dd|=30
            ELSE IF dd|=30
              dd|=27
            ELSE IF dd|=28 OR dd|=31
              INC dd|
            ELSE IF dd|=29 OR dd|=32
              DEC dd|
            ELSE IF dd|=33
              dd|=35
            ELSE IF dd|=35
              dd|=33
            ENDIF
            PUT (33-ix&)*10-10,(19-iy&)*10+10,image$(dd|)
            edit|(33-ix&,19-iy&)=dd|
          ENDIF
        ENDIF
      ENDIF
    ENDIF
  LOOP
RETURN
> PROCEDURE help
  @c
  IF oix&<>ix& OR oiy&<>iy&
    VSYNC
    HIDEM
    SELECT ((ix&-1)*2+iy&+2)
      '
    CASE 1 TO 8 ! indestructible
      @hbox_on(134,36,"INDESTRUCTIBLE")
      temp$="CANNOT BE DESTROYED"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      '
    CASE 9,10 ! mirrors
      @hbox_on(224,42,"MIRRORS")
      temp$="REFLECT ARROWS"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      temp$="CAN BE DESTROYED WITH A DIRECT HIT"
      TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      '
    CASE 11 TO 18,20,26 TO 36 ! DESTRUCTIBLE ITEMS
      @hbox_on(116,36,"DESTRUCTIBLE")
      temp$="CAN BE DESTROYED"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      '
    CASE 19 ! DESTRUCTIBLE BRICK
      @hbox_on(260,42,"DESTRUCTIBLE BRICK")
      temp$="LOOKS THE SAME AS INDESTRUCTIBLE BRICKS"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      temp$="USE FOR SECRET PASSAGES"
      TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      '
    CASE 21 ! INDESTRUCTIBLE TELEPORTER
      @hbox_on(230,42,"INDESTRUCTIBLE TELEPORTER")
      temp$="TELEPORTS PLAYER TO RANDOM LOCATION"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      temp$="CANNOT BE DESTROYED"
      TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      '
    CASE 22 ! DESTRUCTIBLE TELEPORTER
      @hbox_on(230,42,"DESTRUCTIBLE TELEPORTER")
      temp$="TELEPORTS PLAYER TO RANDOM LOCATION"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      temp$="CAN BE DESTROYED"
      TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      '
    CASE 23 ! INVISIBLE TELEPORTER
      @hbox_on(230,42,"INVISIBLE TELEPORTER")
      temp$="TELEPORTS PLAYER TO RANDOM LOCATION"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      temp$="CAN BE DESTROYED, BUT NOT SEEN"
      TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      '
    CASE 24 ! INVISIBLE WALL - INDESTRUCTIBLE
      @hbox_on(188,42,"INVISIBLE WALL")
      temp$="TURNS INTO AN INDESTRUCTIBLE"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      temp$="BRICK WHEN SHOT"
      TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      '
    CASE 25 ! INVISIBLE WALL - DESTRUCTIBLE
      @hbox_on(200,36,"INVISIBLE WALL")
      temp$="CAN BE DESTROYED, BUT NOT SEEN"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      '
    CASE 37 ! EXTRA ARROW
      @hbox_on(206,36,"EXTRA ARROW")
      temp$="GIVES PLAYER 1 OR 2 MORE ARROWS"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      '
    CASE 38 ! ARROW BOUNCER
      @hbox_on(218,42,"ARROW BOUNCER")
      temp$="HURLS ARROW IN A RANDOM DIRECTION"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      temp$="CAN BE DESTROYED IF SHOT ENOUGH"
      TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      '
    CASE 41 TO 44 ! CURRENT ITEM INDICATOR
      IF oix&<21 OR oix&>22
        @hbox_on(218,42,"CURRENT ITEM INDICATOR")
        temp$="SHOWS THE ITEM CURRENTLY SELECTED"
        TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
        temp$="LEFT BUTTON DRAWS, RIGHT ERASES"
        TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      ENDIF
      '
    CASE 47 TO 50 ! MIRROR MODE INDICATOR
      IF oix&<24 OR oix&>25
        @hbox_on(218,42,"MIRROR MODE INDICATOR")
        temp$="LEFT BUTTON TO CHOOSE MIRROR MODE"
        TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
        temp$="RIGHT BUTTON TO TURN MIRROR OFF"
        TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
        '
      ENDIF
    CASE 53 ! RED WARRIOR
      @hbox_on(248,36,"RED WARRIOR")
      temp$="SETS STARTING POSITION FOR RED WARRIOR"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      '
    CASE 54 ! RED WARRIOR
      @hbox_on(254,36,"BLUE WARRIOR")
      temp$="SETS STARTING POSITION FOR BLUE WARRIOR"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      '
    CASE 55 ! SCREEN NUMBER INDICATOR
      @hbox_on(242,42,"CURRENT SCREEN NUMBER")
      temp$="LEFT BUTTON FOR MENU"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      temp$="USE 1-9 TO JUMP DIRECTLY TO A SCREEN"
      TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      '
    CASE 56 ! OVERWRITE INDICATOR
      @hbox_on(236,42,"OVERWRITE INDICATOR")
      temp$="*=OVERWRITE EXISTING OBJECTS"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      temp$=".=CANNOT OVERWRITE EXISTING OBJECTS"
      TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      '
    CASE 57 ! HELP MODE
      @hbox_on(218,42,"HELP MODE SELECTOR")
      temp$="RED=ON, WHITE=OFF"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      temp$="USE LEFT BUTTON OR PRESS HELP KEY"
      TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      '
    CASE 58 ! SCREEN NAME
      @hbox_on(236,42,"SCREEN NAME SELECTOR")
      temp$="USE TO ASSIGN A NAME TO THIS SCREEN"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      temp$="USE LEFT BUTTON OR PRESS N"
      TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      '
    CASE 59 ! CLEAR SCREEN
      @hbox_on(254,42,"CLEAR CURRENT SCREEN")
      temp$="ERASES EVERYTHING ON THE CURRENT SCREEN"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      temp$="USE LEFT BUTTON OR PRESS C"
      TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      '
    CASE 60 ! UNDO
      @hbox_on(218,42,"UNDO LAST CHANGE")
      temp$="ERASES YOUR LAST CHANGE"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      temp$="USE LEFT BUTON OR PRESS U OR UNDO"
      TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      '
    CASE 61 ! LOAD
      @hbox_on(248,42,"LOAD NEW SET OF SCREENS")
      temp$="REPLACES CURRNT SCREENS WITH NEW ONES"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      temp$="USE LEFT BUTON OR PRESS L"
      TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      '
    CASE 62 ! SAVE
      @hbox_on(236,42,"SAVE CURRENT SET OF SCREENS")
      temp$="STORES THE CURRENT SCREENS ON DISK"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      temp$="USE LEFT BUTON OR PRESS S"
      TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      '
    CASE 63 ! EXIT
      @hbox_on(176,48,"EXIT EDITOR")
      temp$="RETURNS TO TITLE SCREEN"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      DEFTEXT 10
      temp$="* SAVE YOUR WORK FIRST *"
      TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      DEFTEXT 14
      temp$="USE LEFT BUTTON OR PRESS X"
      TEXT 160-(LEN(temp$)*6/2),hy%+38,temp$
      '
    CASE 64 ! TEST
      @hbox_on(242,48,"ENTER TEST MODE")
      temp$="TEST CURRENT SCREEN - USE LEFT BUTTON"
      TEXT 160-(LEN(temp$)*6/2),hy%+26,temp$
      temp$="OR PRESS ESC TO RETURN TO EDITOR"
      TEXT 160-(LEN(temp$)*6/2),hy%+32,temp$
      temp$="USE LEFT BUTTON OR PRESS L"
      TEXT 160-(LEN(temp$)*6/2),hy%+38,temp$
      '
    DEFAULT
      @hbox_off
    ENDSELECT
    SHOWM
    oix&=ix&
    oiy&=iy&
  ENDIF
RETURN
> PROCEDURE hbox_off
  IF help$<>""
    PUT hx%,hy%,help$
    help$=""
  ENDIF
RETURN
> PROCEDURE hbox_on(hw%,hh%,temp$)
  @hbox_off
  hx%=160-(hw%/2)
  hy%=100-(hh%/2)
  GET hx%,hy%,hx%+hw%,hy%+hh%,help$
  PBOX hx%,hy%,hx%+hw%,hy%+hh%
  COLOR 10
  BOX hx%,hy%,hx%+hw%,hy%+hh%
  DEFTEXT 13,,,6
  TEXT 160-(LEN(temp$)*8/2),hy%+18,temp$
  DEFTEXT 14,,,4
RETURN
> PROCEDURE title
  ~XBIOS(5,L:os%,L:os%,-1)
  STICK 0
  REPEAT
    CLS
    PUT 0,0,title$
    PUT 0,131,column$(1)
    PUT 109,131,column$(1)
    PUT 199,131,column$(1)
    PUT 299,131,column$(1)
    FOR x%=0 TO 300 STEP 20
      PUT x%,115,column$(3)
      PUT x%,184,column$(3)
    NEXT x%
    DEFTEXT 9,0,0,6
    TEXT 64,125,"programmed by EVAN BLACK"
    DEFTEXT 10
    TEXT 68,194,"graphics by JASON BLACK"
    DEFTEXT 13,0,0,13
    TEXT 49,164,"GAME"
    TEXT 149,164,"QUIT"
    TEXT 239,164,"EDITOR"
    DEFTEXT 10
    TEXT 49,164,"G"
    TEXT 149,164,"Q"
    TEXT 239,164,"E"
    @fade_in
    DO
      REPEAT
        MOUSE mx%,my%,mz%
        i$=INKEY$
      UNTIL mz%<>0 OR i$<>""
      IF (mz%=1 AND mx%<110 AND mx%>20 AND my%>135 AND my%<183) OR mz%=2 OR i$="G" OR i$="g"
        edflag!=FALSE
        DEFFILL 0,1
        PBOX 30,140,100,170
        HIDEM
        FOR x%=109 TO 299 STEP 2
          VSYNC
          PUT x%,131,column$(1)
          PSET x%-1,131,0
          PSET x%-1,183,0
        NEXT x%
        SHOWM
        @up
        EXIT IF TRUE
      ELSE IF (mz%=1 AND mx%<300 AND mx%>219 AND my%>135 AND my%<183) OR i$="e" OR i$="E"
        edflag!=TRUE
        DEFFILL 0,1
        PBOX 230,140,290,170
        HIDEM
        FOR x%=199 TO 0 STEP -2
          VSYNC
          PUT x%,131,column$(1)
          PSET x%+21,131,0
          PSET x%+21,183,0
        NEXT x%
        SHOWM
        @up
        EXIT IF TRUE
      ELSE IF (mz%=1 AND mx%<199 AND mx%>129 AND my%>135 AND my%<183) OR i$="q" OR i$="Q"  ! quit
        DEFFILL 0,1
        PBOX 30,140,100,170
        PBOX 230,140,290,170
        PBOX 140,140,200,170
        DEFTEXT 13,0,0,13
        TEXT 53,164,"YES"
        TEXT 239,164,"  NO  "
        DEFTEXT 10
        TEXT 53,164,"Y"
        TEXT 239,164,"  N"
        DEFTEXT 13,0,0,6
        TEXT 138,155,"ARE YOU"
        TEXT 146,165,"SURE?"
        REPEAT
        UNTIL MOUSEK=0 AND INKEY$=""
        REPEAT
          MOUSE mx%,my%,mz%
          i$=INKEY$
        UNTIL i$<>"" OR mz%<>0
        IF (mz%=1 AND mx%<110 AND mx%>20 AND my%<183 AND my%>135) OR i$="y" OR i$="Y"
          @restore_pal
          END
        ENDIF
        mz%=4
        EXIT IF TRUE
      ENDIF
    LOOP
  UNTIL mz%<>4
RETURN
> PROCEDURE up
  HIDEM
  GET 0,115,319,140,temp$
  SGET bk$
  ~XBIOS(5,L:ss%,L:ss%,-1)
  SPUT bk$
  ~XBIOS(5,L:as%,L:as%,-1)
  SPUT bk$
  FOR x%=114 TO 2 STEP -2
    SWAP as%,ss%
    ~XBIOS(5,L:as%,L:ss%,-1)
    PAUSE 1
    PUT 0,x%,temp$
  NEXT x%
  ~XBIOS(5,L:os%,L:os%,-1)
  PUT 0,0,temp$
  temp$=""
  SHOWM
RETURN
> PROCEDURE move
  SWAP as%,ss%
  SPUT bk$
  PRINT AT(5,2);arrows|(1);
  PRINT AT(38,2);arrows|(2)
  FOR man|=1 TO men|
    IF amf!(man|)
      PUT ax&(man|),ay&(man|),arrow$(man|,ad|(man|)),7
    ENDIF
    IF warp%(man|)<>0
      @warp
      temp%=warp%(man|)    ! abs() command bombs in compiler
      IF temp%<0
        temp%=-temp%
      ENDIF
      PUT x&(man|),y&(man|),warp$(temp%),7
    ELSE
      PUT x&(man|),y&(man|),p$(man|,d|(man|)),7
    ENDIF
    IF explode&(man|,3)<>0
      @explode
      temp%=explode&(man|,3)    ! abs() command bombs in compiler
      IF temp%<0
        temp%=-temp%
      ENDIF
      PUT explode&(man|,1),explode&(man|,2),explode$(temp%),7
    ENDIF
  NEXT man|
  ~XBIOS(5,L:as%,L:ss%,-1)
RETURN
> PROCEDURE jstick
  FOR man|=1 TO men|
    IF warp%(man|)=0  ! do not move if in warp.
      s|(man|)=STICK(man|)
      IF s|(man|)>10
        s|(man|)=0
      ENDIF
      button!(man|)=STRIG(man|)
      m|(man|)=2 ! pixels player moved per turn
      IF button!(man|) AND amf!(man|)=FALSE
        m|(man|)=0
        bf!(man|)=TRUE
        INC bh|(man|) ! counter to release arrow for lead button
        IF bh|(man|)>30
          button!(man|)=FALSE
        ENDIF
      ELSE
        bh|(man|)=0
      ENDIF
      ox%(man|)=x&(man|)
      oy%(man|)=y&(man|)
      IF s|(man|) AND 1
        SUB y&(man|),m|(man|)
        d|(man|)=s|(man|)
      ENDIF
      IF s|(man|) AND 2
        ADD y&(man|),m|(man|)
        d|(man|)=s|(man|)
      ENDIF
      IF s|(man|) AND 4
        SUB x&(man|),m|(man|)
        d|(man|)=s|(man|)
      ENDIF
      IF s|(man|) AND 8
        ADD x&(man|),m|(man|)
        d|(man|)=s|(man|)
      ENDIF
      IF x&(man|)<0
        x&(man|)=310
      ELSE IF x&(man|)>310
        x&(man|)=0
      ENDIF
      @chkman
    ENDIF
  NEXT man|
RETURN
> PROCEDURE shoot
  FOR man|=1 TO men|
    IF bf!(man|) AND button!(man|)=FALSE AND amf!(man|)=FALSE AND arrows|(man|)>0 ! button pushed & released
      SOUND 2,0,12,2,0
      WAVE 2,2,1,3840
      IF NOT (test!)
        DEC arrows|(man|)
      ENDIF
      ad|(man|)=d|(man|)  ! arrow direction
      amf!(man|)=TRUE   ! arrow moving flag
      IF bh|(man|)>30
        ar|(man|)=30
      ELSE
        ar|(man|)=20
      ENDIF
      ax&(man|)=x&(man|)  ! arrow x coordinate
      ay&(man|)=y&(man|)  ! arrow y coordinate
      IF (ad|(man|) AND 1) OR (ad|(man|) AND 2)
        y%=MOD(ay&(man|),10)
        IF y%<6
          SUB ay&(man|),y%
        ELSE
          ADD ay&(man|),10-y%
        ENDIF
      ENDIF
      IF (ad|(man|) AND 4) OR (ad|(man|) AND 8)
        x%=MOD(ax&(man|),10)
        IF x%<6
          SUB ax&(man|),x%
        ELSE
          ADD ax&(man|),10-x%
        ENDIF
      ENDIF
      bf!(man|)=FALSE   ! button has been pressed
      bc|(man|)=0   ! bullet counter (range of arrow)
      bh|(man|)=0 ! reset button hold counter to eliminate rapid fire
    ENDIF
    aspd|=10 ! arrow speed
    IF amf!(man|)
      IF ad|(man|) AND 1
        SUB ay&(man|),aspd|
      ENDIF
      IF ad|(man|) AND 2
        ADD ay&(man|),aspd|
      ENDIF
      IF ad|(man|) AND 4
        SUB ax&(man|),aspd|
      ENDIF
      IF ad|(man|) AND 8
        ADD ax&(man|),aspd|
      ENDIF
      INC bc|(man|)
      IF bc|(man|)>ar|(man|)
        amf!(man|)=FALSE
        bh|(man|)=0
      ENDIF
      IF ax&(man|)<0
        ax&(man|)=310
      ENDIF
      IF ax&(man|)>310
        ax&(man|)=0
      ENDIF
      @chkarrow
      IF collide|
        man|=10
      ENDIF
    ENDIF
  NEXT man|
RETURN
> PROCEDURE load_pc1(degas.file$)
  '
  ' Thanks to Jim Kent for this routine to read a compressed picture
  '
  IF degas.file$<>""
    IF EXIST(degas.file$)
      bk$=SPACE$(32760)
      p%=VARPTR(bk$)+34
      BLOAD degas.file$,p%
      screen%=XBIOS(2)
      temp$=SPACE$(40)
      b%=VARPTR(temp$)
      picture.res=DPEEK(p%)
      p%=p%+2
      FOR i%=0 TO 15
        SETCOLOR i%,0
        p%=p%+2
      NEXT i%
      '
      FOR k%=1 TO 200 !400 hi res
        scr%=screen%
        FOR c%=1 TO 4 !1 to 2 medium res; 1 to 1 hi res
          p%=C:unpac(L:p%,L:b%,40) !80 medium res; 80 hi res
          q%=C:unrav(L:b%,L:scr%,40,8) !80,4 medium res; 80;2 hi res
          ADD scr%,2
        NEXT c%
        ADD screen%,160
      NEXT k%
    ELSE
      ALERT 1,"Can't find file.",1,"Cancel",a|
    ENDIF
  ENDIF
RETURN
> PROCEDURE init_compress
  '
  ' Stash into memory object code routines to uncompress picture
  '
  unpack$=SPACE$(15*4)
  unpac=VARPTR(unpack$)
  RESTORE unpack
  FOR i=1 TO 15
    READ x%
    LPOKE unpac,x%
    unpac=unpac+4
  NEXT i
  unpac=VARPTR(unpack$)
  unrave$=SPACE$(10*4)
  unrav=VARPTR(unrave$)
  RESTORE unravel
  FOR i=1 TO 10
    READ x%
    LPOKE unrav,x%
    unrav=unrav+4
  NEXT i
  unrav=VARPTR(unrave$)
  unpack:
  DATA &h48e740e0,&h206f0014,&h226f0018,&h2449d4ef
  DATA &h001c4241,&h12186b0c,&h12d851c9,&hfffcb3ca
  DATA &h6df0600e,&h44011018,&h12c051c9,&hfffcb3ca
  DATA &h6de02008,&h4cdf0702,&h4e750000
  unravel:
  DATA &h48e740c0,&h206f0010,&h226f0014,&h302f0018
  DATA &h322f001a,&he2486004,&h3298d2c1,&h51c8fffa
  DATA &h4cdf0302,&h4e750000
RETURN
> PROCEDURE redraw
  CLS
  help$=""
  IF edflag! AND NOT (test!)
    edit|(ep|(1,1),ep|(1,2))=0
    edit|(ep|(2,1),ep|(2,2))=0
    FOR x|=1 TO 32
      FOR y|=1 TO 18
        PUT MUL(x|,10)-10,MUL(y|,10)+10,image$(edit|(x|,y|))
      NEXT y|
    NEXT x|
    PUT ep|(1,1)*10-10,ep|(1,2)*10+10,p$(1,8)
    PUT ep|(2,1)*10-10,ep|(2,2)*10+10,p$(2,4)
  ELSE
    screen|(sp|(1,1,z%),sp|(1,2,z%),z%)=0
    screen|(sp|(2,1,z%),sp|(2,2,z%),z%)=0
    FOR y|=1 TO 18
      FOR x|=1 TO 32
        xx|=screen|(x|,y|,z%)
        IF xx|=19
          xx|=1
        ENDIF
        IF xx|<>0 AND (xx|<23 OR xx|>25) ! don't display invisibles
          PUT MUL(x|,10)-10,MUL(y|,10)+10,image$(xx|)
        ENDIF
      NEXT x|
    NEXT y|
  ENDIF
  DEFTEXT 2,0,0,4
  TEXT 32,6,"Warrior"
  TEXT 277,6,"Warrior"
  DEFTEXT 5,0,0,6
  TEXT 0,6,"RED"
  DEFTEXT 8,0,0,6
  TEXT 237,6,"BLUE"
  PRINT AT(3,2);" :";
  PRINT AT(36,2);" :";
  PUT 10,8,image$(37)
  PUT 274,8,image$(37)
  FOR x%=1 TO lives|(1)
    PUT x%*10+50,8,p$(1,8),7
  NEXT x%
  FOR x%=1 TO lives|(2)
    PUT 258-x%*10,8,p$(2,4),7
  NEXT x%
  PRINT AT(13,1);MID$(desc$,(z%-1)*16+1,16)
  DEFTEXT 2,0,0,6
  TEXT 120,16,"Warrior ST"
  SGET bk$
RETURN
> PROCEDURE small
  REPEAT
  UNTIL MOUSEK=0 AND INKEY$=""
  CLS
  PUT 128,2,smalltit$
  DEFTEXT 3,0,0,6
  TEXT 108,25,"SELECT SCREEN"
  COLOR 10
  BOX 0,32,319,199
  BOX 0,88,319,144
  BOX 106,32,212,199
  zz%=0
  FOR yp|=0 TO 2
    FOR xp|=0 TO 2
      INC zz%
      screen|(sp|(1,1,zz%),sp|(1,2,zz%),zz%)=0
      screen|(sp|(2,1,zz%),sp|(2,2,zz%),zz%)=0
      IF smallp$(zz%)=""
        FOR y|=1 TO 18
          FOR x|=1 TO 32
            xx|=screen|(x|,y|,zz%)
            IF xx|=19
              xx|=1
            ENDIF
            IF xx|<>0 AND (xx|<23 OR xx|>25) ! don't display invisibles
              PUT MUL(x|,2)+xp|*106+21,MUL(y|,2)+yp|*56+40,small$(xx|)
            ENDIF
          NEXT x|
        NEXT y|
        GET xp|*106+23,yp|*56+42,xp|*106+87,yp|*56+78,smallp$(zz%)
      ELSE
        PUT xp|*106+23,yp|*56+42,smallp$(zz%)
      ENDIF
      LET name$=MID$(desc$,(zz%-1)*16+1,16)
      DEFTEXT 13,,,4
      TEXT xp|*106+7,yp|*56+39,"    screen "+STR$(zz%)
      TEXT xp|*106+7,yp|*56+84,name$
    NEXT xp|
  NEXT yp|
  REPEAT
    temp%=0
    REPEAT
      MOUSE mx%,my%,mz%
      i$=INKEY$
      INC temp%
      VSYNC
    UNTIL mz%<>0 OR i$<>"" OR temp%>40
    g!=NOT g!
    VSYNC
    HIDEM
    FOR yp|=0 TO 2
      FOR xp|=0 TO 2
        FOR p|=1 TO 2
          x|=sp|(p|,1,xp|+1+yp|*3)
          y|=sp|(p|,2,xp|+1+yp|*3)
          IF g!
            PUT MUL(x|,2)+xp|*106+21,MUL(y|,2)+yp|*56+40,small$(p|+38)
          ELSE
            PUT MUL(x|,2)+xp|*106+21,MUL(y|,2)+yp|*56+40,small$(41)
          ENDIF
        NEXT p|
      NEXT xp|
    NEXT yp|
    SHOWM
  UNTIL mz%=2 OR (mz%=1 AND my%>30) OR i$<>""
  IF mz%=1
    z%=INT(mx%/106)+1
    IF my%>81
      ADD z%,3
    ENDIF
    IF my%>137
      ADD z%,3
    ENDIF
    @scrn_edit
  ELSE IF i$<>""
    k|=ASC(i$)
    SUB k|,48
    IF k|>0 AND k|<10
      z%=k|
      @scrn_edit
    ENDIF
  ENDIF
RETURN
> PROCEDURE chkarrow
  xx%=ax&(man|)-x&(NOT (man|)-4)
  yy%=ay&(man|)-y&(NOT (man|)-4)
  collide|=0
  SELECT ad|(man|)
  CASE 1,2   ! up,down
    IF (xx%>-5 AND xx%<5) AND (yy%>-9 AND yy%<9)
      collide|=NOT (man|)-4
      SOUND 1,0,2,1,0
      WAVE 57,7,9,12288,0
      explode&(collide|,3)=-4
      explode&(collide|,1)=x&(collide|)
      explode&(collide|,2)=y&(collide|)
    ENDIF
  CASE 4,8  ! left,right
    IF (xx%>-9 AND xx%<9) AND (yy%>-5 AND yy%<5)
      collide|=NOT (man|)-4
      SOUND 1,0,2,1,0
      WAVE 57,7,9,12288,0
      explode&(collide|,3)=-4
      explode&(collide|,1)=x&(collide|)
      explode&(collide|,2)=y&(collide|)
    ENDIF
  CASE 5,6,9,10  ! diagonals
    IF (xx%>-9 AND xx%<9) AND (yy%>-9 AND yy%<9)
      collide|=NOT (man|)-4
      SOUND 1,0,2,1,0
      WAVE 57,7,9,12288,0
      explode&(collide|,3)=-4
      explode&(collide|,1)=x&(collide|)
      explode&(collide|,2)=y&(collide|)
    ENDIF
  ENDSELECT
  mx%=ax&(man|)+5
  my%=ay&(man|)+5
  @c
  i%=screen|(ix&,iy&,z%)
  IF i%<>0
    SELECT i%
    CASE 1 TO 8,21,24  ! indestructible
      SOUND 3,0,6,2,0
      WAVE 4,4,1,1046
      amf!(man|)=FALSE
      bh|(man|)=0
      IF i%=24  ! invisible indestructible
        SPUT bk$
        PUT ix&*10-10,iy&*10+10,image$(1)
        SGET bk$
      ENDIF
    CASE 9  ! mirror /
      SELECT ad|(man|)
      CASE 6,9 ! direct hit
        amf!(man|)=FALSE
        bh|(man|)=0
        @erase
        @create_explode
      CASE 1,4
        SOUND 3,0,1,4,0
        WAVE 4,4,1,2096
        ad|(man|)=ad|(man|) XOR 5
      CASE 2,8
        SOUND 3,0,1,4,0
        WAVE 4,4,1,2096
        ad|(man|)=ad|(man|) XOR 10
      ENDSELECT
    CASE 10  ! mirror  \
      SELECT ad|(man|)
      CASE 5,10  ! direct hit
        amf!(man|)=FALSE
        bh|(man|)=0
        @erase
        @create_explode
      CASE 1,8
        SOUND 3,0,1,4,0
        WAVE 4,4,1,2096
        ad|(man|)=ad|(man|) XOR 9
      CASE 2,4
        SOUND 3,0,1,4,0
        WAVE 4,4,1,2096
        ad|(man|)=ad|(man|) XOR 6
      ENDSELECT
    CASE 11 TO 20,22,23,25 TO 37  ! destructible
      amf!(man|)=FALSE
      bh|(man|)=0
      @erase
      @create_explode
    CASE 38  ! arrow distorter
      ad|(man|)=RANDOM(10)+1
      SOUND 3,0,1,4,0
      WAVE 4,4,1,2096
      IF ad|(man|)=7 OR ad|(man|)=3
        amf!(man|)=FALSE
        bh|(man|)=0
        @erase
        @create_explode
      ENDIF
    ENDSELECT
  ENDIF
RETURN
> PROCEDURE chkman
  yy%=NOT (man|)-4
  x%=x&(man|)-x&(yy%)
  y%=y&(man|)-y&(yy%)
  collide2!=FALSE
  IF ((x%>-10 AND x%<1) OR (x%<10 AND x%>-1)) AND ((y%>-10 AND y%<1) OR (y%<10 AND y%>-1))
    collide2!=TRUE
  ENDIF
  mx%=x&(man|)
  my%=y&(man|)
  @c
  xx|=MOD(mx%,10)
  yy|=MOD(my%,10)
  FOR x|=1 TO 4
    SELECT x|
    CASE 1
      i%=screen|(ix&,iy&,z%)
    CASE 2
      INC ix&
      IF ix&>32
        ix&=0
      ENDIF
      IF xx|<>0
        i%=screen|(ix&,iy&,z%)
      ENDIF
    CASE 3
      INC iy&
      IF xx|<>0 AND yy|<>0
        i%=screen|(ix&,iy&,z%)
      ENDIF
    CASE 4
      DEC ix&
      IF ix&<0
        ix&=32
      ENDIF
      IF yy|<>0
        i%=screen|(ix&,iy&,z%)
      ENDIF
    ENDSELECT
    SELECT i%
    CASE 21 TO 23 ! teleporters
      warp%(man|)=-4
      x&(man|)=ix&*10-10
      y&(man|)=iy&*10+10
      SOUND 1,0,12,5,0
      WAVE 1,1,15,2048,1
      x|=5
    CASE 37  ! arrows
      @erase
      ADD arrows|(man|),RANDOM(2)+1
      IF arrows|(man|)>20
        arrows|(man|)=20
      ENDIF
      bf!(man|)=FALSE
      ac&=0
      x|=5
    ENDSELECT
    IF i%<>0 OR collide2!
      x&(man|)=ox%(man|)
      y&(man|)=oy%(man|)
    ENDIF
  NEXT x|
RETURN
> PROCEDURE c
  REM figure image location in block for action point in mx%,my%
  ix&=INT(mx%/10)+1
  iy&=INT((my%-20)/10)+1
RETURN
> PROCEDURE warp
  IF warp%(man|)<>0
    ADD warp%(man|),1
    IF warp%(man|)=0  ! shrink completed
      REPEAT
        x%=RANDOM(32)+1
        y%=RANDOM(18)+1
        xx%=x&(NOT (man|)-4)-(x%*10-10)
        yy%=y&(NOT (man|)-4)-(y%*10+10)
        collide2!=FALSE
        IF ((xx%>-10 AND xx%<1) OR (xx%<10 AND xx%>-1)) AND ((yy%>-10 AND yy%<1) OR (yy%<10 AND yy%>-1))
          collide2!=TRUE
        ENDIF
      UNTIL screen|(x%,y%,z%)=0 AND collide2!=FALSE
      collide2!=FALSE
      SOUND 1,0,12,4,0
      WAVE 1,1,15,2048,0
      x&(man|)=x%*10-10
      y&(man|)=y%*10+10
      warp%(man|)=1
    ENDIF
    IF warp%(man|)>4  ! warp completed
      warp%(man|)=0
    ENDIF
  ENDIF
RETURN
> PROCEDURE create_explode
  SOUND 1,0,2,1,0
  WAVE 57,7,9,12288,0
  explode&(man|,3)=-4
  explode&(man|,1)=ix&*10-10
  explode&(man|,2)=iy&*10+10
RETURN
> PROCEDURE explode
  ADD explode&(man|,3),1
  IF explode&(man|,3)=0  ! explosion midpoint
    explode&(man|,3)=1
  ENDIF
  IF explode&(man|,3)>4  ! explosion completed
    explode&(man|,3)=0
  ENDIF
RETURN
> PROCEDURE erase
  REM erase grid at ix,iy
  screen|(ix&,iy&,z%)=0
  SPUT bk$
  PUT ix&*10-10,iy&*10+10,e$,0
  SGET bk$
RETURN
> PROCEDURE arrow
  IF ac&>0
    DEC ac&
  ENDIF
  a|=arrows|(1)+arrows|(2)
  IF (a|=0 AND ac&=0) OR ac=1
    ac&=500
    REPEAT
      x%=RANDOM(32)+1
      y%=RANDOM(18)+1
    UNTIL screen|(x%,y%,z%)=0
    screen|(x%,y%,z%)=37
    SPUT bk$
    PUT x%*10-10,y%*10+10,image$(37)
    SGET bk$
  ENDIF
RETURN
> PROCEDURE oflag
  DEFTEXT 13,,,6
  IF oflag!
    TEXT 271,18,"*"
  ELSE
    TEXT 271,18,"."
  ENDIF
RETURN
> PROCEDURE mnu
  DEFFILL 0,0,0
  DEFTEXT 13,,,6
  PBOX 0,0,319,19
  FOR x%=1 TO 29
    IF mnu|(x%,1)<>0
      PUT x%*10-10,0,image$(mnu|(x%,1))
    ENDIF
    IF mnu|(x%,2)<>0
      PUT x%*10-10,10,image$(mnu|(x%,2))
    ENDIF
  NEXT x%
  COLOR 8
  TEXT 271,7,z%
  @oflag
  PUT 260,0,p$(1,8)
  PUT 260,10,p$(2,4)
  IF helpflag!
    DEFTEXT 10
  ENDIF
  TEXT 281,7,"H"
  DEFTEXT 13
  TEXT 281,18,"N"
  TEXT 291,7,"C"
  TEXT 291,18,"U"
  TEXT 301,7,"L"
  TEXT 301,18,"S"
  TEXT 311,7,"X"
  TEXT 311,18,"T"
  LINE 0,9,319,9
  LINE 0,10,319,10
  FOR x%=0 TO 319 STEP 10
    LINE x%,0,x%,19
  NEXT x%
  PBOX 191,0,259,19
  COLOR 4
  BOX 191,0,259,19
  COLOR 6
  BOX 200,1,220,18
  PUT 205,5,image$(d|)
  BOX 231,1,250,18
  IF mirror%=1
    COLOR 2
    LINE 241,3,241,16
    COLOR 5
    BOX 234,7,239,12
    BOX 243,7,248,12
  ELSE IF mirror%=2
    COLOR 2
    LINE 231,10,249,10
    COLOR 5
    BOX 238,4,243,9
    BOX 238,11,243,16
  ELSE IF mirror%=3
    COLOR 2
    LINE 231,16,249,3
    COLOR 5
    BOX 232,4,237,9
    BOX 244,11,249,16
  ELSE IF mirror%=4
    COLOR 2
    LINE 241,3,241,16
    LINE 231,10,249,10
    COLOR 5
    BOX 234,4,239,9
    BOX 234,11,239,16
    BOX 243,4,248,9
    BOX 243,11,248,16
  ENDIF
RETURN
> PROCEDURE edit_scrn
  x%=VARPTR(edit|(1,1))
  y%=VARPTR(screen|(1,1,z%))
  BMOVE x%,y%,640
  FOR x%=1 TO 2
    sp|(x%,1,z%)=ep|(x%,1)
    sp|(x%,2,z%)=ep|(x%,2)
  NEXT x%
  smallp$(z%)=""
RETURN
> PROCEDURE scrn_edit
  x%=VARPTR(screen|(1,1,z%))
  y%=VARPTR(edit|(1,1))
  BMOVE x%,y%,640
  FOR x%=1 TO 2
    ep|(x%,1)=sp|(x%,1,z%)
    ep|(x%,2)=sp|(x%,2,z%)
  NEXT x%
RETURN
> PROCEDURE loadscrn
  REPEAT
  UNTIL INKEY$="" AND MOUSEK=0
  IF edflag!
    SHOWM
  ELSE
    HIDEM
  ENDIF
  PUT 128,25,smalltit$
  DEFTEXT 3,0,0,6
  TEXT 112,50,"LOAD SCREENS"
  q%=FGETDTA()
  c%=FSFIRST("*.war",1)
  a|=1
  WHILE a|<27
    f$(a|)=CHAR{q%+30}
    IF c%<>0
      f$(a|)=SPACE$(12)
    ENDIF
    IF a|<15
      PRINT AT(4,a|+8);CHR$(64+a|);" - ";f$(a|)
    ELSE
      PRINT AT(22,a|+8-14);CHR$(64+a|);" - ";f$(a|)
    ENDIF
    INC a|
    c%=FSNEXT()
  WEND
  IF edflag!
    PRINT AT(22,21);"<SPACE> BLANK"
  ELSE
    PRINT AT(22,21);"<SPACE> RANDOM"
  ENDIF
  PRINT AT(22,22);"<ESC> CANCEL"
  SGET bk$
  REPEAT
    mz%=0
    REPEAT
      i$=INKEY$
      IF edflag!
        MOUSE mx%,my%,mz%
      ENDIF
    UNTIL i$<>"" OR (mz%<>0 AND edflag!)
    IF mz%=2
      a|=28
    ENDIF
    IF mz%=1
      IF mx%>24 AND mx%<160 AND my%>64 AND my%<176  ! left side
        SUB my%,64
        a|=INT(my%/8)+1
      ELSE IF mx%>168 AND mx%<304 AND my%>64 AND my%<176 ! right side
        SUB my%,64
        a|=INT(my%/8)+15
      ELSE
        a|=0
      ENDIF
    ENDIF
    IF i$<>""
      c%=ASC(i$)
      IF c%>96
        SUB c%,32
      ENDIF
      a%=c%-64
      IF a%<1 OR a%>26
        a|=0
      ELSE
        a|=a%
      ENDIF
      IF ASC(i$)=32
        a|=27
      ELSE IF ASC(i$)=27
        a|=28
      ENDIF
    ENDIF
    IF a|<27
      LET name$=f$(a|)
      IF name$=SPACE$(12)
        a|=0
      ENDIF
    ELSE IF a|=27  ! Random/Blank
      IF edflag!
        REM initialize screens, stone wall on top & bottom
        ARRAYFILL screen|(),0
        FOR q%=1 TO 9
          FOR x%=1 TO 32
            screen|(x%,1,q%)=1
            screen|(x%,18,q%)=1
          NEXT x%
          sp|(1,1,q%)=3   ! player positions
          sp|(1,2,q%)=3
          sp|(2,1,q%)=30
          sp|(2,2,q%)=16
          MID$(desc$,(q%-1)*16+1,16)="   Warrior ST   "
          smallp$(q%)=""
        NEXT q%
        file$=SPACE$(12)
      ELSE
        REPEAT
          xx|=RANDOM(26)+1
          LET name$=f$(xx|)
          a|=xx|
        UNTIL name$<>SPACE$(12)
      ENDIF
    ENDIF
    DEFTEXT 9
    VSYNC
    SPUT bk$
    IF a|=0
      REM buzz
    ELSE IF a|<15
      TEXT 24,a|*8+62,CHR$(64+a|)+" - "+f$(a|)
    ELSE IF a|<27
      TEXT 168,(a|-14)*8+62,CHR$(64+a|)+" - "+f$(a|)
    ELSE IF a|=27 AND edflag!
      TEXT 168,166,"<SPACE> BLANK"
    ELSE IF a|=28
      TEXT 168,174,"<ESC> CANCEL"
    ENDIF
  UNTIL a|<>0
  IF a|<27
    temp$=SPACE$(6508)    !  ** name now found, load file. ***
    BLOAD f$(a|),VARPTR(temp$)
    file$=f$(a|)
    FOR q%=1 TO 9
      smallp$(q%)=""
    NEXT q%
    q%=VARPTR(temp$)
    BMOVE q%,VARPTR(desc$),144
    BMOVE q%+145,VARPTR(screen|(1,1,1)),6270
    BMOVE q%+6416,VARPTR(sp|(1,1,1)),90
  ENDIF
  temp$=""
RETURN
> PROCEDURE savescrn
  REPEAT
  UNTIL INKEY$="" AND MOUSEK=0
  SHOWM
  PUT 128,25,smalltit$
  DEFTEXT 3,0,0,6
  TEXT 112,50,"SAVE SCREENS"
  TEXT 112,58,file$
  q%=FGETDTA()
  c%=FSFIRST("*.war",1)
  a|=1
  WHILE a|<27
    f$(a|)=CHAR{q%+30}
    IF c%<>0
      f$(a|)=SPACE$(12)
    ENDIF
    IF a|<15
      PRINT AT(4,a|+8);CHR$(64+a|);" - ";f$(a|)
    ELSE
      PRINT AT(22,a|+8-14);CHR$(64+a|);" - ";f$(a|)
    ENDIF
    INC a|
    c%=FSNEXT()
  WEND
  PRINT AT(22,21);"<SPACE> NEW FILE"
  PRINT AT(22,22);"<ESC> CANCEL"
  SGET bk$
  LET name$="blank"
  a|=1
  REPEAT
    REPEAT
      i$=INKEY$
      MOUSE mx%,my%,mz%
    UNTIL i$<>"" OR mz%<>0
    IF ASC(i$)=27
      a|=28
    ENDIF
    EXIT IF mz%=2 OR ASC(i$)=27  ! exit
    IF mz%=1
      IF mx%>24 AND mx%<160 AND my%>64 AND my%<176  ! left side
        SUB my%,64
        a|=INT(my%/8)+1
      ELSE IF mx%>168 AND mx%<304 AND my%>64 AND my%<176 ! right side
        SUB my%,64
        a|=INT(my%/8)+15
      ELSE
        a|=0
      ENDIF
    ENDIF
    IF i$<>""
      c%=ASC(i$)
      IF c%>96
        SUB c%,32
      ENDIF
      a%=c%-64
      IF a%<1 OR a%>26
        a|=0
      ELSE
        a|=a%
      ENDIF
      IF ASC(i$)=32
        a|=27
      ELSE IF ASC(i$)=27
        a|=28
      ENDIF
    ENDIF
    IF a|<27
      LET name$=f$(a|)
      IF name$=SPACE$(12)
        a|=0
      ENDIF
    ELSE IF a|=27  ! Enter filename
      DEFFILL 0,0,0
      PBOX 90,82,230,118
      BOX 90,82,230,118
      TEXT 100,100,"Enter Filename:"
      DEFTEXT 13
      TEXT 176,108,".WAR"
      LET name$=SPACE$(8)
      @text_input(104,108,8,-1)
      LET name$=name$+".WAR"
    ELSE IF a|=28  ! exit
      EXIT IF TRUE
    ENDIF
    DEFTEXT 9
    VSYNC
    SPUT bk$
    IF a|=0
      REM buzz
    ELSE IF a|<15
      TEXT 24,a|*8+62,CHR$(64+a|)+" - "+f$(a|)
    ELSE IF a|<27
      TEXT 168,(a|-14)*8+62,CHR$(64+a|)+" - "+f$(a|)
    ELSE IF a|=27
      TEXT 168,166,"<SPACE> NEW FILE"
    ELSE IF a|=28
      TEXT 168,174,"<ESC> CANCEL"
    ENDIF
  UNTIL a|<>0
  IF a|<28
    ON ERROR GOSUB oops
    c%=1
    $U
    IF EXIST(name$)
      $U
      temp$="This file already|Exists. Overwrite?"
      ALERT 3,temp$,1,"OK|CANCEL",c%
    ENDIF
    IF c%=1
      temp$=SPACE$(6508)
      a%=VARPTR(temp$)
      BMOVE VARPTR(desc$),a%,144
      BMOVE VARPTR(screen|(1,1,1)),a%+145,6270
      BMOVE VARPTR(sp|(1,1,1)),a%+6416,90
      $U
      BSAVE name$,VARPTR(temp$),6508
      $U
      file$=name$
    ENDIF
  ENDIF
RETURN
> PROCEDURE text_input(xpos%,ypos%,length%,tflag!)
  REM xcord, ycord, string length, filename flag
  mz%=length%+1
  IF name$=SPACE$(8)
    mz%=1
  ENDIF
  FOR x%=1 TO length%
    IF MID$(name$,x%,1)<>" "
      TEXT xpos%+x%*8,ypos%,MID$(name$,x%,1)
    ELSE
      TEXT xpos%+x%*8,ypos%,"_"
    ENDIF
  NEXT x%
  REPEAT
    DEFTEXT 10
    TEXT xpos%+mz%*8,ypos%,"_"
    REPEAT
      i$=INKEY$
    UNTIL i$<>""
    DEFTEXT 13
    IF mz%<=length%
      TEXT xpos%+mz%*8,ypos%,"_"
    ELSE
      TEXT xpos%+mz%*8,ypos%," "
    ENDIF
    i%=ASC(i$)
    IF i%>=32 AND i%<=122 AND mz%<=length% ! valid character
      IF tflag!
        IF i%>90
          SUB i%,32 ! convert to caps
        ENDIF
        IF (i%>=65 AND i%<=90) OR (i%>=48 AND i%<=57) ! letters & numbers only
          MID$(name$,mz%,1)=CHR$(i%)
          TEXT xpos%+mz%*8,ypos%,CHR$(i%)
          INC mz%
        ENDIF
      ELSE
        MID$(name$,mz%,1)=i$
        TEXT xpos%+mz%*8,ypos%,i$
        INC mz%
      ENDIF
    ELSE IF i%=27  ! clear
      LET name$=SPACE$(length%)
      FOR x%=1 TO length%
        TEXT xpos%+x%*8,ypos%,"_"
      NEXT x%
      mz%=1
    ELSE IF i%=8 AND mz%>1 ! backspace
      DEC mz%
      TEXT xpos%+mz%*8,ypos%,"_"
      MID$(name$,mz%,1)=" "
    ENDIF
  UNTIL i%=13 ! return
  LET name$=TRIM$(name$)
RETURN
> PROCEDURE save_pal
  '
  '
  FOR z%=0 TO 15
    DPOKE CONTRL,26
    DPOKE CONTRL+2,0
    DPOKE CONTRL+6,2
    DPOKE INTIN,z%
    DPOKE INTIN+2,0
    VDISYS
    spalette%(z%,0)=DPEEK(INTOUT+2)
    spalette%(z%,1)=DPEEK(INTOUT+4)
    spalette%(z%,2)=DPEEK(INTOUT+6)
  NEXT z%
RETURN
> PROCEDURE restore_pal
  ' Dimensions: Spalette%(16,3)
  '
  FOR z%=0 TO 15
    DPOKE CONTRL,14
    DPOKE CONTRL+2,0
    DPOKE CONTRL+6,4
    DPOKE INTIN,z%
    DPOKE INTIN+2,spalette%(z%,0)
    DPOKE INTIN+4,spalette%(z%,1)
    DPOKE INTIN+6,spalette%(z%,2)
    VDISYS
  NEXT z%
RETURN
> PROCEDURE oops
  IF FATAL
    ALERT 3,"fatal error..",1,"EXIT",temp%
    @restore_pal
    END
  ENDIF
  RESUME NEXT
RETURN
