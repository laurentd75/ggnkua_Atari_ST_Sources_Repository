@database "fVDI Configurator"
@options "+g -i -s +z -t2 -d12"
@author "Rajah Lone"
@$VER: 0.95 (29/09/2001)
@subject "fVDI Configurator documentation"

@node "fvdi_start"
@title "fVDI Configurator documentation"
@image FVDICONF.IMG 1






                                                       Version: 0.959á

        @{"Generalities" LINK "fvdi_general"}
        @{"Legal" LINK "fvdi_legal"}
        @{"Installation" LINK "fvdi_install"} and @{"preferences" LINK "fvdi_preferences"}

        @{0U}fVDI directives@{0}
             @{"Start-up" LINK "fvdi_startup"}
             @{"Debug" LINK "fvdi_debug"}
             @{"Internal" LINK "fvdi_internal"}
             @{"Defaults" LINK "fvdi_defaults"}
             @{"Fixes" LINK "fvdi_fixes"}
             @{"Interactive setup" LINK "fvdi_interactive"}
             @{"Programmability" LINK "fvdi_prog"} (not yet supported)
             @{"Driver" LINK "fvdi_driver"}
             @{"Acceleration" LINK "fvdi_acceleration"}
             @{"Eclipse/RageIIc" LINK "fvdi_rage2"}
             @{"GDOS fonts" LINK "fvdi_gdosfonts"}


@endnode

@node "fvdi_general"
@title "fVDI Configurator documentation"
@{0U}                                                    Generalities@{0}


    fVDI Configurator is not fVDI!!!

    FVDICONF is an utility that gives the possibility to
    manage several configurations for the FVDI.SYS file
    with a GEM interface.

    The configurations will be handled in a folder and
    concerted/exported to the FVDI.SYS file. Note that
    FVDICONF cannot import a FVDI.SYS file for now, so
    @{0B}you must save your current FVDI.SYS@{0} for security.

    The DEFAULT.CFG file is reserved by FVDICONF and should
    not be manipulated: it's the image of the FVDI.SYS file,
    and is loaded at FVDICONF start.

    Some utilities are proposed, such as switching on and
    off the NVDI screen driver (to permit to run fVDI).

@endnode


@node "fvdi_legal"
@title "fVDI Configurator documentation"
@{0U}                                                           Legal@{0}


    This program is written by Pierre TONTHAT / Rajah Lone

    This software is freeware and its sources are freely provided
    to permits quick upgrades and code expertise.

    Copy and spread are strongly advised.

    Note that this software is and will always be a beta version,
    @{0B}so use it at your own risk@{0}.

@endnode


@node "fvdi_install"
@title "fVDI Configurator documentation"
@{0U}                                                     Installation@{0}


    You can install FVDICONF.PRG everywhere on your harddisk,
    its RSC file must always be besides the program.

    You should create a folder where the several configurations
    will be saved.

    Notes for fVDI installation:
     @{"alone" LINK "fvdi_install_normal"}
     @{"with Eclipse/RageIIc" LINK "fvdi_install_rage2"}


@endnode

@node "fvdi_install_normal"
@title "fVDI Configurator documentation"
@{0U}                                              Normal installation@{0}

    C:\AUTO\ (in order)
            FVDI.PRG
            NVDI.PRG (if you want vector fonts/printer drivers)
    C:\GEMSYS\
            1PLANE.SYS
            4PLANE.SYS
            16BITS.SYS (etc...)
            ...
            NVDIDRV1.SYX (desactivate NVDI with renaming not in SYS)
            NVDIDRV2.SYX
            NVDIDRV4.SYX
            NVDIDRV8.SYX
            NVDIDRVH.SYX
            ...
            *.FNT (GDOS fonts)
    C:\FVDI.SYS (must be modified with a text editor or generated by FVDICONF)

@endnode

@node "fvdi_install_rage2"
@title "fVDI Configurator documentation"
@{0U}                                   Eclipse/RageIIc installation@{0}

    C:\AUTO\ (in order)
            PCI_BIOS.PRG
            FVDI.PRG
            NVDI.PRG (if you want vector fonts/printer drivers)
    C:\GEMSYS\
            RAGE.SYS
            ...
            NVDIDRV1.SYX (desactivate NVDI with renaming not in SYS)
            NVDIDRV2.SYX
            NVDIDRV4.SYX
            NVDIDRV8.SYX
            NVDIDRVH.SYX
            ...
            *.FNT (GDOS fonts)
    C:\
      FVDI.SYS (must be modified with a text editor or generated by FVDICONF)
      FVDI.ACC
      FVDIACC.RSC

@endnode

@node "fvdi_preferences"
@title "fVDI Configurator documentation"
@{0U}                                                    Preferences@{0}


    @{0U}ST-Guide documentation@{0}
    Search and select the FVDICONF.HYP to launch it with the
    'Help' key in the program.

    @{0U}Configurations@{0}
    Choose a directory where the *.CFG files FVDICONF generates
    will be saved and loaded.

    @{0U}GEMSYS folder@{0}
    Choose the GEMSYS folder that will be declared in the FVDI.SYS
    and where FVDICONF will read to create the GDOS font list.

    @{0U}Boot partition@{0}
    Select the partition where the FVDI.SYS will be generated.

    You may also choose to quit or not after exporting to FVDI.SYS
    and if you want a backup file.

    Not that the selected dialog is saved with the preferences.
    This is convenient to change for example the RageIIc screen
    size / color depth quickly.


@endnode

@node "fvdi_startup"
@title "fVDI Configurator documentation"
@{0U}                                             Start-up directives@{0}


   @{0U}Starting from the AUTO folder@{0} [booted] @{0B}Recommended@{0}
      Must be selected if fVDI is to be started from the AUTO
      folder. This is the custom way to use fVDI.

   @{0U}Test the boot code without rebooting@{0} [fakeboot] (*)
      No previous virtual workstation will be copied by fVDI
      They will actually handled by the old VDI.

   @{0U}Launch with other VDI activated@{0} [disable] (*)
      fVDI will be launched in parallel with the normal VDI.

   @{0U}Do not rely on an underlying VDI@{0} [standalone] (*)
      fVDI will refrain from relying on an underlying VDI
      (ie will consider itself as a standalone VDI)


(*) Rarely used in normal usage

@endnode


@node "fvdi_debug"
@title "fVDI Configurator documentation"
@{0U}                                                Debug directives@{0}


   @{0U}Debug mode@{0} [debug (n times)]
      If something bombs, the information given at startup
      (this is before fVDI is running, so it will be on the
      normal Atari screen) using this, together with what for
      example ERR_RPRT.PRG shows, is very useful.
      Multiple "debug" turns on more debug output.

   @{0U}Size of the log file in KiloBytes@{0} [logsize n] (*)
      This is the size of the VDI call log in kbyte.
      Defaults to 4, but is neither allocated nor used without 'debug'.

   @{0U}Send the output to the serial port@{0} [serialout] (*)
      Causes the debug output to be sent to the serial port.


(*) Rarely used in normal usage

@endnode


@node "fvdi_internal"
@title "fVDI Configurator documentation"
@{0U}                                             Internal directives@{0}


   @{0U}Number of allocated blocks@{0} [blocks n] (*)
      This is the number of internal memory blocks allocated.
      Defaults to 2, and there should normally be no reason to change that.

   @{0U}Size of an allocated block@{0} [blocksize n] (*)
      This is the size of the internal memory blocks in kbyte.
      Defaults to 10t, which should normally be enough.

   @{0U}Force to do a single "Trap #2" binding@{0} [singlebend] (*)
      Normally fVDI tries to move itself forward in the vector chains,
      but this might cause trouble together with some other TSR.

   @{0U}Try to allocate memory as itself@{0} [nopidalloc]
      fVDI tries to allocate memory as itself rather than the calling
      application under normal TOS. This option might possibly be
      useful if fVDI is launched before MiNT.

   @{0U}No list of allocated memory blocks@{0} [nomemlink]
      fVDI will refrain from keeping a list of all allocated memory
      blocks. This option is useful if fVDI is launched before MiNT
      running with memory protection.

   @{0U}Disable all VDI vector functions@{0} [novex] (*)
      fVDI will disable all the VDI vector functions (vex_).


(*) Rarely used in normal usage

@endnode


@node "fvdi_defaults"
@title "fVDI Configurator documentation"
@{0U}                                         VDI defaults directives@{0}


   @{0U}Monitor size@{0} [width (-)n, height -(n)] @{0B}Recommended@{0}
      Tell fVDI the size of your screen, in mm.
      Defaults to the approximate size of the picture on an SM124.

   @{0U}Roundness for circles/ellipses/arcs@{0} [arcsplit n, arcmin n, arcmax n]
      The split number indicates how many lines will be drawn as a
      percentage of the largest ellipse radius. The min/max numbers
      make sure that not too few or too many lines are used.
      More lines will result in slower drawing.
      Defaults are as in the original VDI (the GPLed sources).

   @{0U}Color palette file@{0} [palette f]
      fVDI will load this file at start and use it as the default palette.
      May be useful under MagiC 6 without ERS's windframes.


@endnode


@node "fvdi_fixes"
@title "fVDI Configurator documentation"
@{0U}                                                           Fixes@{0}


   @{0U}Use fix for NVDI as the background VDI@{0} [nvdifix] (?)
      fVDI can use NVDI as a background VDI (for dealing with
      non-screen devices). Some strange problems still remain,
      though.

   @{0U}Use Line A fix@{0} [lineafix] (?)
      Some programs look in the lineA variables for certain
      information. fVDI will do a few more changes there.

   @{0U}Report correct screen address in XBIOS@{0} [xbiosfix] (?)
      With this uncommented fVDI will make the XBIOS report
      the correct screen address even if using a graphics card.
      There are still problems with this.


(?) should be used only if necessary

@endnode


@node "fvdi_interactive"
@title "fVDI Configurator documentation"
@{0U}                                               Interactive setup@{0}


   @{0U}Lines of text@{0} [echo "text"]
      Write some text before asking a key.

   @{0U}Default key@{0} [setkey k]
      This key will be reported to fVDI if no key is pressed
      before a timeout.

   @{0U}Delay for waiting a key@{0} [waitkey n]
      Number of seconds for the timeout. After this delay,
      and if no key is pressed, fVDI will take the default key.

   @{0U}Key for quitting immediatly@{0} [exitkey k]
      fVDI will not wait till the timetout, and quits
      immediatly with the default key memorized.

@endnode

@node "fvdi_prog"
@title "fVDI Configurator documentation"
@{0U}                                               Programmability@{0}


    The FVDI.SYS file can contains some "if/goto"-like
    instructions, since the 0.959á version of the driver.

    fVDI Configurator is not yet capable to create and manage
    this instructions. These are used with the interactive mode
    instructions and are:

    @{0U}The swap key instruction@{0} [swapkey]
    Swap current key with the extra one. Several keys can be
    asked in fVDI (see example below). For example, you have
    asked a second key. After this second is used, you may
    need the first one for a "goto". Use swapkey in this case.

    @{0U}The if/goto instruction@{0} [casekey c name]
    Go to ":name" if 'c' is pressed.

    @{0U}The label@{0} [:name]
    Jumps to it at the "casekey" instruction.


 @{0B}Example@{0}:

        echo "Select graphics type"
        echo "r - RageII   m - monochrome   q - skip fVDI"
        setkey r
        waitkey 3
        exitkey q
        casekey m monochrome
        casekey r RageII
        ...

        :RageII
        echo "Select graphics mode (0-9)"
        swapkey
        setkey 5
        waitkey 3

        ...
        01r rage.sys mode key ...
        swapkey
        ...
        casekey r end
        ...

        :monochrome
        echo "Select font set (0-1)"
        swapkey
        setkey 0
        waitkey 3
        ...
        01r 1plane.sys ...
        casekey 1 set1
        casekey 2 set2
        ...
        :set1
        ...
        casekey 1 end

        :set2
        ...

        :end

@endnode

@node "fvdi_driver"
@title "fVDI Configurator documentation"
@{0U}                                              Driver declaration@{0}


   @{0U}Screen driver@{0}
      Choose the *.SYS file for the screen driver in the
      GEMSYS folder. If RAGE.SYS is selected, then the
      related dialogs will be availables.

   @{0U}Use old VDI mouse@{0} [oldmouse] (in the driver line and before)
      fVDI will use the mouse routines from the old VDI.

   @{0U}Use normal RAM for the screen@{0} [shadow]
      fVDI will use a separate buffer of the screen in RAM.
      This is not useful unless you have a really fast processor
      (68040 or better) and RAM that can be accessed much faster
      than the screen.

@endnode


@node "fvdi_acceleration"
@title "fVDI Configurator documentation"
@{0U}                                              Acceleration types@{0}

   @{0U}Acceleration@{0} [accelerate xxxxxx]
      Any software or hardware accelerations can be turned off using
      the accelerate option.

      Acceleration possibilities (in order):
        line
        expand
        fillpoly
        fill
        blit
        text
        mouse

      (if all is selected, this is considered as default, and the
      directive will not appear in the FVDI.SYS file)

@endnode


@node "fvdi_rage2"
@title "fVDI Configurator documentation"
@{0U}                                      Eclipse/RageIIc directives@{0}


    If the RAGE.SYS is selected as the screen driver, then the
    folowwing directives are available.

          @{"Screen" LINK "rage2_scr"}
          @{"Settings" LINK "rage2_set"}
          @{"Options" LINK "rage2_opt"}
          @{"Diagnose" LINK "rage2_diag"}

@endnode

@node "rage2_scr"
@title "fVDI Configurator documentation"
@{0U}                                          Eclipse/RageIIc screen@{0}


    Choose the size of the screen, the color depth and the vertical
    frequency corresponding to the features of your screen monitor.

    fVDI will set the mode as close to (but not higher) the given
    numbers.


@endnode

@node "rage2_set"
@title "fVDI Configurator documentation"
@{0U}                                        Eclipse/RageIIc settings@{0}


   @{0U}Use PCI BIOS@{0} [pcibios] @{0B}Recommended@{0}
      Set things up to work under an Eclipse PCI BIOS.

   @{0U}Screen to RAM blits@{0} [doblit]
      Causes screen->RAM blits to be done.
      Without 'pcibios' this is currently _very_ slow.
      Now only necessary when running without 'pcibios'.

   @{0U}Force initialization@{0} [oldinit] (*)
      Will force the initialization to be done as if 'pcibios'
      wasn't active.
      Should be used only if there are initialization problems.

   @{0U}Use an image cache@{0} [imgcache]
      Tell fVDI to cache images (currently only icon (32x32) sized).

   @{0U}Use an screen cache@{0} [screencache]
      Lets fVDI assume that the applications will only use data
      blitted from the screen for direct repaint (a single one).
      Will cause problems with some applications, but is very fast.

   @{0U}Make the display brighter@{0} [bright]

   @{0U}Screen informations for VDI@{0} [scrninfo vdi]
      Tell fVDI to correct the vq_scrninfo values for the programs
      that uses this function to set theirs colors and blits with
      vro_cpyfm.
      May be useful if the program shows bad colors in True Colors.
      Better left inactive if the program uses direct display on
      the graphic card.


(*) Rarely used in normal usage

@endnode

@node "rage2_opt"
@title "fVDI Configurator documentation"
@{0U}                                         Eclipse/RageIIc options@{0}


   @{0U}Screen address@{0} [screen p] (*)
      In case the internal old screen check is fooled somehow.
      This is not needed if the fVDI ACC is installed.

   @{0U}AES buffer address@{0} [aesbuf p] (*)
      Let fVDI know about the AES's background buffer.
      This is not needed if the fVDI ACC is installed.

   @{0U}Force the DAC to bypass the palette@{0} [nopalette] (*)
      Should never be necessary.

   @{0U}Force all blits to D=S with the 32 bits driver@{0} [onlyrsc]
      The Atari desktop currently can't display icons without this.

   @{0U}Don't special case all 0/1 blits in True Color mode@{0} [realones] (*)
      Often better left inactive.

   @{0U}Skip all blits from screen to RAM@{0} [notoram] (**)
      Skips all blits that would have caused data to be moved from screen to RAM.
      Any cached blits are handled normaly.

   @{0U}Clear the cached blits index@{0} [clrbltidx] (**)
      Clears the variable used to keep track of cached blits. This may be needed
      with some programs that don't live by the assumptions fVDI makes to be
      able to do the blit caching.


(*) Not usefull in normal mode
(**) May be usefull for some programs, but use it this the fVDI accessory

@endnode

@node "rage2_diag"
@title "fVDI Configurator documentation"
@{0U}                                         Eclipse/RageIIc diagnose@{0}


   @{0U}Test the card at initialization@{0} [experiment] (*)
      Will draw a faw things on the screen during startup, before the VDI
      itself is initialized, to test that the card is working okay.

   @{0U}Debug level@{0} [debug (n times)] (*)
      Raises the debug mode of the Rage.sys driver.

   @{0U}The graphic card has 4 Mbytes@{0} [4mb] (*)
      Tell fVDI to treat the card as a 4Mbyte one.
      Only necessary when running without 'pcibios'.


(*) Not usefull in normal mode

@endnode

@node "fvdi_gdosfonts"
@title "fVDI Configurator documentation"
@{0U}                                          GDOS fonts declaration@{0}


   fVDI should be able to deal with any standard fonts.

   If you don't specify a system font, fVDI will use the default one
   (from the ROM).
   It's a very good idea to have a system font in the same sizes as
   the normal GEM one, but it's not necessary.

   In FVDICONF, click on 'Scan' to make a list of GDOS fonts located
   in the GEMSYS folder. Click on 'Remove' to remove the fonts you
   do not want, and 'System font' to declare/undeclare as ones.

@endnode
