'
' Program Convert
'
' Converts START index to Delimited or CardSTak format.
'
' This program can be easily modified to work with any ASCII file.
'
' by Heidi Brumbaugh
' (C) 1988 Antic Publishing Inc.
'
@Initialize
'
Dim M$(16)
'
Let M$(0)="Desk"
Let M$(1)="About Data Converter"
Let M$(2)="--------------------"
Let M$(3)="                    "
Let M$(4)="                    "
Let M$(5)="                    "
Let M$(6)="                    "
Let M$(7)="                    "
Let M$(8)="                    "
Let M$(9)=""
Let M$(10)="File"
Let M$(11)="Load data file..."
Let M$(12)="Save data file..."
Let M$(13)="-----------------"
Let M$(14)="Quit"
Let M$(15)=""
Let M$(16)=""
'
Menu M$()
On Menu  Gosub Handle_menu
'
Repeat
  On Menu
Until Done!
'
Edit
'
Procedure Handle_menu
  Menu Off
  '
  If Menu(0)=1
    Gosub Credits
  Endif
  '
  If Menu(0)=11
    Gosub Load_data
  Endif
  '
  If Menu(0)=12
    Gosub Save_data
  Endif
  '
  If Menu(0)=14
    Let Done!=True
  Endif
  '
Return
'
Procedure Load_data
  '
  Deftext 1,0,0,26
  Text 30,50,"Load"
  Text 30,80,"data"
  Text 30,110,"file:"
  '
  Fileselect "\*.*",Default.file$,Input.file$
  '
  If Input.file$<>"" And Exist(Input.file$)
    '
    Cls
    Defmouse 2
    Text 100,75,"Reading data file..."
    '
    Open "I",#1,Input.file$
    Mag=1
    '
    Line Input #1,X$
    While (Not Eof(#1)) And (Not Done!)
      I=1
      While (I<=Fields) And (Not Eof(#1))
        Index$(I,Mag)=X$
        Inc I
        Line Input #1,X$
      Wend
      Inc Mag
    Wend
    '
    Text 420,75,"done."
    Let Index.total=Mag
    Close #1
    Defmouse 0
    Cls
    Menu M$()
    '
  Endif
Return
'
Procedure Save_data
  '
  If Index.total<1
    Alert 1,"Load data file before saving",1,"Ok",Button%
  Else
    Alert 2,"Select output file format:",0,"Delimit|CardSTak",Button%
    If Button%=1
      @Save_as_delimited
    Else
      @Save_as_cardstak
    Endif
  Endif
  '
Return
'
Procedure Save_as_delimited
  '
  ' Set delimited format
  '
  Record_delimiter$="CR" !Reset default
  '
  @Stext(Tree%,Field_delimiter_obj%,Str$(Field_delimiter%))
  @Stext(Tree%,Record_delimiter_obj%,Record_delimiter$)
  @Sstate(Tree%,Use_quotes_obj%,Use_quotes%)
  @Sstate(Tree%,Quote_numbers_obj%,Quote_numbers%)
  '
  @Edit_a_dialog(Tree%,Field_delimiter_obj%)
  '
  @Gtext(Tree%,Field_delimiter_obj%,*Text$)
  Let Field_delimiter%=Val(Text$)
  @Gtext(Tree%,Record_delimiter_obj%,*Text$)
  Let Record_delimiter$=Text$
  @Gstate(Tree%,Use_quotes_obj%,*State%)
  Let Use_quotes!=State%
  @Gstate(Tree%,Quote_numbers_obj%,*State%)
  Let Quote_numbers!=State%
  '
  If Ex%=8
    Text 30,50,"Save"
    Text 30,80,"data"
    Text 30,110,"file:"
    Fileselect "\*.*","",Output.file$
    If Output.file$<>""
      Cls
      Defmouse 2
      Text 100,75,"Saving data file..."
      Open "O",#1,Output.file$
      '
      For Mag=1 To Index.total
        For I=1 To Fields
          If Use_quotes% And (I<>5 Or Quote_numbers%)
            Print #1;Quote$;
          Endif
          Print #1,Index$(I,Mag);
          If Use_quotes% And (I<>5 Or Quote_numbers%)
            Print #1;Quote$;
          Endif
          If I<>Fields
            Print #1;Chr$(Field_delimiter%);
          Else
            If Record_delimiter$="CR"
              Print #1
            Else
              Print #1;Chr$(Val(Record_delimiter$));
            Endif
          Endif
        Next I
      Next Mag
      Text 405,75,"done."
      Close #1
      Defmouse 0
      Cls
      Menu M$()
      '
    Endif
  Endif
Return
'
Procedure Save_as_cardstak
  Text 30,50,"Save"
  Text 30,80,"data"
  Text 30,110,"file:"
  Fileselect "\*.CRD","",Output.file$
  If Output.file$<>""
    Cls
    Defmouse 2
    Text 100,75,"Saving data file..."
    Open "O",#2,Output.file$
    '
    For Mag=1 To Index.total
      ' output card number
      Z9%=Mag-1
      Print #2,Chr$(Peek(Varptr(Z9%)+2));
      Print #2,Chr$(Peek(Varptr(Z9%)+3));
      ' output select mode
      Print #2,Chr$(1);
      ' set line counter
      For I=1 To Fields-1 !Last line is always blank
        X$=Space$(50)
        Lset X$=Index$(I,Mag)
        Print #2,X$;Chr$(0);
      Next I
    Next Mag
    Text 405,75,"done."
    Close #2
    Defmouse 0
  Endif
  Cls
Return
'
Procedure Credits
  '
  Alert 1,"        Convert    |(C) 1988 Antic Publishing|       |    by Heidi Brumbaugh",1,"Ok",Button%
  '
Return
'
Procedure Initialize
  Let Fields=11
  Let Max_mags=300
  Let Quote$=Chr$(34)
  Dim Index$(Fields,Max_mags)
  Let Default.file$="INDEX.FRM"
  Let Rsrc.file$="CONVERT.RSC"
  '
  @Rsrc_load(Rsrc.file$)
  @Rsrc_gtree(0,*Tree%)
  Let Field_delimiter_obj%=1
  Let Record_delimiter_obj%=2
  Let Use_quotes_obj%=4
  Let Quote_numbers_obj%=6
  Let Ok_obj%=9
  Let Cancel_obj%=10
  '
  ' Set defaults
  Let Field_delimiter%=44 ! comma
  Let Record_delimiter$="CR" ! carriage return/linefeed
  Let Use_quotes%=1
  Let Quote_numbers%=0
  '
Return
'
Procedure Edit_a_dialog(Tree%,Start_obj%)
  '
  Sget Temp$
  ' Center the box on the screen.
  @Form_center(Tree%)
  '
  ' Go get the box coordinates (X%,Y%,B%,H%).
  @Find_coords(Tree%)
  '
  ' Draw the box on the screen.
  @Objc_draw(Tree%,0,8,X%,Y%,B%,H%)
  '
  ' Turn control over to AES starting at 1st editable text
  @Form_do(Tree%,Start_obj%)
  '
  ' Check to see which exit button was selected.
  Ex%=Dpeek(Gintout)
  '
  ' Deselect the button so it will be unselected next time box is drawn.
  @Sstate(Tree%,Ex%,0)
  '
  Sput Temp$
Return
'
' *** AES LIBRARY PROCEDURES ***
' For a detailed explanation of how to get dialog boxes into your own
' programs, read START's continuing GFA BASIC column.
'
Procedure Objc_draw(Tree%,Start%,Depth%,X%,Y%,B%,H%)
  Lpoke Addrin,Tree%
  Dpoke Gintin,Start%
  Dpoke Gintin+2,Depth%
  Dpoke Gintin+4,X%
  Dpoke Gintin+6,Y%
  Dpoke Gintin+8,B%
  Dpoke Gintin+10,H%
  Gemsys 42
Return
'
Procedure Form_do(Tree%,Start%)
  Lpoke Addrin,Tree%
  Dpoke Gintin,Start%
  Gemsys 50
Return
'
Procedure Form_dial(F%,X%,Y%,B%,H%,Xb%,Yb%,Bb%,Hb%)
  Dpoke Gintin,F%
  Dpoke Gintin+2,X%
  Dpoke Gintin+4,Y%
  Dpoke Gintin+6,B%
  Dpoke Gintin+8,H%
  Dpoke Gintin+10,Xb%
  Dpoke Gintin+12,Yb%
  Dpoke Gintin+14,Bb%
  Dpoke Gintin+16,Hb%
  Gemsys 51
Return
'
Procedure Form_center(Tree%)
  Lpoke Addrin,Tree%
  Gemsys 54
Return
'
Procedure Rsrc_load(Nam$)
  Nam$=Nam$+Chr$(0)
  Lpoke Addrin,Varptr(Nam$)
  Gemsys 110
Return
'
Procedure Rsrc_gtree(Index_%,Tree.%)
  Lpoke Gintin,Index_%
  Gemsys 112
  *Tree.%=Lpeek(Addrout)
Return
'
Procedure Find_coords(Tree%)
  X%=Dpeek(Tree%+16)
  Y%=Dpeek(Tree%+18)
  B%=Dpeek(Tree%+20)
  H%=Dpeek(Tree%+22)
Return
'
Procedure Gstate(T_%,N_%,X.%)
  *X.%=Dpeek(T_%+24*N_%+10)
Return
'
Procedure Sstate(T_%,N_%,X_%)
  Dpoke T_%+24*N_%+10,X_%
Return
'
Procedure Gtext(T_%,N_%,X.%)
  Local X_$
  X_$=Space$(100)
  T_%=Lpeek(Lpeek(T_%+24*N_%+12))
  Bmove T_%,Varptr(X_$),100
  *X.%=Left$(X_$,Instr(X_$,Chr$(0))-1)
Return
'
Procedure Stext(T_%,N_%,X_$)
  X_$=X_$+Chr$(0)
  T_%=Lpeek(T_%+24*N_%+12)
  Bmove Varptr(X_$),Lpeek(T_%),Min(Len(X_$),Dpeek(T_%+24)-1)
Return
