'
'                             The Director
'                            by Robert Pyle
'                    (C) 1988 Antic Publishing Inc.
'
Rez%=Xbios(4)
If Rez%<>1
  If Rez%=0
    Alert 3,"   Sorry, this| program runs in|  medium or high| resolution only.",1," Rats!",But%
    System
  Endif
Endif
If Rez%=1
  Tx1%=6
  Tx2%=13
Else
  Tx1%=13
  Tx2%=32
Endif
@Dsk_map
Fol_num%=40       !default value
Fil_num%=500      !default value
Autoflag!=True
@Arr_dim1 ! dimensions the arrays that may be resized later
@Arr_dim2
'
' these arrays hold the output option data
'
Dim Op_mode!(7),Op_mode$(7)
Dim In_clude!(7),In_clude$(7)
'
' these arrays hold the file extenders to be (possibly) omitted
'
Dim S_ext$(4,22),S_ext!(4,22)
'
' this array holds the original color palette
'
Dim Spalette%(15,3)
@Initial
@Get_mouse
End
'
' main program loop
'
Procedure Dir_read
  If Fcnt%<>0
    Alert 2,"Do you want to replace|the files already in|the file array or add|on to them?",1," Append |Replace",But%
    If But%=2
      @Arr_dim1
      @Stat
    Endif
  Endif
  Repeat
    Mfull%=0
    '
    ' set up data transfer address
    '
    Buf$=Space$(44)
    '
    ' define initial directory path
    '
    File_path$="*.*"+Chr$(0)
    '
    Chdir "\"
    Alert 0,"Insert the disk to be|  cataloged into the |    Current Drive.",1,"Ready|Cancel",But%
    If But%=1
      Folder$(0)="\"    ! initial directory path
      N_folder%=1          ! points to the next empty slot
      C_folder%=0          ! points to the current directory path
      First_dir%=True      ! flag indicating first (true) or subsequent dir read
      Dta%=Varptr(Buf$)
      Void Gemdos(&H1A,L:Dta%)
      File_path_ptr%=Varptr(File_path$)
      @Volume
      Alert 0,"This disk is named:| |    "+Volume$+"|",1,"Continue",But%
      Alert 2,"Do you want to enter an|Alternate Disk Name? (This|can be any identifying|label or number.)",2,"Yes|No",But%
      If But%<>2
        Msg1$="Enter any number or description"
        Msg2$="that you wish (this can be a"
        Msg3$="different name or perhaps an"
        Msg4$="identifying serial number.)"
        Msg5$="(12 characters maximum length)"
        In%=12
        @In_box
        If In$<>""
          Avolume$=In$
        Else
          Avolume$=""
        Endif
      Else
        Avolume$=""
      Endif
      Temp$=Space$(12)
      Lset Temp$=Avolume$
      Avolume$=Temp$
      Defmouse 2
      Msg2$="Directory Information"
      Msg3$="Is"
      Msg4$="Being Read"
      @Msg_box2
      '
      ' set file attributes for directory read
      '
      File_attr%=23        ! 0 (normal) + 1 (protected) + 16 (subdirectory)
      '                      + 2 (hidden) + 4 (system)
      Repeat
        Chdir Folder$(C_folder%)
        Dta%=Varptr(Buf$)
        Void Gemdos(&H1A,L:Dta%)     ! Set disk transfer address
        File_path_ptr%=Varptr(File_path$)
        If First_dir%=True     ! Is this the first directory item
          @Dir_read_first
        Else
          @Dir_read_next
        Endif
        If D0=-49     ! No more files
          Inc C_folder%
          First_dir%=True
        Else
          If D0>-1     ! No errors
            @File_process
          Endif
        Endif
        Exit If Full_flag!=True
        If Mfull%=0
          If Fre(0)<5000
            Alert 3,"WARNING: Free Memory Low!|Save Data and then|Re-read this directory.",1,"OKAY!",Mfull%
            Fcnt%=Prev_fcnt%
            Sput M_scr$
            Msg1$="None of the files in the"
            Msg2$="directory currently being read"
            Msg3$="will be included in the saved"
            Msg4$="data. You must re-read this"
            Msg5$="directory after the save."
            @Msg_box1
            Sput M_scr$
          Endif
        Endif
        Exit If Mfull%=1
      Until C_folder%=N_folder%
      Sput M_scr$
      Full_flag!=False
      Prev_fcnt%=Fcnt%
      @Stat
      Chdir "\"
      Defmouse 0
      Alert 2,"Do You Want To| Read Another |  Directory?",1," YES | NO ",But%
    Endif
  Until But%=2
  @Stat
  B%=0
Return
'
' set it up
'
Procedure Initial
  '
  Full_flag!=False
  '
  Restore Op_1
  For I%=1 To 7     ! Initialize output mode
    Op_mode!(I%)=False
    Read Op_mode$(I%)
  Next I%
  Op_mode!(5)=True    ! this is the default value
  Op_flag%=5
  '
  Restore Op_2
  For I%=1 To 7     ! Initialize attribute flags
    In_clude!(I%)=True
    Read Z$
    In_clude$(I%)=Z$
  Next I%
  '
  Restore Ext_dat     ! Initialize 'exclude' array
  For I%=1 To 4
    For J%=1 To 22
      Read S_ext$(I%,J%)    ! put default values into array
      S_ext!(I%,J%)=True
    Next J%
  Next I%
  '
  @Savecolors
  '
  ' set up main screen
  '
  Setcolor 0,0,0,0
  Setcolor 3,0,0,0
  Setcolor 1,0,0,0
  Setcolor 2,0,0,0
  @Ext_box
  @Com_box
  If Exist("SETTINGS.CFG")
    Z$="SETTINGS.CFG"
    @Load_it_up
  Endif
  Autoflag!=False
  Setcolor 0,7,7,7 ! returns color #0 to white
  Setcolor 3,0,0,0 ! returns color #1! to black
  Setcolor 1,0,0,5 ! sets color #2! to dark blue
  Setcolor 2,0,5,0 ! sets color #3! to dark green
Return
'
' dimension or redimension file and folder arrays
'
Procedure Arr_dim1
  ' these arrays hold all the file information
  '
  Erase Finame$()
  Erase Fext$()
  Erase Fsize$()
  Erase Fdate$()
  Erase Ftime$()
  Erase Fpath$()
  Erase Fvolume$()
  Erase Favolume$()
  Dim Finame$(Fil_num%),Fext$(Fil_num%),Fsize$(Fil_num%),Fdate$(Fil_num%),Ftime$(Fil_num%)
  Dim Fpath$(Fil_num%),Fvolume$(Fil_num%),Favolume$(Fil_num%)
  Fcnt%=0            ! number of array entries
  Prev_fcnt%=0
Return
'
' dimension or redimension folder array
'
Procedure Arr_dim2
  ' this array holds the subdirectory paths until they can be processed
  Erase Folder$()
  Dim Folder$(Fol_num%)
Return
'
' change the file name maximum
'
Procedure Set_files
  Msg1$="This will erase any data"
  Msg2$="currently in the file array!"
  Msg3$=""
  Msg4$="(enter 0 to cancel) "
  Msg5$="Enter the new value:"
  In%=5
  @In_box
  If Val(In$)<>0 And In$<>""
    Fil_num%=Val(In$)
    On Error Gosub Err1
    @Arr_dim1
    On Error
    @Stat
  Endif
Return
'
' change the folder maximum
'
Procedure Set_folders
  Msg1$="Enter the new value"
  Msg2$="for the maximum number"
  Msg3$="of folders (subdirectories)"
  Msg4$="in any one of the directories"
  Msg5$="to be read."
  In%=4
  @In_box
  If Val(In$)<>0 And In$<>""
    Fol_num%=Val(In$)
    On Error Gosub Err2
    @Arr_dim2
    On Error
    @Stat
  Endif
Return
'
' error in redimensioning arrays
'
Procedure Err1
  Msg1$="An error occured during the"
  Msg2$="redimensioning of the arrays."
  Msg3$="Please repeat this function"
  Msg4$="with a smaller value (sizes"
  Msg5$="shown now are not accurate). "
  @Msg_box1
  Fil_num%=0      !default value
  Erase Finame$()
  Erase Fext$()
  Erase Fsize$()
  Erase Fdate$()
  Erase Ftime$()
  Erase Fpath$()
  Erase Fvolume$()
  Erase Favolume$()
  Resume
Return
'
Procedure Err2
  Msg1$="An error occured during the"
  Msg2$="redimensioning of the arrays."
  Msg3$="Please repeat this function"
  Msg4$="with a smaller value (sizes"
  Msg5$="shown now are not accurate). "
  @Msg_box1
  Fol_num%=0      !default value
  Erase Folder$()
  Resume
Return
'
' request information from user
'
Procedure In_box     ! Draw generic input box
  Graphmode 1
  Color 1
  Defline 1,3
  Deffill 0,1
  Deftext 1,0,0,Tx1%
  Sget M_scr$
  Pbox 170,Rez%*52,470,Rez%*148
  Box 170,Rez%*52,470,Rez%*148
  Text (300-8*Len(Msg1$))/2+170,Rez%*74,Msg1$
  Text (300-8*Len(Msg2$))/2+170,Rez%*86,Msg2$
  Text (300-8*Len(Msg3$))/2+170,Rez%*98,Msg3$
  Text (300-8*Len(Msg4$))/2+170,Rez%*110,Msg4$
  Text (300-8*Len(Msg5$))/2+170,Rez%*122,Msg5$
  Print At(36,17);
  Form Input In%,In$
  Msg1$=" "
  Msg2$=" "
  Msg3$=" "
  Msg4$=" "
  Msg5$=" "
  Sput M_scr$
  Sput M_scr$
Return
'
' message display
'
Procedure Msg_box1     ! Generic message box - user termination required
  Color 1
  Graphmode 1
  Defline 1,3
  Deffill 0,1
  Deftext 1,0,0,Tx1%
  Sget M_scr$
  Pbox 170,Rez%*52,470,Rez%*148
  Box 170,Rez%*52,470,Rez%*148
  Text (300-8*Len(Msg1$))/2+170,Rez%*74,Msg1$
  Text (300-8*Len(Msg2$))/2+170,Rez%*86,Msg2$
  Text (300-8*Len(Msg3$))/2+170,Rez%*98,Msg3$
  Text (300-8*Len(Msg4$))/2+170,Rez%*110,Msg4$
  Text (300-8*Len(Msg5$))/2+170,Rez%*122,Msg5$
  Text 192,Rez%*134,"<< Press [Return] to continue >>"
  Repeat
  Until Inkey$=Chr$(13)
  Msg1$=" "
  Msg2$=" "
  Msg3$=" "
  Msg4$=" "
  Msg5$=" "
  Sput M_scr$
Return
'
Procedure Msg_box2 ! Display message until calling routine terminates
  Color 1          ! with sput m_scr$.
  Graphmode 1
  Defline 1,3
  Deffill 0,1
  Deftext 1,0,0,Tx1%
  Sget M_scr$
  Pbox 170,Rez%*52,470,Rez%*148
  Box 170,Rez%*52,470,Rez%*148
  Text (300-8*Len(Msg1$))/2+170,Rez%*74,Msg1$
  Text (300-8*Len(Msg2$))/2+170,Rez%*86,Msg2$
  Text (300-8*Len(Msg3$))/2+170,Rez%*98,Msg3$
  Text (300-8*Len(Msg4$))/2+170,Rez%*110,Msg4$
  Text (300-8*Len(Msg5$))/2+170,Rez%*122,Msg5$
  Text (300-8*Len(Msg6$))/2+170,Rez%*134,Msg6$
  Msg1$=" "
  Msg2$=" "
  Msg3$=" "
  Msg4$=" "
  Msg5$=" "
  Msg6$=" "
Return
'
' get disk drive map
'
Procedure Dsk_map
  Map%=Bios(10)
  Map$=Right$(Space$(16)+Bin$(Map%),16)
  D0=Gemdos(&H19)     ! get current disk drive #
  Curr_drive%=D0
Return
'
' draw extension exclusion box
'
Procedure Ext_box
  Defline 1,3
  If Rez%<>2
    Color 2
  Endif
  Box 472,Rez%,639,Rez%*199
  Defline 1,1
  Line 514,Rez%,514,Rez%*199
  Line 555,Rez%,555,Rez%*199
  Line 596,Rez%,596,Rez%*199
  For I%=1 To 21
    Line 472,Rez%*(I%*9+1),639,Rez%*(I%*9+1)
  Next I%
  Deftext 1,0,0,Tx1%
  For I%=1 To 4
    For J%=1 To 22
      Text ((I%-1)*40)+473+I%,Rez%*((J%*8)+J%-1),"     "
      If S_ext!(I%,J%)=False
        Graphmode 4
      Else
        Graphmode 1
      Endif
      Text ((I%-1)*40)+473+I%,Rez%*((J%*8)+J%-1)," "+S_ext$(I%,J%)+" "
      Graphmode 1
    Next J%
  Next I%
Return
'
' Exclude this program?
'
Procedure Ext_chk
  Ext_f!=True
  For I%=1 To 4
    For J%=1 To 22
      If File_ext$=S_ext$(I%,J%) And S_ext!(I%,J%)=False
        Ext_f!=False
      Endif
    Next J%
  Next I%
Return
'
' draw command boxes
'
Procedure Com_box
  Sget M_scr$
  If Rez%<>2
    Color 2
  Endif
  Defline 1,3
  Box 3,Rez%*3,304,Rez%*70
  Line 3,Rez%*4,304,Rez%*4
  Line 3,Rez%*13,304,Rez%*13
  Line 3,Rez%*14,304,Rez%*14
  If Rez%=1
    Deftext 2,0,0,Tx1%
  Else
    Deftext 0,0,0,Tx1%
  Endif
  If Rez%<>2
    Deffill 3,1
  Else
    Deffill 1,1
  Endif
  Fill 6,Rez%*6
  Graphmode 2
  Temp$=Chr$(14)+Chr$(15)+" "
  Text 32,Rez%*11,Temp$+Temp$+Temp$+"THE DIRECTOR"+" "+Temp$+Temp$+Temp$
  Line 3,Rez%*32,304,Rez%*32
  Line 3,Rez%*33,304,Rez%*33
  Line 3,Rez%*42,304,Rez%*42
  Line 3,Rez%*51,304,Rez%*51
  Line 3,Rez%*52,304,Rez%*52
  Line 3,Rez%*61,304,Rez%*61
  Line 152,Rez%*52,152,Rez%*70
  If Rez%=1
    Deftext 3,0,0,Tx1%
  Else
    Deftext 0,0,0,Tx1%
  Endif
  Deffill 1,1
  Fill 44,Rez%*21
  Text 44,Rez%*21,"     by Robert H. Pyle     "
  Text 37,Rez%*30,"(C) 1988 Antic Publishing Inc."
  Graphmode 1
  Deftext 1,0,0,Tx1%
  Temp$="Number Of Files In Array: "+Str$(Fcnt%)
  Text (300-Len(Temp$)*8)/2+3,Rez%*40,Temp$
  Temp$="Current Free Memory: "+Str$(Fre(0))+" bytes"
  Text (300-Len(Temp$)*8)/2+3,Rez%*49,Temp$
  Text 26,Rez%*59,"File Maximum"
  Text 170,Rez%*59,"Folder Maximum"
  Text (150-(8*Len(Str$(Fil_num%))))/2,Rez%*68,Str$(Fil_num%)
  Text (150-(8*Len(Str$(Fol_num%))))/2+150,Rez%*68,Str$(Fol_num%)
  If Rez%<>2
    Deffill 2
  Endif
  Pbox 1,Rez%*75,306,Rez%*92
  Graphmode 2
  If Rez%=1
    Deftext 0,1,0,Tx2%
  Else
    Deftext 0,1,0,Tx1%
  Endif
  Text 70,Rez%*89,160,"CONTROL SETTINGS"
  Graphmode 1
  Box 3,Rez%*92,304,Rez%*110
  Line 3,Rez%*101,304,Rez%*101
  Defline 1,4
  Line 152,Rez%*92,152,Rez%*110
  Deftext 1,0,0,Tx1%
  Text 25,Rez%*99,"Load Settings"
  Text 177,Rez%*99,"Save Settings"
  Text 13,Rez%*108,"Set File Maximum"
  Text 156,Rez%*108,"Set Folder Maximum"
  Pbox 1,Rez%*115,303,Rez%*123
  Deftext 0,1,0,Tx1%
  Graphmode 2
  Text 80,Rez%*122,140,"OUTPUT OPTIONS"
  Graphmode 1
  Defline 1,3
  Box 3,Rez%*123,301,Rez%*195
  For I%=132 To 186 Step 9
    Line 3,Rez%*I%,301,Rez%*I%
  Next I%
  Defline 1,4
  Line 152,Rez%*123,152,Rez%*195
  Deftext 1,0,0,Tx1%
  Text 24,Rez%*130,"*OUTPUT MODE*"
  Text 190,Rez%*130,"*EXCLUDE*"
  @Show_out
  @Show_exclude
  ' extension master box
  Box 322,Rez%*104,460,Rez%*130
  Line 322,Rez%*121,460,Rez%*121
  Line 322,Rez%*112,460,Rez%*112
  If Rez%<>2
    Deffill 2,1
  Endif
  Fill 325,Rez%*107
  Deftext 0,0,0,Tx1%
  Graphmode 2
  Text 350,Rez%*111,"EXTENSIONS"
  Graphmode 1
  Deftext 1,0,0,Tx1%
  Text 346,Rez%*119,"Include All"
  Text 346,Rez%*128,"Exclude All"
  ' start box
  If Rez%<>2
    Deffill 3,1
  Endif
  Pbox 322,Rez%*74,460,Rez%*94
  Box 322,Rez%*74,460,Rez%*94
  Graphmode 3
  Text 335,Rez%*88,"READ DIRECTORY"
  Graphmode 1
  ' help box
  If Rez%<>2
    Deffill 3,1
  Endif
  Pbox 322,Rez%*14,460,Rez%*34
  Box 322,Rez%*14,460,Rez%*34
  Graphmode 3
  Text 375,Rez%*28,"HELP"
  Graphmode 1
  ' begin output box
  If Rez%<>2
    Deffill 2,1
  Endif
  Pbox 322,Rez%*44,460,Rez%*64
  Color 1
  Box 322,Rez%*44,460,Rez%*64
  If Rez%<>2
    Color 2
  Endif
  Graphmode 2
  Deftext 0,0,0,Tx1%
  Text 343,Rez%*58,"BEGIN OUTPUT"
  Deftext 1,0,0,Tx1%
  Graphmode 1
  ' exit box
  Color 1
  Box 322,Rez%*190,460,Rez%*199
  If Rez%<>2
    Deffill 3,1
  Endif
  Fill 326,Rez%*194
  Graphmode 2
  If Rez%=2
    Deftext 0,0,0,Tx1%
  Endif
  Text 332,Rez%*197,"Exit To Desktop"
  Graphmode 1
  ' disk selector
  If Rez%<>2
    Color 2
  Endif
  Defline 1,3
  Box 322,Rez%*141,460,Rez%*159
  Defline 1,1
  Line 391,Rez%*141,391,Rez%*159
  Deftext 1,0,0,Tx1%
  Text 329,Rez%*149,"CURRENT"
  Text 337,Rez%*157,"DRIVE"
  Defline 1,3
  Box 322,Rez%*159,460,Rez%*177
  Defline 1,1
  Line 323,Rez%*168,459,Rez%*168
  Deftext 1,0,0,Tx2%
  Text 421,Rez%*155,Chr$(Curr_drive%+65)
  For I%=340 To 442 Step 17
    Line I%,Rez%*159,I%,Rez%*177
  Next I%
  For J%=0 To 1
    For I%=0 To 7
      If Mid$(Map$,17-(J%*8+I%+1),1)="1"
        Deftext 1,0,0,Tx1%
      Else
        Deftext 1,2,0,Tx1%
      Endif
      Text (I%)*17+328,Rez%*(J%*9+166),Chr$(I%+J%*8+65)
    Next I%
  Next J%
Return
'
' draw exclude labels
'
Procedure Show_exclude
  Deftext 1,0,0,Tx1%
  For I%=1 To 7
    @T_exclude
  Next I%
  Graphmode 1
Return
'
' print exclude text
'
Procedure T_exclude
  If In_clude!(I%)=True
    Graphmode 1
    Text 155,Rez%*((I%-1)*9+139),Space$(18)
  Else
    Graphmode 1
    Text 155,Rez%*((I%-1)*9+139),Space$(18)
    Graphmode 4
  Endif
  Text 155,Rez%*((I%-1)*9+139),In_clude$(I%)
  Graphmode 1
Return
'
' draw output labels
'
Procedure Show_out
  Deftext 1,0,0,Tx1%
  For I%=1 To 7
    If Op_mode!(I%)=True
      Graphmode 1
      Text 6,Rez%*((I%-1)*9+139),Space$(18)
      Graphmode 4
    Else
      Graphmode 1
      Text 6,Rez%*((I%-1)*9+139),Space$(18)
    Endif
    Text 6,Rez%*((I%-1)*9+139),Op_mode$(I%)
  Next I%
  Graphmode 1
Return
'
' read first directory entry, set flag indicating first entry has been read
'
Procedure Dir_read_first
  First_dir%=False
  Mid$(Buf$,30,13)=Space$(13)
  D0=Gemdos(&H4E,L:File_path_ptr%,W:File_attr%)
  If D0=-33
    If File_attr%<>8
      Msg2$="File Not Found"
      Msg3$="No files or folders"
      Msg4$="are on this disk."
      @Msg_box1
    Endif
  Endif
Return
'
' read next directory entry
'
Procedure Dir_read_next
  Mid$(Buf$,30,13)=Space$(13)
  D0=Gemdos(&H4F)
  If Do=-33
    Msg2$="File Not Found"
    Msg3$="No files or folders"
    Msg4$="are on this disk."
    @Msg_box1
  Endif
Return
'
' process data in dta buffer (Buf$)
'
Procedure File_process
  If Fcnt%+1>Fil_num%
    Alert 1,"Not enough room in the Files|Array for this directory.|Save data and then re-read|this directory.",1,"Continue",But%
    Fcnt%=Prev_fcnt%
    Full_flag!=True
  Else
    Temp_attr%=Peek(Dta%+21)
    Temp_name$=Mid$(Buf$,31,12)
    If Left$(Temp_name$,1)<>"."
      Scnt%=13
      Repeat
        Dec Scnt%
      Until Mid$(Temp_name$,Scnt%,1)<>" "
      Temp_name$=Left$(Temp_name$,Scnt%)
      If Right$(Temp_name$,1)=Chr$(0)
        Temp_name$=Left$(Temp_name$,Len(Temp_name$)-1)
      Endif
      If Temp_attr%=16
        If C_folder%=0
          Folder$(N_folder%)="\"+Dir$(0)+Temp_name$+"\"
        Else
          Folder$(N_folder%)=Dir$(0)+"\"+Temp_name$+"\"
        Endif
        Inc N_folder%
        @Convert
        Inc Fcnt%
        Finame$(Fcnt%)=File_name$
        Fext$(Fcnt%)=File_ext$
        Fsize$(Fcnt%)=" FOLDER"
        Fdate$(Fcnt%)=File_date$
        Ftime$(Fcnt%)=File_time$
        Fpath$(Fcnt%)=Folder$(C_folder%)
        Fvolume$(Fcnt%)=Volume$
        Favolume$(Fcnt%)=Avolume$
      Else
        @Convert
        @Ext_chk
        If Ext_f!=True
          Inc Fcnt%
          Finame$(Fcnt%)=File_name$
          Fext$(Fcnt%)=File_ext$
          Fsize$(Fcnt%)=File_size$
          Fdate$(Fcnt%)=File_date$
          Ftime$(Fcnt%)=File_time$
          Fpath$(Fcnt%)=Folder$(C_folder%)
          Fvolume$(Fcnt%)=Volume$
          Favolume$(Fcnt%)=Avolume$
        Endif
      Endif
    Endif
  Endif
Return
'
' convert and format filesize, time, date, filename and extension
'
Procedure Convert
  '
  ' convert name and extension
  Ext%=Instr(Temp_name$,".")
  If Ext%>0
    File_ext$="   "
    Lset File_ext$=Mid$(Temp_name$,Ext%+1)
    File_name$=Left$(Left$(Temp_name$,Ext%-1)+"        ",8)
  Else
    File_ext$="   "
    File_name$=Left$(Temp_name$+"        ",8)
  Endif
  '
  File_size%=Lpeek(Dta%+26)
  Date%=Dpeek(Dta%+24)
  Time%=Dpeek(Dta%+22)
  '
  '   Now we extract time and date info and put'em into an array.
  Day%=Date% And (&H1F)   !DAY are bits 0-4   (1-31)
  Tempdate%=Date%
  Div Tempdate%,32
  Month%=Tempdate% And (&HF) !Months are bits 5-8  (1-12)
  Tempdate%=Date%
  Div Tempdate%,512
  Year%=(Tempdate% And (&H7F))+1980  !YEAR is bits 9-15 (add 1980)
  Seconds%=Time% And (&H1F)  !SECONDS are bits 0-4 (0-29)
  Mul Seconds%,2                     !multiply by two for correct val
  Temptime%=Time%
  Div Temptime%,32
  Minutes%=Temptime% And (&H3F)      !MINUTES are bits 5-10 (0-59)
  Div Temptime%,64
  Hours%=Temptime% And (&H1F)        !HOURS are bits 11-15 (0-23)
  File_time$=Right$("00"+Str$(Hours%),2)+":"+Right$("00"+Str$(Minutes%),2)+":"+Right$("00"+Str$(Seconds%),2)
  File_date$=Right$("00"+Str$(Month%),2)+"/"+Right$("00"+Str$(Day%),2)+"/"+Right$(Str$(Year%),2)
  File_size$=Right$("       "+Str$(File_size%),7)
Return
'
' read volume name
'
Procedure Volume
  File_attr%=8
  @Dir_read_first
  If D0<>-33 ! (-33 = file not found)
    Volume$=Mid$(Buf$,31,12)
    Scnt%=13
    Repeat     ! parse vol name, strip excess spaces
      Dec Scnt%
    Until Mid$(Volume$,Scnt%,1)<>" " Or Scnt%=0
    If Scnt%=0
      Volume$=""
    Else
      Volume$=Left$(Volume$,Scnt%)
    Endif
    @Vol_name
  Else
    Volume$=""
    @Vol_name
  Endif
  First_dir%=True
Return
'
' rename volume?
'
Procedure Vol_name
  If Volume$<>""
    If Right$(Volume$,1)=Chr$(0)
      Volume$=Left$(Volume$,Len(Volume$)-1)
      For Ii%=1 To Len(Volume$)
        If Mid$(Volume$,Ii%,1)<" "
          Mid$(Volume$,Ii%,1)=Chr$(Asc(Mid$(Volume$,Ii%,1))+32)
        Endif
      Next Ii%
    Endif
  Else
    Volume$="*UNNAMED*"
  Endif
  Temp$=Space$(12)
  Lset Temp$=Volume$
  Volume$=Temp$
Return
'
' *************************** save original pallette
Procedure Savecolors
  For Z%=0 To 15
    Dpoke Contrl,26
    Dpoke Contrl+2,0
    Dpoke Contrl+6,2
    Dpoke Intin,Z%
    Dpoke Intin+2,0
    Vdisys
    Spalette%(Z%,0)=Dpeek(Intout+2)
    Spalette%(Z%,1)=Dpeek(Intout+4)
    Spalette%(Z%,2)=Dpeek(Intout+6)
  Next Z%
Return
'
' *************************** restore original pallette
Procedure Replacecolors
  For Z%=0 To 15
    Dpoke Contrl,14
    Dpoke Contrl+2,0
    Dpoke Contrl+6,4
    Dpoke Intin,Z%
    Dpoke Intin+2,Spalette%(Z%,0)
    Dpoke Intin+4,Spalette%(Z%,1)
    Dpoke Intin+6,Spalette%(Z%,2)
    Vdisys
  Next Z%
Return
'
Ext_dat:
Data "ACC","ARC","AUT","BAK","BAS","BIC","BIN","C  ","CFG"
Data "CMD","CNF","DO ","DAS","DAT","DBF","DBM","DEL","DIC","DIF","DIR","DOC","FNT"
Data "GR8","GR9","HLP","IDX","IFF","IMG","IND","INF","INT","KOA","KYS","LBL"
Data "LST","LOG","MAC","MAS","MSG","NAT","NDX","NEO","NTB","O  ","PAS","PER"
Data "PC1","PC2","PC3","PIC","PI1","PI2","PI3","PRE","PRG"
Data "PRN","PRT","RLE","RSC","S  ","SCR","SDF","SDR","SHP"
Data "SID","SNG","SPD","STR","STW","SYS","TNY","TN1","TN2","TN3","TOS","TPN"
Data "TRN","TTP","TXT","WKS","ZBK","ZRX","1CZ"," ? "," ? "
Data " ? "," ? "," ? "
'
' locate the mouse and read the button
'
Procedure Get_mouse
  Row%=0
  Col%=0
  Repeat
    Mouse M_x%,M_y%,B%
    If Inp?(2)
      If Inp(2)=226
        @Help
      Endif
    Endif
    If B%<>0
      If M_x%>472 And M_x%<639
        @Find_ext
      Else
        If M_x%>323 And M_x%<460
          @Find_mid
        Else
          If M_x%>2 And M_x%<152
            @Find_first
          Else
            If M_x%>152 And M_x%<305
              @Find_second
            Else
              B%=0
            Endif
          Endif
        Endif
      Endif
    Endif
  Until B%<>0
Return
'
' locate in column 2
'
Procedure Find_second
  I%=0
  If M_y%>Rez%*132
    If M_y%<Rez%*141
      In_clude!(1)=Abs(In_clude!(1))-1
      I%=1
      B%=0
    Else
      If M_y%<Rez%*150
        In_clude!(2)=Abs(In_clude!(2))-1
        I%=2
        B%=0
      Else
        If M_y%<Rez%*159
          In_clude!(3)=Abs(In_clude!(3))-1
          I%=3
          B%=0
        Else
          If M_y%<Rez%*168
            In_clude!(4)=Abs(In_clude!(4))-1
            I%=4
            B%=0
          Else
            If M_y%<Rez%*177
              In_clude!(5)=Abs(In_clude!(5))-1
              I%=5
              B%=0
            Else
              If M_y%<Rez%*186
                In_clude!(6)=Abs(In_clude!(6))-1
                I%=6
                B%=0
              Else
                If M_y%<Rez%*195
                  In_clude!(7)=Abs(In_clude!(7))-1
                  I%=7
                  B%=0
                Else
                  B%=0
                Endif
              Endif
            Endif
          Endif
        Endif
      Endif
    Endif
    Deftext 1,0,0,Tx1%
    If I%<>0
      @T_exclude
      Pause 8
    Endif
  Else
    If M_y%>Rez%*92
      If M_y%<Rez%*101
        @Save_it
        B%=0
      Else
        If M_y%<Rez%*110
          @Set_folders
          B%=0
        Else
          B%=0
        Endif
      Endif
    Else
      B%=0
    Endif
  Endif
Return
'
' locate first column item
'
Procedure Find_first
  If M_y%>Rez%*132
    If M_y%<Rez%*141
      If Op_flag%<>1
        Op_mode!(Op_flag%)=False
        Op_mode!(1)=True
        Op_flag%=1
      Endif
      B%=0
    Else
      If M_y%<Rez%*150
        If Op_flag%<>2
          Op_mode!(Op_flag%)=False
          Op_mode!(2)=True
          Op_flag%=2
        Endif
        B%=0
      Else
        If M_y%<Rez%*159
          If Op_flag%<>3
            Op_mode!(Op_flag%)=False
            Op_mode!(3)=True
            Op_flag%=3
          Endif
          B%=0
        Else
          If M_y%<Rez%*168
            If Op_flag%<>4
              Op_mode!(Op_flag%)=False
              Op_mode!(4)=True
              Op_flag%=4
            Endif
            B%=0
          Else
            If M_y%<Rez%*177
              If Op_flag%<>5
                Op_mode!(Op_flag%)=False
                Op_mode!(5)=True
                Op_flag%=5
              Endif
              B%=0
            Else
              If M_y%<Rez%*186
                If Op_flag%<>6
                  Op_mode!(Op_flag%)=False
                  Op_mode!(6)=True
                  Op_flag%=6
                Endif
                B%=0
              Else
                If M_y%<Rez%*195
                  If Op_flag%<>7
                    Op_mode!(Op_flag%)=False
                    Op_mode!(7)=True
                    Op_flag%=7
                  Endif
                  B%=0
                Else
                  B%=0
                Endif
              Endif
            Endif
          Endif
        Endif
      Endif
    Endif
    @Show_out
  Else
    If M_y%>Rez%*92
      If M_y%<Rez%*101
        @Load_it
        B%=0
      Else
        If M_y%<Rez%*110
          @Set_files
          B%=0
        Else
          B%=0
        Endif
      Endif
    Else
      B%=0
    Endif
  Endif
Return
'
' locate extension
'
Procedure Find_ext
  If M_y%>Rez%
    Col%=(M_x%-473)/41+1
    Row%=(M_y%-2)/(Rez%*9)+1
    Deftext 1,0,0,Tx1%
    Pause 6
    B%=Mousek
    If B%<>3
      Text ((Col%-1)*40)+473+Col%,Rez%*((Row%*8)+Row%-1),"     "
      If S_ext!(Col%,Row%)=True
        S_ext!(Col%,Row%)=False
        Graphmode 4
      Else
        S_ext!(Col%,Row%)=True
        Graphmode 1
      Endif
      Text ((Col%-1)*40)+473+Col%,Rez%*((Row%*8)+Row%-1)," "+S_ext$(Col%,Row%)+" "
      Graphmode 1
    Else
      Graphmode 1
      Deftext 1,2,0,Tx1%
      Text ((Col%-1)*40)+473+Col%,Rez%*((Row%*8)+Row%-1),"     "
      Text ((Col%-1)*40)+473+Col%,Rez%*((Row%*8)+Row%-1)," "+S_ext$(Col%,Row%)+" "
      Msg1$="Please enter the new extension"
      Msg2$="name ( 3 characters maximum )"
      Msg3$="below. Remember to 'Save Settings'"
      Msg4$="if you want to retain it."
      In%=3
      @In_box
      If In$=""
        In$=" ? "
      Endif
      S_ext$(Col%,Row%)="   "
      Lset S_ext$(Col%,Row%)=Upper$(In$)
      Text ((Col%-1)*40)+473+Col%,Rez%*((Row%*8)+Row%-1),"     "
      S_ext!(Col%,Row%)=True
      Text ((Col%-1)*40)+473+Col%,Rez%*((Row%*8)+Row%-1)," "+S_ext$(Col%,Row%)+" "
    Endif
  Endif
  B%=0
Return
'
' select all extensions
'
Procedure All_ext
  For I%=1 To 4
    For J%=1 To 22
      S_ext!(I%,J%)=True
    Next J%
  Next I%
  @Ext_box
  B%=0
Return
'
' output array information
'
Procedure Dump_it
  On Op_flag% Gosub Ascii,Delimit,Dif,Hardcopy,Screen,Sdf,Zoom
  If Op_flag%<>1 And Op_flag%<>4 And Op_flag%<>5
    Sget M_scr$
    @Tellall
    Sput M_scr$
  Endif
  B%=0
Return
'
' deselect all extensions
'
Procedure No_ext
  For I%=1 To 4
    For J%=1 To 22
      S_ext!(I%,J%)=False
    Next J%
  Next I%
  @Ext_box
  B%=0
Return
'
' start program, drive change or quit?
'
Procedure Find_mid
  If M_y%>Rez%*14 And M_y%<Rez%*34
    @Help
  Else
    If M_y%>Rez%*44 And M_y%<Rez%*64
      @Dump_it
    Else
      If M_y%>Rez%*74 And M_y%<Rez%*94
        @Dir_read
      Else
        If M_y%>=Rez%*190 And My%<=Rez%*199
          @Stop_it
        Else
          If M_y%>Rez%*158 And M_y%<Rez%*178
            @Change_drive
          Else
            If M_y%>Rez%*112 And M_y%<Rez%*121
              @All_ext
            Else
              If M_y%>Rez%*121 And M_y%<Rez%*130
                @No_ext
              Else
                B%=0
              Endif
            Endif
          Endif
        Endif
      Endif
    Endif
  Endif
Return
'
' select a different drive
'
Procedure Change_drive
  N_drv%=(M_x%-324)/17+1     ! read & decode mouse position
  If M_y%>Rez%*168
    N_drv%=N_drv%+8
  Endif
  If Curr_drive%<>N_drv%-1
    If Mid$(Map$,17-N_drv%,1)="1"
      Chdrive N_drv%
      Curr_drive%=N_drv%-1
      Graphmode 1
      Deftext 1,0,0,Tx2%
      Text 421,Rez%*155,Chr$(Curr_drive%+65)
      Print At(1,1);Chr$(7);
    Endif
  Endif
  Pause 5
  B%=0
Return
'
' terminate program
'
Procedure Stop_it
  Alert 1,"  ARE YOU SURE?|(All settings and| directory data| will be lost!)",2,"I'm Sure|Go Back!",But%
  If But%=1
    Chdir "\"
    @Replacecolors
    End
  Else
    B%=0
  Endif
Return
'
' OUTPUT MODE column data
Op_1:
Data "      ASCII       "
Data "    Delimited     "
Data "       DIF        "
Data "    Hardcopy      "
Data "     Screen       "
Data "       SDF        "
Data " Zoomrks/CardSTak "
'
' *EXCLUDE* column data
'
Op_2:
Data "    Disk Name     "
Data "  Alt. Disk Name  "
Data "    File Size     "
Data "    File Date     "
Data "    File Time     "
Data "    File Path     "
Data "     Folders      "
'
' update status display
'
Procedure Stat
  Graphmode 1
  Deftext 1,0,0,Tx1%
  Tfre%=Fre(0)
  Temp$="Number Of Files In Array: "+Str$(Fcnt%)
  Text 6,Rez%*40,Space$(37)
  Text (300-Len(Temp$)*8)/2+3,Rez%*40,Temp$
  Temp$="Current Free Memory: "+Str$(Tfre%)+" bytes"
  Text 6,Rez%*49,Space$(37)
  Text (300-Len(Temp$)*8)/2+3,Rez%*49,Temp$
  Text 6,Rez%*68,Space$(18)
  Text (150-(8*Len(Str$(Fil_num%))))/2,Rez%*68,Str$(Fil_num%)
  Text 154,Rez%*68,Space$(18)
  Text (150-(8*Len(Str$(Fol_num%))))/2+150,Rez%*68,Str$(Fol_num%)
  If Tfre%<15000
    If Mfull%=0
      Alert 1,"Free Memory is getting low!|You should save the data|before reading any more|directories.",1,"Continue",But%
    Endif
  Endif
Return
'
' save all user defined variables
'
Procedure Save_it
  Fileselect "\*.CFG","SETTINGS.CFG",Z$
  If Z$<>""
    Defmouse 2
    Open "O",#1,Z$
    Write #1,Fil_num%,Fol_num%,Op_flag%
    For I%=1 To 7
      Write #1,Op_mode!(I%),In_clude!(I%)
    Next I%
    For I%=1 To 4
      For J%=1 To 22
        Write #1,S_ext$(I%,J%),S_ext!(I%,J%)
      Next J%
    Next I%
    Close #1
    Defmouse 0
  Endif
Return
'
' read user settings
'
Procedure Load_it
  Fileselect "\*.CFG","SETTINGS.CFG",Z$
  If Z$<>""
    If Exist(Z$)
      @Load_it_up
    Endif
  Endif
Return
'
' read the data
'
Procedure Load_it_up
  Defmouse 2
  Open "I",#1,Z$
  Input #1,Fil_num2%,Fol_num%,Op_flag%
  For I%=1 To 7
    Input #1,Op_mode!(I%),In_clude!(I%)
  Next I%
  For I%=1 To 4
    For J%=1 To 22
      Input #1,S_ext$(I%,J%),S_ext!(I%,J%)
    Next J%
  Next I%
  Close #1
  If Fil_num2%<>Fil_num%
    If Autoflag!=False
      Alert 1,"The File Maximum is about to|be changed - any data in|memory will be lost! Do you|want to change it anyway?",2,"Change|NO!!",But%
      If But%=1
        Fil_num%=Fil_num2%
        @Arr_dim1
      Else
        Msg3$="File Maximum Not Changed"
        @Msg_box2
        Pause 75
        Sput M_scr$
      Endif
    Else
      Fil_num%=Fil_num2%
      @Arr_dim1
    Endif
  Endif
  @Arr_dim2
  @Ext_box
  @Stat
  @Show_out
  @Show_exclude
  Defmouse 0
Return
'
' help screen
'
Procedure Help
  Sget M_scr$
  Hidem
  Cls
  Print "LOAD/SAVE SETTINGS - Saves/Restores the current environment, including"
  Print "output options, file & folder maximums and excluded extensions. If the file"
  Print "'SETTINGS.CFG' is present at startup, it will be loaded automatically."
  Print
  Print "SET FILE/FOLDER MAXIMUM - file maximum is the number of files that can be"
  Print "stored before output. Folder maximum is the maximum number of folders in any"
  Print "single directory to be read. Changing the file maximum will result in the loss"
  Print "of any files currently in memory."
  Print
  Print "OUTPUT MODE - Specifies the type of output that will occur when 'Begin Output'"
  Print "is selected."
  Print
  Print "EXCLUDE - omits the highlighted items from output. If 'Folders' is not high-"
  Print "lighted, all folders (including empty ones) will appear as separate entries."
  Print
  Print "DISK/ALT. DISK NAME - the disk name is the name read from the disk directory."
  Print "The ALTERNATE DISK NAME is an identifying label that you will be given an "
  Print "an opportunity to enter when you 'Begin Output'. This can be a name or perhaps"
  Print "a serial number that you use to keep track of your disks. Either or both may"
  Print "may be included in the output file."
  Print
  Print "CURRENT DRIVE - this is the drive that will be read from when 'Read Directory'"
  Print "is selected. It may be changed by clicking on the desired letter."
  Print
  Print "                    << press [Return] for the next page >>";
  Repeat
  Until Inkey$=Chr$(13)
  Cls
  Print "EXTENSIONS - often it is convenient to omit certain types of files from the"
  Print "listing. By selecting any or all of the listed extensions shown at the right,"
  Print "any file having one of these extensions will be ignored during the directory"
  Print "reading, and thus not included in the output. These should be selected BEFORE"
  Print "the directory is read - they have no effect on files already stored. It is"
  Print "possible to read a directory, stop reading, change the extensions to be"
  Print "skipped and then read another directory, appending the new files to the ones"
  Print "already in memory."
  Print
  Print "SELECT/EXCLUDE ALL - these allow you to highlight all the extensions at once"
  Print "(thus excluding them), or to do the opposite and allow any and all extensions."
  Print "Individual extensions may then be selected or deselected by clicking on each"
  Print "one of them individually. Clicking both buttons at once on a box allows"
  Print "the entry of a new, user-defined 3 letter extension in the referenced box."
  Print "The new extension will be retained if 'Save Settings' is chosen."
  Print
  Print "      (See the article for more details of the program operation.)"
  Print
  Print "                         << press [Return] to continue >>";
  Repeat
  Until Inkey$=Chr$(13)
  @Tellall
  Sput M_scr$
  Showm
  B%=0
Return
'
' printout listing
'
Procedure Hardcopy
  Volume$=""
  I%=1
  While I%<=Fcnt%
    If Volume$<>Fvolume$(I%) Or Avolume$<>Favolume$(I%)
      Volume$=Fvolume$(I%)
      Avolume$=Favolume$(I%)
      Lprint
      Lprint Fvolume$(I%),Favolume$(I%)
      Lprint
    Endif
    If (Fsize$(I%)<>" FOLDER") Or (In_clude!(7)=True)
      If Fsize$(I%)=" FOLDER"
        Lprint "*";Finame$(I%);".";Fext$(I%);"   ";
      Else
        Lprint Finame$(I%);".";Fext$(I%);"    ";
      Endif
      If In_clude!(1)=True
        Lprint Fvolume$(I%);"    ";
      Endif
      If In_clude!(2)=True
        Lprint Favolume$(I%);"    ";
      Endif
      If In_clude!(3)=True
        Lprint Fsize$(I%);"    ";
      Endif
      If In_clude!(4)=True
        Lprint Fdate$(I%);"    ";
      Endif
      If In_clude!(5)=True
        Lprint Ftime$(I%);
      Endif
      If In_clude!(6)=True
        Lprint
        Lprint "         Path: ";Fpath$(I%)
      Else
        Lprint
      Endif
    Endif
    Inc I%
  Wend
Return
'
Procedure Ascii
  Chdir "\"
  Alert 0,"Insert the disk to which|you want the ASCII file|written, then select a|   name for the file.",1,"Continue",But%
  Fileselect "\*.ASC","CATALOG.ASC",Z$
  If Z$<>""
    If Exist(Z$)
      Alert 3,Z$+" Already Exists!",1,"Replace|Cancel",Button%
    Else
      Button%=1
    Endif
    If Button%<>2
      Msg2$=Z$
      Msg3$="is being output."
      @Msg_box2
      Open "O",#1,Z$
      Defmouse 2
      Volume$=""
      I%=1
      While I%<=Fcnt%
        If Volume$<>Fvolume$(I%) Or Avolume$<>Favolume$(I%)
          Volume$=Fvolume$(I%)
          Avolume$=Favolume$(I%)
          Print #1
          Print #1,Fvolume$(I%),Favolume$(I%)
          Print #1
        Endif
        If (Fsize$(I%)<>" FOLDER") Or (In_clude!(7)=True)
          If Fsize$(I%)=" FOLDER"
            Print #1,"*";Finame$(I%);".";Fext$(I%);"   ";
          Else
            Print #1,Finame$(I%);".";Fext$(I%);"    ";
          Endif
          If In_clude!(1)=True
            Print #1,Fvolume$(I%);"    ";
          Endif
          If In_clude!(2)=True
            Print #1,Favolume$(I%);"    ";
          Endif
          If In_clude!(3)=True
            Print #1,Fsize$(I%);"    ";
          Endif
          If In_clude!(4)=True
            Print #1,Fdate$(I%);"    ";
          Endif
          If In_clude!(5)=True
            Print #1,Ftime$(I%);
          Endif
          If In_clude!(6)=True
            Print #1
            Print #1,"         Path: ";Fpath$(I%)
          Else
            Print #1
          Endif
        Endif
        Inc I%
      Wend
      Close #1
      Defmouse 0
    Endif
  Endif
  Sput M_scr$
Return
'
' file output to the screen
'
Procedure Screen
  Sget M_scr$
  Cls
  Hidem
  Volume$=""
  I%=1
  Lc%=0
  B%=1
  Fs%=1
  While B%<>0
    If Volume$<>Fvolume$(I%) Or Avolume$<>Favolume$(I%)
      Volume$=Fvolume$(I%)
      Avolume$=Favolume$(I%)
      Print
      Print Fvolume$(I%),Favolume$(I%)
      Print
      Add Lc%,3
    Endif
    If (Fsize$(I%)<>" FOLDER") Or (In_clude!(7)=True)
      If Fsize$(I%)=" FOLDER"
        Deftext 1,1,0,Tx1%
      Else
        Deftext 1,0,0,Tx1%
      Endif
      Text 0,Rez%*Crslin*8-2,Finame$(I%)+"."+Fext$(I%)+"    "
      Print At(17,Crslin);
      If In_clude!(1)=True
        Print Fvolume$(I%);"    ";
      Endif
      If In_clude!(2)=True
        Print Favolume$(I%);"    ";
      Endif
      If In_clude!(3)=True
        Print Fsize$(I%);"    ";
      Endif
      If In_clude!(4)=True
        Print Fdate$(I%);"    ";
      Endif
      If In_clude!(5)=True
        Print Ftime$(I%);
      Endif
      Add Lc%,1
      If In_clude!(6)=True
        Print
        Add Lc%,1
        Print "         Path: ";Fpath$(I%)
      Else
        Print
      Endif
    Endif
    Inc I%
    Inc Fs%
    If Lc%>21 Or I%>Fcnt%
      If I%>Fcnt%
        Print
        Print "           << Press [F1] to terminate, [F10] for previous page >>";
      Else
        Print
        Print "   << Press [SPACE] bar to continue, [F10] for previous page, [F1] to exit. >>";
      Endif
      Bb%=1
      Repeat
        Repeat
        Until Inkey$=""
        Repeat
        Until Not Inp?(2)
        Z=Inp(2)
        If Z=32
          If I%<=Fcnt%
            Cls
            Fs%=1
            Lc%=0
            Bb%=0
          Endif
        Else
          If Z=187
            B%=0
            Bb%=0
          Else
            If Z=196
              Cls
              Bb%=0
              Lc%=0
              If In_clude!(7)=False
                Temp1%=I%
                Temp2%=0
                Repeat
                  Dec Temp1%
                  If Fsize$(Temp1%)<>" FOLDER"
                    Inc Temp2%
                  Endif
                Until (Temp2%=11+Fs%) Or Temp1%=1
                Sub I%,Temp2%
              Else
                Sub I%,11+Fs%
              Endif
              If I%<1
                I%=1
                If Volume$<>Fvolume$(I%) Or Avolume$<>Favolume$(I%)
                  Volume$=Fvolume$(I%)
                  Avolume$=Favolume$(I%)
                  Print
                  Print Fvolume$(I%),Favolume$(I%)
                  Print
                  Add Lc%,3
                Endif
              Endif
            Endif
          Endif
        Endif
      Until Bb%=0
    Endif
  Wend
  Sput M_scr$
  Showm
Return
'
' create delimited file
'
Procedure Delimit
  Chdir "\"
  Alert 0," Insert the disk to which|you want the Delimited file|written, then select a name|      for the file.",1,"Continue",But%
  Fileselect "\*.DEL","CATALOG.DEL",Z$
  If Z$<>""
    If Exist(Z$)
      Alert 3,Z$+" Already Exists!",1,"Replace|Cancel",Button%
    Else
      Button%=1
    Endif
    If Button%<>2
      Msg2$=Z$
      Msg3$="is being output."
      @Msg_box2
      Open "O",#2,Z$
      Defmouse 2
      For I%=1 To Fcnt%
        If (Fsize$(I%)<>" FOLDER") Or (In_clude!(7)=True)
          Write #2,Finame$(I%),Fext$(I%);
          Print #2,",";
          If In_clude!(1)=True
            Write #2,Fvolume$(I%);
            If In_clude!(2)=True Or In_clude!(3)=True Or In_clude!(4)=True Or In_clude!(5)=True Or In_clude!(6)=True
              Print #2,",";
            Endif
          Endif
          If In_clude!(2)=True
            Write #2,Favolume$(I%);
            If In_clude!(3)=True Or In_clude!(4)=True Or In_clude!(5)=True Or In_clude!(6)=True
              Print #2,",";
            Endif
          Endif
          If In_clude!(3)=True
            Write #2,Fsize$(I%);
            If In_clude!(4)=True Or In_clude!(5)=True Or In_clude!(6)=True
              Print #2,",";
            Endif
          Endif
          If In_clude!(4)=True
            Write #2,Fdate$(I%);
            If In_clude!(5)=True Or In_clude!(6)=True
              Print #2,",";
            Endif
          Endif
          If In_clude!(5)=True
            Write #2,Ftime$(I%);
            If In_clude!(6)=True
              Print #2,",";
            Endif
          Endif
          If In_clude!(6)=True
            Write #2,Fpath$(I%);
          Endif
          Print #2
        Endif
      Next I%
      Close #2
      Defmouse 0
    Endif
  Endif
  Sput M_scr$
Return
'
' write DIF file
'
Procedure Dif
  Chdir "\"
  Alert 0,"Insert the disk to which| you want the DIF file|written, then select a|   name for the file.",1,"Continue",But%
  Fileselect "\*.DIF","CATALOG.DIF",Z$
  If Z$<>""
    If Exist(Z$)
      Alert 3,Z$+" Already Exists!",1,"Replace|Cancel",Button%
    Else
      Button%=1
    Endif
    If Button%<>2
      Msg2$=Z$
      Msg3$="is being output."
      @Msg_box2
      If In_clude!(7)=False
        Alt_fcnt%=0
        For J%=1 To Fcnt%
          If Fsize$(J%)<>" FOLDER"
            Inc Alt_fcnt%
          Endif
        Next J%
      Endif
      Q$=Chr$(34)+Chr$(34)
      Nv%=2                     ! # of fields being output (name+ext =2, always
      For J%=1 To 6             ! output.
        If In_clude!(J%)=True
          Inc Nv%
        Endif
      Next J%
      Open "O",#1,Z$
      Defmouse 2
      I%=1
      Print #1,"TABLE"
      Print #1,"0,1"
      Print #1,Q$
      Print #1,"VECTORS"
      Print #1,"0,";Nv%
      Print #1,Q$
      Print #1,"TUPLES"
      If In_clude!(7)=True
        Print #1,"0,";Fcnt%
      Else
        Print #1,"0,";Alt_fcnt%
      Endif
      Print #1,Q$
      Print #1,"DATA"
      Print #1,"0,0"
      Print #1,Q$
      Qq$="1,0"
      Repeat
        If (Fsize$(I%)<>" FOLDER") Or (In_clude!(7)=True)
          Print #1,"-1,0"
          Print #1,"BOT"
          Print #1,Qq$
          Print #1,Chr$(34);Finame$(I%);Chr$(34)
          Print #1,Qq$
          Print #1,Chr$(34);Fext$(I%);Chr$(34)
          If In_clude!(1)=True
            Print #1,Qq$
            Print #1,Chr$(34);Fvolume$(I%);Chr$(34)
          Endif
          If In_clude!(2)=True
            Print #1,Qq$
            Print #1,Chr$(34);Favolume$(I%);Chr$(34)
          Endif
          If In_clude!(3)=True
            If Right$(Fsize$(I%),6)="FOLDER"
              Print #1,"0,";-1
            Else
              Print #1,"0,";Val(Fsize$(I%))
            Endif
            Print #1,"V"
          Endif
          If In_clude!(4)=True
            Print #1,Qq$
            Print #1,Chr$(34);Fdate$(I%);Chr$(34)
          Endif
          If In_clude!(5)=True
            Print #1,Qq$
            Print #1,Chr$(34);Ftime$(I%);Chr$(34)
          Endif
          If In_clude!(6)=True
            Print #1,Qq$
            Print #1,Chr$(34);Fpath$(I%);Chr$(34)
          Endif
        Endif
        Inc I%
      Until I%>Fcnt%
      Print #1,"-1,0"
      Print #1,"EOD"
      Close #1
      Defmouse 0
    Endif
  Endif
  Sput M_scr$
Return
'
' WRITE STANDARD DATA FORMAT FILE
'
Procedure Sdf
  Chdir "\"
  Alert 0,"Insert the disk to which| you want the SDF file|written, then select a|   name for the file.",1,"Continue",But%
  Fileselect "\*.SDF","CATALOG.SDF",Z$
  If Z$<>""
    If Exist(Z$)
      Alert 3,Z$+" Already Exists!",1,"Replace|Cancel",Button%
    Else
      Button%=1
    Endif
    If Button%<>2
      Open "O",#2,Z$
      Defmouse 2
      Msg2$=Z$
      Msg3$="is being output."
      @Msg_box2
      For I%=1 To Fcnt%
        T_name$=Space$(8)
        Lset T_name$=Finame$(I%)
        Print #2,T_name$;
        T_ext$="   "
        Lset T_ext$=Fext$(I%)
        Print #2,T_ext$;
        If In_clude!(1)=True
          T_vol$=Space$(12)
          Lset T_vol$=Fvolume$(I%)
          Print #2,T_vol$;
        Endif
        If In_clude!(2)=True
          T_avol$=Space$(12)
          Lset T_avol$=Favolume$(I%)
          Print #2,T_avol$;
        Endif
        If In_clude!(3)=True
          T_size$=Space$(7)
          Rset T_size$=Fsize$(I%)
          Print #2,T_size$;
        Endif
        If In_clude!(4)=True
          T_date$=Space$(8)
          Lset T_date$=Fdate$(I%)
          Print #2,T_date$;
        Endif
        If In_clude!(5)=True
          T_time$=Space$(8)
          Lset T_time$=Ftime$(I%)
          Print #2,T_time$;
        Endif
        If In_clude!(6)=True
          T_path$=Space$(64)
          Lset T_path$=Fpath$(I%)
          Print #2,T_path$;
        Endif
        Print #2
      Next I%
      Close #2
      Defmouse 0
    Endif
  Endif
  Sput M_scr$
Return
'
Procedure Zoom
  Alert 2,"    Do you want a|Zoomracks or CardSTak| output file format?",0," Zrack | Cstak ",Bt%
  If Bt%=1
    Chdir "\"
    Alert 0,"Insert the disk to which|you want the Zoomracks"+Chr$(191)+"|file written, then select|  a name for the file.",1,"Continue",But%
    Fileselect "\*.ASC","ZCATALOG.ASC",Z$
    If Z$<>""
      If Exist(Z$)
        Alert 3,Z$+" Already Exists!",1,"Replace|Cancel",Button%
      Else
        Button%=1
      Endif
      If Button%<>2
        Msg2$=Z$
        Msg3$="is being output."
        @Msg_box2
        Open "O",#1,Z$
        Defmouse 2
        I%=1
        Print #1,"^Template"
        Print #1,"^D NNNNN NNN";
        If In_clude!(1)=True
          Print #1," NNNNN";
        Endif
        If In_clude!(2)=True
          Print #1," NNNNN";
        Endif
        If In_clude!(3)=True
          Print #1," NNNN";
        Endif
        If In_clude!(4)=True
          Print #1," NNNN";
        Endif
        If In_clude!(5)=True
          Print #1," NNNN";
        Endif
        If In_clude!(6)=True
          Print #1
          Print #1,"^D NNNNNN"
        Else
          Print #1
        Endif
        Print #1,"^L FILENAME"
        Print #1,"^L FILEXT"
        If In_clude!(1)=True
          Print #1,"^L DISKNAME"
        Endif
        If In_clude!(2)=True
          Print #1,"^L ALTDSKNAME"
        Endif
        If In_clude!(3)=True
          Print #1,"^L FILESIZE"
        Endif
        If In_clude!(4)=True
          Print #1,"^L FILEDATE"
        Endif
        If In_clude!(5)=True
          Print #1,"^L FILETIME"
        Endif
        If In_clude!(6)=True
          Print #1,"^L FILEPATH"
        Endif
        Repeat
          If (Fsize$(I%)<>" FOLDER") Or (In_clude!(7)=True)
            Print #1,"^C"
            Print #1,"^F"
            Print #1,Finame$(I%)
            Print #1,"^F"
            Print #1,Fext$(I%)
            If In_clude!(1)=True
              Print #1,"^F"
              Print #1,Fvolume$(I%)
            Endif
            If In_clude!(2)=True
              Print #1,"^F"
              Print #1,Favolume$(I%)
            Endif
            If In_clude!(3)=True
              Print #1,"^F"
              Print #1,Fsize$(I%)
            Endif
            If In_clude!(4)=True
              Print #1,"^F"
              Print #1,Fdate$(I%)
            Endif
            If In_clude!(5)=True
              Print #1,"^F"
              Print #1,Ftime$(I%)
            Endif
            If In_clude!(6)=True
              Print #1,"^F"
              Print #1,Fpath$(I%)
            Endif
          Endif
          Inc I%
        Until I%>Fcnt%
        Print #1,"^END"
        Print #1,Space$(1200)
        Close #1
        Defmouse 0
      Endif
    Endif
    Sput M_scr$
  Else
    @Cstak
  Endif
Return
'
Procedure Cstak
  Local Clcnt%,I%,J%
  Chdir "\"
  Alert 0,"Insert the disk to which|you want the Cstak file|written, then select a|   name for the file.",1,"Continue",But%
  Fileselect "\*.CRD","CATALOG.CRD",Z$
  If Z$<>""
    If Exist(Z$)
      Alert 3,Z$+" Already Exists!",1,"Replace|Cancel",Button%
    Else
      Button%=1
    Endif
    If Button%<>2
      Open "O",#2,Z$
      Defmouse 2
      Msg2$=Z$
      Msg3$="is being output."
      @Msg_box2
      For I%=1 To Fcnt%
        ' output card number
        Z9%=I%-1
        Print #2,Chr$(Peek(Varptr(Z9%)+2));
        Print #2,Chr$(Peek(Varptr(Z9%)+3));
        ' output select mode
        Print #2,Chr$(1);
        ' set line counter
        Clnct%=0
        T_name$=Space$(50)
        Lset T_name$=Finame$(I%)
        Print #2,T_name$;Chr$(0);
        Inc Clnct%
        T_ext$=Space$(50)
        Lset T_ext$=Fext$(I%)
        Print #2,T_ext$;Chr$(0);
        Inc Clnct%
        If In_clude!(1)=True
          T_vol$=Space$(50)
          Lset T_vol$=Fvolume$(I%)
          Print #2,T_vol$;Chr$(0);
          Inc Clnct%
        Endif
        If In_clude!(2)=True
          T_avol$=Space$(50)
          Lset T_avol$=Favolume$(I%)
          Print #2,T_avol$;Chr$(0);
          Inc Clnct%
        Endif
        If In_clude!(3)=True
          T_size$=Space$(50)
          Lset T_size$=Fsize$(I%)
          Print #2,T_size$;Chr$(0);
          Inc Clnct%
        Endif
        If In_clude!(4)=True
          T_date$=Space$(50)
          Lset T_date$=Fdate$(I%)
          Print #2,T_date$;Chr$(0);
          Inc Clnct%
        Endif
        If In_clude!(5)=True
          T_time$=Space$(50)
          Lset T_time$=Ftime$(I%)
          Print #2,T_time$;Chr$(0);
          Inc Clnct%
        Endif
        If In_clude!(6)=True
          If Len(Fpath$(I%))<=50
            T_path$=Space$(50)
            Lset T_path$=Fpath$(I%)
            Print #2,T_path$;Chr$(0);
            Inc Clnct%
          Else
            T_path$=Space$(50)
            Lset T_path$=Mid$(Fpath$(I%),1,50)
            Print #2,T_path$;Chr$(0);
            Inc Clnct%
            Tpath$=Space$(50)
            Lset T_path$=Mid$(Fpath$(I%),51,Len(Fpath$(I%))-50)
            Print #2,T_path$;Chr$(0);
            Inc Clnct%
            Print #2
          Endif
        Endif
        For J%=Clnct%+1 To 10
          Print #2,Space$(50);Chr$(0);
        Next J%
      Next I%
      Close #2
      Defmouse 0
    Endif
  Endif
  Sput M_scr$
Return
'
' General file descriptor
'
Procedure Tellall
  Cls
  Print "The following information may be useful in transferring the data to your"
  Print "database program. (This information does not apply to CardSTak files.)"
  Print "  (ONLY the fields not highlighted under *EXCLUDE* will be included)"
  Print
  Print "File Name:                8 characters, left justified"
  Print "File Extension:           3 characters, left justified"
  Print "Disk Name:               12 characters, left justified"
  Print "Alternate Disk Name:     12 characters, left justified"
  Print "File Size:                7 characters, right justified (except in DIF output"
  Print "File Date:                8 characters                   format - see below) "
  Print "File Time:                8 characters"
  Print "File Path:   maximum of  64 characters, left justified"
  Print "(The file path data is only as long as necessary, except in the SDF file"
  Print "output, where it is always padded with spaces to the full 64 characters)"
  Print
  Print "The included fields will appear in the above sequence (File Name & File"
  Print "Extension are ALWAYS included!). All data is in string form, with the"
  Print "exception of the File Size in DIF format only, which in that case alone is in"
  Print "numeric form."
  Print
  Print "If the entry is a folder, the File Size field will contain the word FOLDER"
  Print "instead of a file size, except in the DIF format (numeric) where it will"
  Print "contain the value -1 (to distinguish it from a file of length 0)."
  Print
  Print "                         << press [Return] to exit >>";
  Repeat
  Until Inkey$=Chr$(13)
Return
