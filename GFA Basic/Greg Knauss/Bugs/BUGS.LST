' ******************************************************************************
' *                                                                            *
' *                          Edwin the Mutant Snake in                         *
' *                                    BUGS!                                   *
' *                                                                            *
' *                        By Greg "Mutant Snake" Knauss                       *
' *                     Copyright (C) 1990 Antic Publishing                    *
' *                                                                            *
' ******************************************************************************
'
' Color monitor?
'
res%=XBIOS(4)
IF res%>0 THEN
  ALERT 3,"| ""BUGS!"" can only | be run in low | resolution...",1," Drat! ",dummy%
  EDIT
ENDIF
'
' For some obscure, demon-reason from hell, the program wants an AES event to
' handle the mouse correctly.  Guess how long it took me to figure THAT out
'
VOID EVNT_TIMER(1)
'
' I think D. H. Lawrence's "The Fox" is overbearing.  The characters are meant
' to convey so much meaning that they become silly and unrealistic - either of
' which is the death of a serious-minded novel.  Ultimately, Lawrence fails
' because he placed some obscure "message" over story and characterization.
' (How's THAT for a comment?)
'
DIM snake$(16),new_piece%(9,9),delta_x%(3),delta_y%(3)
DIM map$(20,99),map%(40,20),background$(7),edit_map$(20)
DIM bug$(7,7),bug_pic%(7),bug_x(7),bug_delta_x%(7),delay%(7)
DIM old_colors%(15)
'
' Page flip stuff **************************************************************
'
screen$=STRING$(32512,0)
new_screen%=INT(VARPTR(screen$)/256+1)*256
old_screen%=XBIOS(3)
VOID XBIOS(5,L:old_screen%,L:new_screen%,0)
'
' Set the new colors and remember the old 'uns *********************************
'
FOR i%=0 TO 15
  old_colors%(i%)=XBIOS(7,i%,-1)
  READ x%,y%,dummy%
  SETCOLOR i%,x%,y%,dummy%
NEXT i%
DATA 0,0,0
DATA 0,3,0
DATA 0,5,0
DATA 0,7,0
DATA 7,0,0
DATA 5,5,0
DATA 5,3,0
DATA 6,4,5
DATA 3,3,7
DATA 4,5,7
DATA 7,6,4
DATA 4,0,0
DATA 2,2,2
DATA 4,4,4
DATA 5,5,5
DATA 7,7,7
'
' Where old, broken programs go ************************************************
'
ON BREAK GOSUB happy_trails_to_you..._until_we_meet_again...
ON ERROR GOSUB were_going_down..._bail_out..._bail_out...
'
' Get the pictures *************************************************************
'
a$=SPACE$(16006)
INLINE pictures%,16006
BMOVE pictures%,VARPTR(a$),16006
PUT 0,0,a$
FOR i%=0 TO 10
  GET i%*9+1,1,i%*9+8,8,snake$(i%)
NEXT i%
FOR i%=0 TO 7
  GET i%*9+1,10,i%*9+8,17,background$(i%)
NEXT i%
GET 0,68,319,99,top$
GET 143,0,319,66,title$
CLS
'
' Map stuff ********************************************************************
'
num_levels%=0
WHILE EXIST("BUGS_SET."+STR$(num_levels%+1))=TRUE
  INC num_levels%
  OPEN "I",#1,"BUGS_SET."+STR$(num_levels%)
  FOR i%=0 TO 20
    INPUT #1,map$(i%,num_levels%)
  NEXT i%
  CLOSE #1
WEND
'
' If there ain't no sets, just straight to the editor
'
IF num_levels%=0 THEN
  '
  ' Tell them where we're going
  '
  VOID XBIOS(5,L:old_screen%,L:old_screen%,-1)
  ALERT 1," | No BUGS sets found! | Entering editor. ",1," OK ",dummy%
  VOID XBIOS(5,L:old_screen%,L:new_screen%,-1)
  '
  ' Edit, ho!
  '
  GOTO editor
  '
  ' And if they exited without adding any sets, leave the program
  '
  IF num_levels%=0 THEN
    happy_trails_to_you..._until_we_meet_again...
  ENDIF
ENDIF
'
' Sprite stuff *****************************************************************
'
FOR pic%=0 TO 7
  bug$(0,pic%)=MKI$(8)+MKI$(0)+MKI$(0)+MKI$(9)+MKI$(8)
  FOR i%=0 TO 15
    READ x%,y%
    bug$(0,pic%)=bug$(0,pic%)+MKI$(x%)+MKI$(y%)
  NEXT i%
NEXT pic%
FOR bug%=1 TO 7
  FOR pic%=0 TO 7
    bug$(bug%,pic%)=bug$(0,pic%)
  NEXT pic%
NEXT bug%
FOR pic%=0 TO 7
  MID$(bug$(0,pic%),7,4)=MKI$(4)+MKI$(11)
NEXT pic%
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1536,0,1536,448,0,992,832,160,576,384,64,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1536,0,1536,448,0,992,320,672,576,384,544,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1536,0,1536,448,0,992,320,672,288,192,144,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1536,0,1536,448,0,992,320,672,352,128,128,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,0,96,896,0,1984,704,1280,576,384,512,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,0,96,896,0,1984,640,1344,576,384,1088,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,0,96,896,0,1984,640,1344,1152,768,2304,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,0,96,896,0,1984,640,1344,1664,256,256,0
'
' Snake movement setups ********************************************************
'
FOR heading%=0 TO 3
  FOR last_heading%=0 TO 3
    READ new_piece%(last_heading%,heading%)
  NEXT last_heading%
NEXT heading%
DATA 4,6,-1,7
DATA 8,5,7,-1
DATA -1,9,4,8
DATA 9,-1,6,5
FOR x%=0 TO 3
  READ delta_x%(x%)
NEXT x%
DATA 0,-1,0,1
FOR x%=0 TO 3
  READ delta_y%(x%)
NEXT x%
DATA -1,0,1,0
'
' Joystick stuff ***************************************************************
'
' This used to be a really big section...
'
STICK 1
joystick_active!=TRUE
'
' ******************************************************************************
' Game loop
' ******************************************************************************
'
DO
  game:
  '
  ' Put up the title
  '
  draw_map(1)
  PUT 72,75,title$
  '
  ' Loop here if they cancel from starting set select
  '
  REPEAT
    '
    ' Put the instructions up
    '
    instruction("FIRE BUTTON:START  SPACE:SELECT  RETURN:EDIT  ESC:EXIT")
    copy_screen
    '
    ' Main title loop
    '
    REPEAT
      key$=INKEY$
      '
      ' They wanna leave
      '
      IF key$=CHR$(27) THEN
        happy_trails_to_you..._until_we_meet_again...
      ENDIF
      '
      ' They wanna edit
      '
      IF key$=CHR$(13) THEN
        GOTO editor
        '
        ' Replace the game stuff
        '
        draw_map(1)
        PUT 72,75,title$
        instruction("BUTTON: START  SPACE: SELECT  RETURN: EDIT  ESC: EXIT")
        copy_screen
      ENDIF
      '
      ' They wanna start
      '
    UNTIL STRIG(1)=TRUE OR key$=" "
    '
    ' Once a game inits (Figure 'em out for yourself)
    '
    x%=19
    y%=0
    level%=0
    bug_speed%=1
    lives%=3
    score%=-150
    dead!=FALSE
    exit!=FALSE
    random_set!=FALSE
    '
    ' How'd they start?
    '
    IF key$=" " THEN
      '
      ' If they hit the space bar, let them choose the starting set
      '
      set%=@which_set("Starting set:",num_levels%,TRUE)-1
      '
      ' They chose Random
      '
      IF set%=-1 THEN
        random_set!=TRUE
      ENDIF
    ELSE
      '
      ' If they used the joystick, start at one
      '
      set%=0
    ENDIF
    key_kill
  UNTIL set%<>-256
  '
  ' ****************************************************************************
  ' New set loop
  ' ****************************************************************************
  '
  REPEAT
    '
    ' For each new level, incrament the level, draw the map and bump the speed
    '
    IF NOT dead! THEN
      '
      ' Give 'em the bonus and reset number of lives
      '
      ADD score%,lives%*50
      lives%=3
      '
      ' Inc the level (or choose a random one)
      '
      INC level%
      INC set%
      IF random_set!=TRUE THEN
        set%=INT(RANDOM(num_levels%))+1
      ENDIF
      '
      ' Every other level, bump the bug speed
      '
      IF level% MOD 3=0 AND bug_speed%<4 THEN
        INC bug_speed%
      ENDIF
      '
      ' If we've used all the sets, wrap around
      '
      IF set%>num_levels% THEN
        set%=1
      ENDIF
      '
      ' Draw the map
      '
      draw_map(set%)
    ENDIF
    '
    ' Init the bugs
    '
    FOR i%=0 TO 7
      dummy%=INT(RANDOM(2))*319
      bug_x(i%)=dummy%-2*(dummy%=0)
      bug_pic%(i%)=-4*(dummy%=0)
      bug_delta_x%(i%)=(-dummy%/319-(dummy%=0))*bug_speed%
      delay%(i%)=RANDOM(100)+100
    NEXT i%
    bug_y%=INT(RANDOM(7))+1
    '
    ' Reset some stuff
    '
    dead!=FALSE
    horiz_heading%=2
    vert_heading%=2
    last_heading%=2
    '
    ' **************************************************************************
    ' Main play loop
    ' **************************************************************************
    '
    REPEAT
      '
      ' Get a key
      '
      key$=INKEY$
      '
      ' Do they want out, the ungrateful little geeks?
      '
      IF key$=CHR$(27) THEN
        '
        ' Yep...
        '
        exit!=TRUE
      ENDIF
      '
      ' Forget and remember some stuff
      '
      stick%=STICK(1)
      delta_x%=0
      delta_y%=0
      SOUND 1,0,0,0
      '
      ' Where they wanna go? ***************************************************
      '
      IF (stick% AND 1) AND y%>0 THEN
        delta_y%=-1
        vert_heading%=0
      ELSE IF (stick% AND 2)
        delta_y%=1
        vert_heading%=2
      ENDIF
      IF (stick% AND 4) THEN
        delta_x%=-1
        horiz_heading%=1
      ELSE IF (stick% AND 8)
        delta_x%=1
        horiz_heading%=3
      ENDIF
      '
      ' They're backing up! ****************************************************
      '
      IF STRIG(1)=TRUE AND y%>0 THEN
        dummy%=last_heading%
        '
        ' Erase current position
        '
        PUT x%*8,y%*8+32,snake$(10)
        map%(x%,y%)=64
        '
        ' Move 'em back
        '
        SUB x%,delta_x%(dummy%)
        SUB y%,delta_y%(dummy%)
        dummy%=map%(x%,y%)
        '
        ' And put the new head down
        '
        PUT x%*8,y%*8+32,snake$(dummy%)
        last_heading%=dummy%
      ELSE IF delta_x%<>0 OR delta_y%<>0
        '
        ' **********************************************************************
        ' Movement!
        ' **********************************************************************
        '
        ' Vertical *************************************************************
        '
        dummy%=map%(x%,y%+delta_y%)
        stupid%=map%(x%+delta_x%,y%)
        IF ((dummy%=64 OR dummy%=70 OR dummy%=71) AND delta_y%<>0) AND NOT ((stupid%=64 OR stupid%=70 OR stupid%=71) AND last_direction%=1 AND delta_x%<>0) THEN
          '
          ' Pellet!
          '
          IF dummy%=70 OR dummy%=71 THEN
            map%(x%,y%+delta_y%)=64
            '
            ' Sound
            '
            SOUND 1,8,2,5
            '
            ' Inc score
            '
            ADD score%,2*level%+1
            show_score
            '
            ' Dec left
            '
            DEC num_pellets%
            '
            ' It was a superpellet!
            '
            IF dummy%=71 THEN
              slow_down%=1000-level%*100
              SOUND 1,9,2,4
            ENDIF
          ENDIF
          '
          ' They can move here, so...
          '
          piece%=new_piece%(last_heading%,vert_heading%)
          '
          ' Put 'em down
          '
          PUT x%*8,y%*8+32,snake$(piece%)
          map%(x%,y%)=last_heading%
          ADD y%,delta_y%
          PUT x%*8,y%*8+32,snake$(vert_heading%)
          '
          ' Remember direction
          '
          last_heading%=vert_heading%
          last_direction%=1
        ELSE
          '
          ' If they tried to head backwards, just ignore...
          '
          vert_heading%=last_heading%
          '
          ' They're trying to move horizontal **********************************
          '
          dummy%=map%(x%+delta_x%,y%)
          IF (dummy%=64 OR dummy%=70 OR dummy%=71) AND delta_x%<>0 THEN
            '
            ' Pellet!
            '
            IF dummy%=70 OR dummy%=71 THEN
              map%(x%+delta_x%,y%)=64
              '
              ' Sound!
              '
              SOUND 1,8,2,5
              '
              ' Inc score
              '
              ADD score%,2*level%+1
              show_score
              '
              ' Dec number of pellets left
              '
              DEC num_pellets%
              '
              ' Superpellet!
              '
              IF dummy%=71 THEN
                slow_down%=1000-level%*100
                SOUND 1,9,2,4
              ENDIF
            ENDIF
            '
            ' They can move here, so...
            '
            piece%=new_piece%(last_heading%,horiz_heading%)
            '
            ' Put 'em down
            '
            PUT x%*8,y%*8+32,snake$(piece%)
            map%(x%,y%)=last_heading%
            ADD x%,delta_x%
            PUT x%*8,y%*8+32,snake$(horiz_heading%)
            '
            ' Remember direction
            '
            last_heading%=horiz_heading%
            last_direction%=0
          ELSE
            '
            ' If they tried to head backwards, just ignore...
            '
            horiz_heading%=last_heading%
          ENDIF
        ENDIF
      ENDIF
      '
      ' ************************************************************************
      ' BUGS!  (Radioactive, regular, and code...)
      ' ************************************************************************
      '
      ' Crawl the radioactive bug **********************************************
      '
      ' If he's hit edge, move 'im!
      '
      IF bug_x(0)>319 OR bug_x(0)<0 THEN
        bug_y%=INT(RANDOM(7))+1
        bug_x(0)=INT(RANDOM(2))*319
        bug_pic%(0)=-4*(bug_x(0)=0)
        bug_delta_x%(0)=-(bug_x(0)=0)+(bug_x(0)=319)
      ENDIF
      '
      ' Animate 'im!
      '
      INC bug_pic%(0)
      IF bug_pic%(0)=4 OR bug_pic%(0)=8 THEN
        SUB bug_pic%(0),4
      ENDIF
      '
      ' Show 'im
      '
      SPRITE bug$(0,bug_pic%(0)),bug_x(0),bug_y%*24+8
      '
      ' Move 'im!
      '
      ADD bug_x(0),bug_delta_x%(0)
      '
      ' Did Edwin eat the radioactive bug? *************************************
      '
      IF x%*8>bug_x(0)-11 AND x%*8<bug_x(0)+3 AND y%=bug_y%*3-2
        dead!=TRUE
      ENDIF
      '
      ' Crawl the regular bugs *************************************************
      '
      FOR i%=1 TO 7
        '
        ' Are they waiting?
        '
        IF delay%(i%)>0 THEN
          '
          ' Yep
          '
          DEC delay%(i%)
        ELSE
          '
          ' If they're off the edge, bounce 'em!
          '
          IF bug_x(i%)>319 OR bug_x(i%)<2 THEN
            bug_delta_x%(i%)=-bug_delta_x%(i%)
            SUB bug_pic%(i%),4+8*(bug_pic%(i%)<4)
          ENDIF
          '
          ' Animate 'em!
          '
          INC bug_pic%(i%)
          IF bug_pic%(i%)=4 OR bug_pic%(i%)=8 THEN
            SUB bug_pic%(i%),4
          ENDIF
          '
          ' Show 'em!
          '
          SPRITE bug$(i%,bug_pic%(i%)),bug_x(i%),i%*24+8
          '
          ' Move 'em!
          '
          IF slow_down%>0 THEN
            ADD bug_x(i%),bug_delta_x%(i%)/4
            DEC slow_down%
          ELSE
            ADD bug_x(i%),bug_delta_x%(i%)
          ENDIF
        ENDIF
        '
        ' Find where they are in relation to Edwin
        '
        map_x%=bug_x(i%)/8
        map_y%=i%*3-2
        '
        ' Did Edwin chew on a bug? *********************************************
        '
        IF x%*8>bug_x(i%)-11 AND x%*8<bug_x(i%)+3 AND y%=map_y%
          '
          ' Yep, reset bug and make 'im wait a while
          '
          SPRITE bug$(i%,bug_pic%(i%)),319,199
          dummy%=INT(RANDOM(2))*319
          bug_x(i%)=dummy%-2*(dummy%=0)
          bug_pic%(i%)=-4*(dummy%=0)
          bug_delta_x%(i%)=(-dummy%/319-(dummy%=0))*bug_speed%
          delay%(i%)=RANDOM(100)+100
          '
          ' Inc and show the score
          '
          ADD score%,5*level%
          show_score
          '
          ' Do a sound that everybody on the planet will automatically associate
          ' with an eaten bug
          '
          SOUND 1,11,1,2
        ELSE IF map%(map_x%,map_y%)>-1 AND map%(map_x%,map_y%)<64
          '
          ' Did they chew on Edwin? ********************************************
          '
          dead!=TRUE
        ENDIF
      NEXT i%
      '
      ' Page flip **************************************************************
      '
      copy_screen
      '
      ' Remove bugs
      '
      FOR i%=7 DOWNTO 0
        SPRITE bug$(i%,bug_pic%(i%)),319,199
      NEXT i%
      '
      ' Keep going until we're out of pellets and Edwin's safe at home or until
      ' he eats it
      '
    UNTIL (num_pellets%=0 AND y%=0) OR dead! OR exit!
    '
    ' If Ed's dead, do death routine *******************************************
    '
    IF dead! THEN
      '
      ' Do death sound
      '
      FOR i%=15 TO 0 STEP -1
        SOUND 1,i%,1,1,2
      NEXT i%
      SOUND 1,0,0,0
      '
      ' Rewind him
      '
      dummy%=last_heading%
      REPEAT
        '
        ' Erase current position
        '
        PUT x%*8,y%*8+32,snake$(10)
        map%(x%,y%)=64
        '
        ' Move 'em back
        '
        SUB x%,delta_x%(dummy%)
        SUB y%,delta_y%(dummy%)
        dummy%=map%(x%,y%)
        '
        ' And put the new head down
        '
        PUT x%*8,y%*8+32,snake$(dummy%)
        '
        ' Show it
        '
        copy_screen
      UNTIL y%=0
      '
      ' Remove a life and put it on screen
      '
      DEC lives%
      TEXT 185,9,lives%
      copy_screen
    ELSE
      '
      ' Hey!  He finished the set!
      '
    ENDIF
    '
    ' Keep going until game's over
    '
  UNTIL lives%=0 OR exit!
  '
  ' Loop back to title page
  '
LOOP
'
' Copys the background screen to the foreground ********************************
'
PROCEDURE copy_screen
  BMOVE old_screen%,new_screen%,32000
RETURN
'
' Roy and Dale walking off into the sunset *************************************
'
PROCEDURE happy_trails_to_you..._until_we_meet_again...
  '
  ' Clear screen and restore video stuff
  '
  VOID XBIOS(5,L:old_screen%,L:old_screen%,res%)
  CLS
  '
  ' Restore colors
  '
  FOR i%=0 TO 15
    VOID XBIOS(7,i%,old_colors%(i%))
  NEXT i%
  '
  ' Restore the mouse
  '
  STICK 0
  joystick_active!=FALSE
  '
  ' And out
  '
  EDIT
RETURN
'
' And the program piles it in... ***********************************************
'
PROCEDURE were_going_down..._bail_out..._bail_out...
  SOUND
  error!=TRUE
  VOID XBIOS(5,L:old_screen%,L:old_screen%,-1)
  SHOWM
  STICK 0
  ALERT 3," Recoverable error     ",1,"Continue",dummy%
  VOID XBIOS(5,L:old_screen%,L:new_screen%,-1)
  ON ERROR GOSUB were_going_down..._bail_out..._bail_out...
  HIDEM
  IF joystick_active!=TRUE THEN
    STICK 1
  ENDIF
  RESUME NEXT
RETURN
'
' Draws "level" number map *****************************************************
'
PROCEDURE draw_map(set%)
  CLS
  DEFTEXT 1,0,0,6
  PUT 0,0,top$
  TEXT 185,9,lives%
  TEXT 285,20,RIGHT$("0"+STR$(level%),2)
  show_score
  num_pellets%=0
  FOR map_y%=0 TO 20
    FOR map_x%=0 TO 40
      a%=ASC(MID$(map$(map_y%,set%),map_x%+1,1))
      IF a%=70 OR a%=71 THEN
        INC num_pellets%
      ENDIF
      map%(map_x%,map_y%)=a%
      PUT map_x%*8,map_y%*8+32,background$(a%-64)
    NEXT map_x%
    IF map_y%=0 THEN
      PUT 152,32,snake$(2)
    ENDIF
    copy_screen
  NEXT map_y%
  map_x%=0
  map_y%=0
  key_kill
RETURN
'
' Guess, you bonehead **********************************************************
'
PROCEDURE show_score
  TEXT 8,20,RIGHT$("0000"+STR$(score%),5)
RETURN
'
' ******************************************************************************
' The Editor (Angelic chorus cuts in here...)
' ******************************************************************************
'
editor:
'
' Set up the screen 'n' stuff ************************************************
'
CLS
TEXT 116,9,"BUGS Editor"
FOR i%=0 TO 7
  PUT i%*36+32,14,background$(i%)
NEXT i%
BOX 31,13,40,22
DEFTEXT 1,0,0,4
TEXT 12,30,"F1: LOAD SET      F2: SAVE SET      F10: CLEAR SET"
clear_map
which_set%=1
'
' Some generic setups
'
which_piece%=0
'
' Return to the mouse
'
STICK 0
joystick_active!=FALSE
'
' Do the edit stuff **********************************************************
'
REPEAT
  '
  ' Check the mouse and the keyboard
  '
  edit_x%=MOUSEX/8.4211+1
  edit_y%=MOUSEY/10.5264+5
  key$=INKEY$
  '
  ' Are they laying a piece down? ********************************************
  '
  IF MOUSEK=1 THEN
    '
    ' Yep, put it on map and screen
    '
    MID$(edit_map$(edit_y%-4),edit_x%+1,1)=CHR$(which_piece%+64)
    PUT edit_x%*8,edit_y%*8,background$(which_piece%)
    '
    ' Are they selecting a new piece? ****************************************
    '
  ELSE IF MOUSEK=2
    '
    ' Ayuh
    '
    choose_piece
  ENDIF
  '
  ' Are they loading? ********************************************************
  '
  IF key$=CHR$(0)+CHR$(59) AND num_levels%>0 THEN
    '
    ' Which set?
    '
    set%=@which_set("Load Set:",num_levels%,FALSE)
    '
    ' Hey!  They didn't cancel!
    '
    IF set%>0 THEN
      FOR i%=0 TO 20
        edit_map$(i%)=map$(i%,set%)
      NEXT i%
      show_edit_map
    ENDIF
    '
    ' Re-show the instructions
    '
    instruction("LEFT BUTTON: PLACE   RIGHT BUTTON: SELECT   ESC: GAME")
    '
    ' Saving? ****************************************************************
    '
  ELSE IF key$=CHR$(0)+CHR$(60)
    '
    ' Which set?
    '
    set%=@which_set("Save Set:",num_levels%+1,FALSE)
    '
    ' Save the sucker
    '
    IF set%>0 THEN
      '
      ' Open the file
      '
      error!=FALSE
      VOID XBIOS(5,L:old_screen%,L:old_screen%,-1)
      SHOWM
      $u
      OPEN "O",#1,"BUGS_SET."+STR$(set%)
      $u
      HIDEM
      VOID XBIOS(5,L:old_screen%,L:new_screen%,-1)
      '
      ' Save the file and make it available to the game, too
      '
      IF error!=FALSE THEN
        FOR i%=0 TO 20
          PRINT #1;edit_map$(i%)
          map$(i%,set%)=edit_map$(i%)
        NEXT i%
        '
        ' And if it was a new set, bump the number of levels
        '
        IF set%=num_levels%+1 THEN
          num_levels%=set%
        ENDIF
      ENDIF
      '
      ' Close
      '
      CLOSE #1
    ENDIF
    '
    ' Re-show the instructions
    '
    instruction("LEFT BUTTON: PLACE   RIGHT BUTTON: SELECT   ESC: GAME")
    '
    ' Clearing? **************************************************************
    '
  ELSE IF key$=CHR$(0)+CHR$(68)
    '
    ' Ooookay...
    '
    clear_map
  ENDIF
  '
  ' Show the little box ******************************************************
  '
  BOX edit_x%*8,edit_y%*8,edit_x%*8+7,edit_y%*8+7
  copy_screen
  '
  ' Replace the piece we're currently over
  '
  PUT edit_x%*8,edit_y%*8,background$(ASC(MID$(edit_map$(edit_y%-4),edit_x%+1,1))-64)
  '
  ' Reasons to let them back into the game
  '
UNTIL key$=CHR$(27) OR key$=CHR$(13) OR key$=" "
'
' Restore the joystick
'
STICK 1
joystick_active!=TRUE
IF num_levels%=0
  GOSUB happy_trails_to_you..._until_we_meet_again...
ELSE
  GOTO game
ENDIF
'
' Let them choose a new piece to edit with *************************************
'
PROCEDURE choose_piece
  '
  ' Tell 'em where they are
  '
  instruction("MOUSE: CHOOSE      LEFT BUTTON: SELECT")
  '
  ' Set the mouse at the old piece
  '
  SETMOUSE which_piece%*40+20,MOUSEY,0
  '
  ' Loop!
  '
  REPEAT
    COLOR 0
    BOX which_piece%*36+31,13,which_piece%*36+40,22
    which_piece%=MOUSEX/40
    COLOR 1
    BOX which_piece%*36+31,13,which_piece%*36+40,22
    copy_screen
  UNTIL MOUSEK=1
  '
  ' Wait until they let go of the button
  '
  REPEAT
  UNTIL MOUSEK=0
  '
  ' Something or other, I've lost track...
  '
  edit_x%=MOUSEX/8.4211+1
  edit_y%=MOUSEY/10.5264+5
  '
  ' And something or other else...
  '
  instruction("LEFT BUTTON: PLACE   RIGHT BUTTON: SELECT   ESC: GAME")
  key_kill
RETURN
'
' Take a flying guess **********************************************************
'
PROCEDURE clear_map
  edit_map$(0)="AAAAAAAAAAAAAAAAAAA@AAAAAAAAAAAAAAAAAAAAA"
  FOR i%=1 TO 19
    edit_map$(i%)="A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AA"
  NEXT i%
  edit_map$(20)="AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
  show_edit_map
RETURN
'
' Show the editor's map ********************************************************
'
PROCEDURE show_edit_map
  FOR dummy_y%=4 TO 24
    FOR dummy_x%=0 TO 39
      PUT dummy_x%*8,dummy_y%*8,background$(ASC(MID$(edit_map$(dummy_y%-4),dummy_x%+1,1))-64)
    NEXT dummy_x%
    copy_screen
  NEXT dummy_y%
  instruction("LEFT BUTTON: PLACE   RIGHT BUTTON: SELECT   ESC: GAME")
  key_kill
RETURN
'
' Pick a set, any set **********************************************************
'
FUNCTION which_set(text$,max_set%,random!)
  '
  ' Get and draw the box
  '
  GET 97,80,222,115,hold$
  DEFFILL 0
  PBOX 97,80,222,115
  BOX 100,83,219,112
  BOX 97,80,222,115
  BOX 98,81,221,114
  TEXT 160-LEN(text$)*4,96,text$
  instruction("ARROWS: CHOOSE    RETURN: SELECT    ESC: CANCEL")
  IF which_set%>max_set% THEN
    which_set%=max_set%
  ENDIF
  '
  ' Let 'em choose a set
  '
  REPEAT
    '
    ' Get a key
    '
    key$=INKEY$
    '
    ' Change set number
    '
    IF key$=CHR$(0)+CHR$(75) AND which_set%>1+random! THEN
      '
      ' Down
      '
      DEC which_set%
    ELSE IF key$=CHR$(0)+CHR$(77) AND which_set%<max_set%
      '
      ' Up
      '
      INC which_set%
    ENDIF
    '
    ' Show the set number (or the word "Random")
    '
    PBOX 136,98,184,110
    IF which_set%>0 THEN
      TEXT 160-LEN(STR$(which_set%))*4,106,which_set%
    ELSE
      TEXT 136,106,"Random"
    ENDIF
    copy_screen
    '
    ' They either cancelled or decided on a set number
    '
  UNTIL key$=CHR$(27) OR key$=CHR$(13)
  '
  ' Restore the screen
  '
  PUT 97,80,hold$
  copy_screen
  '
  ' Canceled or choosen?
  '
  IF key$=CHR$(27) THEN
    '
    ' Cancel
    '
    key_kill
    RETURN -255
  ELSE
    '
    ' Or the set number
    '
    key_kill
    RETURN which_set%
  ENDIF
ENDFUNC
'
' Murder the key buffer ********************************************************
'
PROCEDURE key_kill
  key$=""
  LPOKE XBIOS(14,1)+6,0
RETURN
'
' Put an instruction line on the screen ****************************************
'
PROCEDURE instruction(text$)
  DEFFILL 0
  PBOX 0,193,319,199
  COLOR 1
  DRAW 0,193 TO 319,193
  DEFTEXT 1,0,0,4
  IF LEN(text$)*6>320 THEN
    TEXT 0,199,321,text$
  ELSE
    TEXT 160-LEN(text$)*3,199,text$
  ENDIF
  DEFTEXT 1,0,0,6
RETURN
'
' And they lived happily every after.  Now will you please go to sleep?
