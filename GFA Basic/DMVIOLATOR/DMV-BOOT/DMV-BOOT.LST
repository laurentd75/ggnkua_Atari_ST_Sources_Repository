' DMV-BOOT v1.1 par DMVIOLATOR/BINARIS
'
' Ce programme est un freeware.
'
' Il fonctionne sur Falcon030.
'
' Le programme sert … configurer depuis le dossier AUTO la configuration
' par d‚faut du NEWDESK.INF
'
' C'est … dire que quelque soit la r‚so de Boot de votre Falcon, vous
' pouvez d‚cider la r‚so … l'arriv‚e sur le bureau.
'
' En bonus vous pouvez configurer le son pour ˆtre compatible avec le STE et
' ‚teindre le Haut-Parleur interne !
'
' Les flŠches haut et bas permettent de se d‚placer dans les options,
' les droites et gauches permettent de modifier chaque paramŠtre...
'
' Le paramŠtre MODE en bas de l'‚cran permet de vous dire si le mode vid‚o
' que vous avez choisi est compatible avec le VIDEL.
'
'
' Voil…, amusez-vous bien avec ce source.
' Petite pr‚cision: je sais que ce n'est pas du tout optimis‚ mais bon
' j'ai d'autre choses … faire (d'autres softs en C et plus sŠrieux pour
' tout dire !
'
'
' Le DM de Les BINARIS
' Christophe BOYANIQUE
' 29 Rue R‚publique - 37230 FONDETTES - FRANCE
'
' Bal DMVIOLATOR sur RTEL
'
'
' Version 1.1:
' ------------
'
' - Compte … rebourd demand‚ par Stof, M‚gar et Santorin...
' - Modes compatibles … acc‚s rapide
'
'
' Pour ‚viter les RESERVE et Malloc on met le NEWDESK.INF dans un INLINE
' INLINE adr%,30720
' Le NEWDESK.INF ne peut pas faire plus de 10 Ko normalement mais bon ya
' des fous qui font plus !
' Alors on va quand mˆme faire un Malloc !
'
' adr%: adresse du NEWDESK
' len%: longueur du NEWDESK
' off%: offset sur l'‚tat du cache !
'
'
RESERVE 50*1024
DIM p&(8)
'
n$=CHR$(65+GEMDOS(25))+":\NEWDESK.INF"
n$="C:\NEWDESK.INF"
'
off%=-1
len%=-1
'
' HP Off par piti‚ huhu
~XBIOS(30,&X1000000)
'
@menu
@load_desk
IF len%>0
  @look
  IF off%>0
    @calc
    @aff
    @main
  ENDIF
ENDIF
@son_ste
RESERVE
EDIT
'
> PROCEDURE menu
  LOCAL i%
  CLS
  PRINT CHR$(27);"p";
  PRINT " DMV-Boot v1.1 par DMVIOLATOR/BINARIS ";
  PRINT CHR$(27);"q"
  '
  PRINT
  PRINT " ";CHR$(27);"p ";
  OUT 5,4
  PRINT " ";CHR$(27);"q";
  PRINT " & ";
  PRINT CHR$(27);"p ";
  OUT 5,3
  PRINT " ";CHR$(27);"q";
  PRINT " modifier   ";CHR$(27);"p F1 ";CHR$(27);"q ST BASSE"
  PRINT " ";CHR$(27);"p ";
  OUT 5,1
  PRINT " ";CHR$(27);"q";
  PRINT " & ";
  PRINT CHR$(27);"p ";
  OUT 5,2
  PRINT " ";CHR$(27);"q";
  PRINT " d‚placer   ";CHR$(27);"p F2 ";CHR$(27);"q ST MOYENNE"
  PRINT " ";CHR$(27);"p  RETURN ";CHR$(27);"q sauver";
  PRINT "     ";CHR$(27);"p F3 ";CHR$(27);"q ST HAUTE"
  PRINT " ";CHR$(27);"p  SPACE  ";CHR$(27);"q annuler";
  PRINT "    ";CHR$(27);"p F4 ";CHR$(27);"q TT BASSE"
  PRINT "                      ";CHR$(27);"p F5 ";CHR$(27);"q TT MOYENNE"
  '
  PRINT "   Cache:"
  PRINT "   Couleurs:"
  PRINT "   Colonne:"
  PRINT "   Hauteur:"
  PRINT "   Mode vid‚o:"
  PRINT "   Synchro:"
  PRINT "   Overscan:"
  PRINT "   Mode ST:"
  PRINT "   Son STE:"
  PRINT "   HP:"
  '
  PRINT
  PRINT
  PRINT
  PRINT "Moniteur:"
  PRINT "Synchro:"
  PRINT "R‚so:"
  PRINT "Mode:";
  '
RETURN
'
> PROCEDURE load_desk
  IF EXIST(n$)
    OPEN "i",#1,n$
    len%=LOF(#1)
    adr%=MALLOC(len%)
    BGET #1,adr%,len%
    CLOSE #1
  ENDIF
RETURN
> PROCEDURE save_desk
  LOCAL a$
  '
  ' Cache
  IF p&(0)
    BYTE{off%}=BSET(BYTE{off%},1)
  ELSE
    BYTE{off%}=BCLR(BYTE{off%},1)
  ENDIF
  '
  ' Couleurs
  reso&=p&(1)
  ' 80 col?
  IF p&(2)
    reso&=BSET(reso&,3)
  ENDIF
  ' Moniteur
  IF p&(4)
    reso&=BSET(reso&,4)
  ENDIF
  ' Synchro
  IF p&(5)
    reso&=BSET(reso&,5)
  ENDIF
  ' Overscan
  IF p&(6)
    reso&=BSET(reso&,6)
  ENDIF
  ' Compatible
  IF p&(7)
    reso&=BSET(reso&,7)
  ENDIF
  ' Vertical
  IF p&(3)
    reso&=BSET(reso&,8)
  ENDIF
  '
  a$=HEX$(reso&)
  a$=STRING$(3-LEN(a$),"0")+a$
  '
  BYTE{off%+3}=ASC(MID$(a$,1,1))
  BYTE{off%+5}=ASC(MID$(a$,2,1))
  BYTE{off%+6}=ASC(MID$(a$,3,1))
  '
  BSAVE n$,adr%,len%
  '
RETURN
'
> PROCEDURE look
  LOCAL t%
  '
  t%=0
  WHILE t%<len%
    IF BYTE{adr%+t%}=ASC("#")
      t%=t%+1
      IF BYTE{adr%+t%}=ASC("E")
        off%=adr%+t%+12
        EXIT IF 1=1
      ENDIF
    ENDIF
    ADD t%,1
  WEND
  '
  p&(0)=BTST(BYTE{off%},1)                      ! Cache
  '
  reso&=@conv(BYTE{off%+3})*256
  ADD reso&,@conv(BYTE{off%+5})*16
  ADD reso&,@conv(BYTE{off%+6})
  '
  p&(1)=reso& AND 7                             ! Couleur
  p&(2)=BTST(reso&,3)                           ! 80 colonne ?
  p&(3)=BTST(reso&,8)                           ! Flag vertical
  p&(4)=BTST(reso&,4)                           ! Moniteur
  p&(5)=BTST(reso&,5)                           ! Synchro
  sync&=p&(5)
  p&(6)=BTST(reso&,6)                           ! Overscan ?
  p&(7)=BTST(reso&,7)                           ! Compatible ?
  '
  son!=TRUE
  hp!=FALSE
  '
RETURN
> FUNCTION conv(a%)
IF a%>=&H30 AND a%=<&H39
  RETURN (a%-&H30)
ELSE IF a%>=&H41 AND a%<=&H46
  RETURN (a%-&H37)
ELSE
  RETURN 0
ENDIF
ENDFUNC
'
> PROCEDURE aff
@mode_ok
@calc
PRINT AT(11,21);
SELECT XBIOS(89)
CASE 1
  PRINT "Couleur ST"
CASE 2
  PRINT "VGA"
CASE 3
  PRINT "TV"
ENDSELECT
'
PRINT AT(11,22);
IF sync&
  PRINT "PAL"
ELSE
  PRINT "NTSC"
ENDIF
'
PRINT AT(11,23);x%;"x";y%
'
PRINT AT(11,24);
IF mode_ok!
  PRINT "OK      "
ELSE
  PRINT "INTERDIT";
ENDIF
'
'
PRINT AT(16,8);
IF p&(0)
  PRINT "OUI"
ELSE
  PRINT "NON"
ENDIF
'
PRINT AT(16,9);
SELECT p&(1)
CASE 0
  PRINT "2         "
CASE 1
  PRINT "4         "
CASE 2
  PRINT "16        "
CASE 3
  PRINT "256       "
CASE 4
  PRINT "TRUE COLOR"
ENDSELECT
'
PRINT AT(16,10);
IF p&(2)
  PRINT "80"
ELSE
  PRINT "40"
ENDIF
'
PRINT AT(16,11);
IF p&(4)
  IF p&(3)
    PRINT "D.Ligne ON "
  ELSE
    PRINT "D.Ligne OFF"
  ENDIF
ELSE
  IF p&(3)
    PRINT "Entrelac‚  "
  ELSE
    PRINT "Normal     "
  ENDIF
ENDIF
'
PRINT AT(16,12);
IF p&(4)
  PRINT "VGA"
ELSE
  PRINT "TV "
ENDIF
'
PRINT AT(16,13);
IF p&(5)
  PRINT "PAL "
ELSE
  PRINT "NTSC"
ENDIF
'
PRINT AT(16,14);
IF p&(6)
  PRINT "OUI"
ELSE
  PRINT "NON"
ENDIF
'
PRINT AT(16,15);
IF p&(7)
  PRINT "OUI"
ELSE
  PRINT "NON"
ENDIF
'
PRINT AT(16,16);
IF son!
  PRINT "OUI"
ELSE
  PRINT "NON"
ENDIF
'
PRINT AT(16,17);
IF hp!
  PRINT "OUI"
ELSE
  PRINT "NON"
ENDIF
'
RETURN
> PROCEDURE calc
' Pour le calcul de la r‚so on distingue VGA et autre !
IF p&(4)
  x%=320*(1-p&(2))
  IF p&(7)
    y%=200*(2+p&(3))
  ELSE
    y%=240*(2+p&(3))
  ENDIF
ELSE
  x%=320*(1-p&(2))
  y%=200*(1-p&(3))
ENDIF
IF p&(6)
  x%=x%*1.2
  y%=y%*1.2
ENDIF
RETURN
'
> PROCEDURE main
LOCAL k%,t1%
'
num%=0
'
'
n%=5
m%=4
t1%=TIMER
'
k%=0
WHILE (m%>=0) AND k%=0
  n%=5-((TIMER-t1%) DIV 200)
  IF (m%<>n%)
    m%=n%
    PRINT AT(1,19);"Compte … rebourd: ";m%
  ENDIF
  KEYLOOK k%
WEND
PRINT AT(1,19);SPACE$(20)
'
REPEAT
  PRINT AT(2,num%+8);">"
  IF m%=-1
    k%=32
  ELSE
    k%=INP(2)
  ENDIF
  SELECT k%
  CASE 187
    p&(1)=2     ! 16 couleurs
    p&(2)=0     ! 40 col
    IF p&(4)
      p&(3)=1   ! VGA -> Double Ligne
    ELSE
      p&(3)=0   ! RVB -> Non Entrelac‚
    ENDIF
    p&(6)=0     ! Overscan off
    p&(7)=1     ! Compatible on
    @save_desk
    k%=32
  CASE 188
    p&(1)=1     ! 4 couleurs
    p&(2)=1     ! 80 col
    IF p&(4)
      p&(3)=1   ! VGA -> Double Ligne
    ELSE
      p&(3)=0   ! RVB -> Non Entrelac‚
    ENDIF
    p&(6)=0     ! Overscan off
    p&(7)=1     ! Compatible on
    @save_desk
    k%=32
  CASE 189
    p&(1)=0     ! 2 couleurs
    p&(2)=1     ! 80 col
    IF p&(4)
      p&(3)=0   ! VGA -> Non Double Ligne
    ELSE
      p&(3)=1   ! RVB -> Entrelac‚
    ENDIF
    p&(6)=0     ! Overscan off
    p&(7)=1     ! Compatible on
    @save_desk
    k%=32
  CASE 190
    p&(1)=3     ! 256 couleurs
    p&(2)=0     ! 40 col
    IF p&(4)
      p&(3)=0   ! VGA -> Non Double Ligne
    ELSE
      p&(3)=1   ! RVB -> Entrelac‚
    ENDIF
    p&(6)=0     ! Overscan off
    p&(7)=0     ! Compatible off
    @save_desk
    k%=32
  CASE 191
    p&(1)=2     ! 16 couleurs
    p&(2)=1     ! 80 col
    IF p&(4)
      p&(3)=0   ! VGA -> Non Double Ligne
    ELSE
      p&(3)=1   ! RVB -> Entrelac‚
    ENDIF
    p&(6)=0     ! Overscan off
    p&(7)=0     ! Compatible off
    @save_desk
    k%=32
  CASE 13
    @save_desk
  CASE 200
    PRINT AT(2,num%+8);" "
    IF num%>0
      num%=num%-1
    ENDIF
  CASE 208
    PRINT AT(2,num%+8);" "
    IF num%<9
      num%=num%+1
    ENDIF
  CASE 203,205
    SELECT num%
    CASE 0
      p&(0)=NOT p&(0)
    CASE 1
      IF k%=203
        SUB p&(1),1
      ELSE IF k%=205
        ADD p&(1),1
      ENDIF
      IF p&(1)=5
        p&(1)=4
      ELSE IF p&(1)=-1
        p&(1)=0
      ENDIF
    CASE 2
      p&(2)=NOT p&(2)
    CASE 3
      p&(3)=NOT (p&(3))
    CASE 4
      p&(4)=NOT (p&(4))
    CASE 5
      p&(5)=NOT (p&(5))
    CASE 6
      p&(6)=NOT p&(6)
    CASE 7
      p&(7)=NOT p&(7)
    CASE 8
      son!=NOT son!
    CASE 9
      hp!=NOT hp!
    ENDSELECT
    @aff
  ENDSELECT
UNTIL k%=32 OR k%=13
'
RETURN
'
> PROCEDURE mode_ok
IF p&(7) AND NOT @is_st
  mode_ok!=FALSE
ELSE IF p&(4) AND p&(6)
  mode_ok!=FALSE
ELSE IF p&(7) AND p&(6)
  mode_ok!=FALSE
ELSE IF (p&(1)=0) AND NOT p&(2)
  mode_ok!=FALSE
ELSE IF p&(2) AND p&(4) AND p&(1)=4
  mode_ok!=FALSE
ELSE
  mode_ok!=TRUE
ENDIF
RETURN
> FUNCTION is_st
LOCAL ok!
'
ok!=TRUE
IF p&(4)     ! VGA
' MONO
IF p&(1)=0 AND p&(2) AND NOT p&(3)
ELSE IF p&(1)=1 AND p&(2) AND p&(3)
ELSE IF p&(1)=2 AND (NOT p&(2)) AND p&(3)
ELSE
  ok!=FALSE
ENDIF
ELSE                  ! TV
' MONO
IF p&(1)=0 AND p&(2) AND p&(3)
ELSE IF p&(1)=1 AND p&(2) AND NOT p&(3)
ELSE IF p&(1)=2 AND (NOT p&(2)) AND NOT p&(3)
ELSE
  ok!=FALSE
ENDIF
ENDIF
RETURN ok!
ENDFUNC
'
> PROCEDURE son_ste
IF son!
~XBIOS(130,4,3)             ! ADDERIN      = Matrice+ADC
~XBIOS(130,5,3)             ! ADC INPUT    = Droite+Gauche
~XBIOS(130,6,3)             ! SetPrescale  = 50 KHz
~XBIOS(139,0,8,0,0,1)       ! DevConnect   = DMAPLAY+DAC
~XBIOS(135,0,1)             ! SetInterrupt = PLAYBACK+TIMERA
ENDIF
IF hp!
~XBIOS(29,&X10111111)
ELSE
~XBIOS(30,&X1000000)
ENDIF
CLS
PRINT CHR$(27);"p";
PRINT SPACE$(13);
PRINT "DMV-BOOT 1.1";
PRINT SPACE$(13);
PRINT CHR$(27);"q";
PRINT
PRINT "  DMVIOLATOR/BINARIS: Enjoy Falcon !"
PRINT
PRINT "   Pour obtenir mes derniers softs,"
PRINT "     envoyez-moi un disque et une"
PRINT "    enveloppe affranchie pour 50g."
PRINT CHR$(27);"p";
PRINT SPACE$(38);
PRINT CHR$(27);"q";
PRINT
PRINT
IF (adr%)
~MFREE(adr%)
ENDIF
RETURN
