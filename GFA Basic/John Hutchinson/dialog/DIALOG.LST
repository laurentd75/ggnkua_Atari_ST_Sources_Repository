' DIALOG.BAS
' by John Hutchinson
' Copyright 1988 Antic Publishing Inc.
'
' First load the resource file.  Make sure this program, the resource file,
' and GFABASIC.PRG are all in the same directory; otherwise  you will have
' to add the appropriate path name.
If Not Exist("DEMO.RSC")
  Alert 1,"Resource file DEMO.RSC|      not found.",1,"Abort",Button
  End
Endif
@Rsrc_load("DEMO.RSC")
'
' Get the address of the tree of the box you want to display.  Tree_number%
' is the number of the tree in your RSC file (in this case it is 0 for our
' dialog box example).  *Tree% will return from the procedure with the
' memory address of that tree.
Tree_number%=0
@Rsrc_gtree(0,*Tree%)
'
' If you want the box centered on the screen, make a call to Form_center.
@Form_center(Tree%)
'
' Use the Find_coords shortcut procedure to get the box's screen coordinates.
@Find_coords(Tree%)
'
' Make a REPEAT-UNTIL loop just for this demo.
Repeat
  '
  ' Save the background screen in a temporary 32K string.
  Sget Temp$
  '
  ' Reset the cursor to the beginning of our editable text, object index #2.
  ' This also erases any previous input in this text object.
  @Stext(Tree%,2,"")
  '
  ' Call this procedure for a grow box effect when the box is drawn.
  @Form_dial(1,10,10,0,0,X%,Y%,B%,H%)
  '
  ' Now have the box drawn on the screen.
  @Objc_draw(Tree%,0,8,X%,Y%,B%,H%)
  '
  ' Turn control over to AES starting at 1st editable text, object index #2.
  Start_obj%=2
  @Form_do(Tree%,Start_obj%)
  '
  ' Check to see which exit button was selected.
  ' In the case of this example, we only have one exit object (the OK button).
  Ex%=Dpeek(Gintout)
  '
  ' Deselect the OK button so it will be unselected next time box is drawn.
  @Sstate(Tree%,Ex%,0)
  '
  ' Restore the background screen.
  ' This is a lot faster than using event messages to redraw the screen.
  Sput Temp$
  '
  ' Call this procedure for a shrink box effect when the box is exited.
  @Form_dial(2,0,0,0,0,X%,Y%,B%,H%)
  '
  ' Find out what the user input as editable text.
  ' *Text$ will return the user's input.
  @Gtext(Tree%,2,*Text$)
  '
  ' Find out which radio button was selected.
  ' Button "ONE" is object index #3; button "TWO" is object index #4.
  @Gstate(Tree%,3,*Btn1%)
  @Gstate(Tree%,4,*Btn2%)
  If Btn1%=1
    Radio_btn=1
  Else
    If Btn2%=1
      Radio_btn=2
    Else
      Radio_btn=0
    Endif
  Endif
  '
  ' Print the results to the screen for the demo.
  Print "You entered ";Text$
  Print "You selected radio button ";Radio_btn
  Print
  '
  ' Deselect the radio buttons to prepare for next time box is called.
  @Sstate(Tree%,3,0)
  @Sstate(Tree%,4,0)
  '
  ' Repeat the demo over and over until you input a "Q" or "q" to quit.
  Print "Press 'Q' to quit or any other key to try it again..."
  Repeat
    Key$=Inkey$
  Until Key$<>""
Until Key$="Q" Or Key$="q"
'
End
'
' *** AES LIBRARY PROCEDURES ***
' These procedures must be merged with your GFA BASIC program.
'
Procedure Objc_draw(Tree%,Start%,Depth%,X%,Y%,B%,H%)
  Lpoke Addrin,Tree%
  Dpoke Gintin,Start%
  Dpoke Gintin+2,Depth%
  Dpoke Gintin+4,X%
  Dpoke Gintin+6,Y%
  Dpoke Gintin+8,B%
  Dpoke Gintin+10,H%
  Gemsys 42
Return
'
Procedure Form_do(Tree%,Start%)
  Lpoke Addrin,Tree%
  Dpoke Gintin,Start%
  Gemsys 50
Return
'
Procedure Form_dial(F%,X%,Y%,B%,H%,Xb%,Yb%,Bb%,Hb%)
  Dpoke Gintin,F%
  Dpoke Gintin+2,X%
  Dpoke Gintin+4,Y%
  Dpoke Gintin+6,B%
  Dpoke Gintin+8,H%
  Dpoke Gintin+10,Xb%
  Dpoke Gintin+12,Yb%
  Dpoke Gintin+14,Bb%
  Dpoke Gintin+16,Hb%
  Gemsys 51
Return
'
Procedure Form_center(Tree%)
  Lpoke Addrin,Tree%
  Gemsys 54
Return
'
Procedure Rsrc_load(Filename$)
  Filename$=Filename$+Chr$(0)
  Lpoke Addrin,Varptr(Filename$)
  Gemsys 110
Return
'
Procedure Rsrc_gtree(Index_%,Tree.%)
  Lpoke Gintin,Index_%
  Gemsys 112
  *Tree.%=Lpeek(Addrout)
Return
'
Procedure Find_coords(Tree%)
  X%=Dpeek(Tree%+16)
  Y%=Dpeek(Tree%+18)
  B%=Dpeek(Tree%+20)
  H%=Dpeek(Tree%+22)
Return
'
Procedure Gstate(T_%,N_%,X.%)
  *X.%=Dpeek(T_%+24*N_%+10)
Return
'
Procedure Sstate(T_%,N_%,X_%)
  Dpoke T_%+24*N_%+10,X_%
Return
'
Procedure Gtext(T_%,N_%,X.%)
  Local X_$
  X_$=Space$(100)
  T_%=Lpeek(Lpeek(T_%+24*N_%+12))
  Bmove T_%,Varptr(X_$),100
  *X.%=Left$(X_$,Instr(X_$,Chr$(0))-1)
Return
'
Procedure Stext(T_%,N_%,X_$)
  X_$=X_$+Chr$(0)
  T_%=Lpeek(T_%+24*N_%+12)
  Bmove Varptr(X_$),Lpeek(T_%),Min(Len(X_$),Dpeek(T_%+24)-1)
Return
'
