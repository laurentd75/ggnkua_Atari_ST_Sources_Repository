
                           FLASH FORMAT
                       Steve Crunk 1/30/90



What's faster that a speeding bullet? Faster that TWISTER? This
little program reveals an oddity with the XBIOS format command, and 
allows you to take advantage of it. We will discuss in a moment 
the theory. Right now, let's look at the results that can be 
achieved using disks formatted by FLASH FORMAT. The times were 
determined using CHEETAH by Jay Jones, a file transfer utility. 
The source was the root directory of a Hard Disk, so that end of 
the transfer is negligible. The destination was my drive B.

----------------------------------------------------------------
                   STANDARD XBIOS | TWISTER FORMAT | FAST FORMAT
----------------------------------------------------------------
Time to copy 238k      46.25 sec      34.52 sec       25.10 sec  
Avg. Transfer rate    .31 mb/min     .41 mb/min      .54 mb/min
----------------------------------------------------------------

"Wow!" says he. "I thought TWISTER pushed the drive to its 
theoretical maximum." Well, if that is so, then you just entered 
hyperspace (Warp 3, Mister Sulu).


THEORY (or, how does it work?)

When a disk drive reads data, the head is located over a track and 
the sectors are read. Once the sector count reaches 9 (for 
standard format) the head must step in again. To verify that it is 
properly positioned, it must read the identity of sector 1 of the 
next track. By the time it has done this, and decided it is 
properly located, sector one as passed by, so the drive twiddles 
its thumbs while the the disk rotates all the way around again 
before it can continue to read the data.

It is this "overhead" of thumb twiddling while the disk spins 
around that we want to eliminate. TWISTER does it by skewing the 
sector numbers on succeeding tracks so that the drive can 
immediately begin reading. FLASH does it by using an interleave of 
11. 

An interleave of 11 causes the formating routine to try to format 
11 sectors. Now, there is just room for 10.5 sectors in a track. 
Since you told the XBIOS routine you were formatting for 9 sectors 
per track, sector 10 and the half sector 11 are essentially 
invisible. Also, sectors 10 and 11 appear at the beginning of the 
track.

Now, here's what happens. The head is positioned over a track and 
reads data starting with sector 1. When it gets to sector nine, 
the head steps in to the next track. While it is stepping, Sector 
10 goes by. It reads sector 11 header to determine if its in the 
right position, and then looks for sector 1, which immediately 
follows the header for sector 11. Thus the drive begins to read 
immediately.

I was curious if there might be any drawbacks to this scheme, such 
as low level sector copiers not working with such disks. I tried 
Hypercopy and DoubleClick formatter/copier. Neither had any 
problems. I tried the desktop disk copier. Again, no problems. It 
seems to all intents and purposes that those 1.5 extra sectors on 
the track are not there, except to a stepping head.

*****************************************************************
This doesn't mean that some problems won't crop up. I thoroughly 
disclaim any responsibility for any losses incurred as a result 
of using the FLASH FORMAT process.
*****************************************************************


SOME LINGUERING CONCERNS

There may be some data security risks involved. After all, you are 
cramming in the maximum sectors for a track. Data loss might be 
possible.

Test it out. Upload comments or GEmail them to me. I'm always glad 
to hear from fellow ST enthusiasts. 

S.CRUNK

