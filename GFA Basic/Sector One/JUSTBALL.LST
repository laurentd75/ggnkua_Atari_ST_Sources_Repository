RESERVE 200000
ON ERROR GOSUB einde                    ! ONLY FOR INTERPETER
ON BREAK GOSUB einde                    ! ONLY FOR INTERPETER...
'
DIM sc%(15),d%(40),char$(50),le$(96,20),reg%(16)
'
INLINE letter%,32034
INLINE music%,5086
'
' INLINE LETTER% = DEGAS PICTURE ----------------> PICTURE.PI1
' INLINE MUSIC%  = FROM MAGAZINE KIDNEY2.THK ----> MUSIC.THK
'
' DON'T FORGET TO LOAD THE BEFORE USING THE PRG !!!!!
'
old_sc%=XBIOS(3)                        ! OLD SCREEN ADDRESS
'
FOR qe=0 TO 15                          ! SET ALL COLOR TO BLACK
  SETCOLOR qe,0
NEXT qe
max%=MALLOC(-1)                         ! HOW BIG IS THE MEMORY ???
hi_mem%=MALLOC(max%-10000)              ! GET IT ALL AND LEAVE A BIT F/T ATARI
CLS                                     ! CLEAR SCREEN
let                                     ! GO TO CHARACTER GRABBER
opbouw                                  ! MAKE 16 SCREENS
tekst                                   ! READ SCROLL LINE
' ----------------------------------------------
'    -  M  A  I  N  P  R  O  G  R  A  M    -
' ----------------------------------------------
'
mun                                     ! MUSIC ON
wiebel                                  ! START MAIN LOOP
einde                                   ! END
END
'
'
PROCEDURE wiebel                ! START OF MAIN LOOP
  a$=UPPER$(a$)                 ! IF ANY LOWER CASE CHARACTERS MAKE UPPERCASE
  cp%=V:a$                      ! START ADDRESS OF A$
  la%=cp%+LEN(a$)-1             ! END ADDRESS OF A$
  x%=cp%                        ! START POSITION
  fig%=3                        ! SORT OF BALL TO START WITH
  ri%=1                         ! COUNTER
  q%=2                          ! POINTER STARTING SCREEN 1
  oq%=1                         ! POINTER STARTING SCREEN 2
  '
  FOR t%=cp% TO la%             ! REBUILD THE SCROLLTEXT IN MEMORY
    POKE t%,PEEK(t%)-32
  NEXT t%
  d%=84                         ! START ADDRESS FOR FIRST BALL TO APPEAR
  '
  VOID XBIOS(6,L:letter%+2)     ! CALL COLORS
  VSYNC
  '
  DO
    c%=PEEK(x%)                 ! GET FIRST CHARACTER OF SCROLLTEXT
    FOR ll%=0 TO 15 STEP 4      ! FOR NEXT START
      six=160+SINQ(n%)*(d%*3)   ! X POSITION OF BALL
      siy=75+COSQ(n%)*d%        ! Y POSITION OF BALL
      DEC d%                    ! D%=D%-1
      IF d%<2                   ! IF D% IS SMALLER THEN 2
        d%=84                   ! SET IT BACK TO 84
      ENDIF
      PUT six,siy,char$(30+fig%),1 ! PUT MASK OF BALL
      PUT six,siy,char$(tf+fig%),7 ! PUT BALL
      ADD n%,1                  ! ADD 1 TO N%
      IF n%>973                 ! IF N% BIGGER THEN 973
        n%=0                    ! SET IF BACK TO 0
        ADD tf,10               ! ADD TF (NEXT KIND OF BALL)
        IF tf>20                ! IF TF BIGGER THEN 20 (LAST KIND OF BALLS)
          tf=0                  ! SET IF BACK TO 0 (FIRST KIND OF BALLS)
        ENDIF
      ENDIF
      oq%=q%                    ! STORE Q IN OQ (WE NEED AGAIN)
      INC q%                    ! ADD Q ( THATS THE SCREEN COUNTER)
      IF q%>15                  ! IF SCREEN COUNTER BIGGER THEN 15
        q%=0                    ! SET IT BACK TO 0
        ADD fig%,ri%            ! GET THE NEXT BALL (BIGGER OR SMALLER)
        IF fig%>8 OR fig%<1     ! IF IT'S THE BIGGEST OR THE LARGEST BALL
          ri%=-ri%              ! REVERSE THE COUNTER
        ENDIF
      ENDIF
      PUT 315,176,le$(c%,ll%)   ! PUT PART OT THE LETTER OT THE SCROLL TEXT
      GET 4,176,319,192,bl$     ! GET THE WHOLE SCROLLTEXT
      VOID XBIOS(5,L:sc%(oq%),L:sc%(q%),-1) ! SWAP THE SCREENS
      VSYNC                     ! WAIT FOR SCREEN TO BE BUILD
      PUT 0,176,bl$             ! PUT THE SCROLLTEXT BACK 4 PLACES TO THE LEFT
    NEXT ll%                    ! GET BACK TO FOR
    INC x%                      ! INC X% ( POINTER IN THE SCROLL TEXT)
    IF x%=la%                   ! IS IT ALREADY THE END OF THE SCROLLTEXT
      x%=cp%                    ! YES THEN SET POINTER BACK TO THE START
    ENDIF
    IF INP?(2)                  ! IF THERE IS A KEY PRESSED
      einde                     ! JUMP TO END ROUTINE AND STOP
      END
    ENDIF
  LOOP                          ! BACK TO DO
RETURN                          ! END OF PROCEDURE
'
PROCEDURE tekst                 ! MAKE THE SCROLLTEXT
  RESTORE tekstregels           ! SET POINTER TO DATA
  a$=""                         ! A$ IS NOW EMPTY
  REPEAT                        ! START READING
    READ b$                     ! READ LINE...
    a$=a$+b$                    ! ADD IT TO THE ALREADY EXISTING ONE
  UNTIL b$="-1"                 ! UNTIL WE FIND "-1"
tekstregels:
  '
  DATA " HERE IT IS, A BIT SMALLER THEN THE ORIGINAL VERSION BUT THE IDEA IS THE"
  DATA " SAME, THE JUST BALLS SCREEN FROM THE JUST FOR FUN PART I. THERE WERE "
  DATA "VERY MUCH PEOPLE WONDERING HOW THIS COULD BE DONE IN GFA BASIC. NORMALY "
  DATA " I DON'T GIVE AWAY ANY OF MY SOURCES BUT FOR ONCE I WILL MAKE AN EXEPTION."
  DATA " I HOPE YOU CAN LEARN SOMETHING OF IT, AND PLEASE SEND IN SOME OF YOUR "
  DATA "GFA SOURCES FILES SO EVERYBODY CAN LEARN FROM IT !!!!  BYE      "
  DATA "-1"
RETURN
'
PROCEDURE opbouw                                ! MAKING THE SCREENS
  sc%=XBIOS(3)                                  ! REAL SCREEN POINTER
  '
  FOR t=0 TO 15                                 ! MAKE 16 SCREENS
    sc%(t)=hi_mem%+t*32000                      ! EVERY SCREEN IS 32000 BYTES
    VOID XBIOS(5,L:sc%(t),L:sc%(t),-1)          ! MAKE SCREEN VISABLE
    CLS                                         ! CLEAR IT
    BMOVE letter%+34+(130*160),sc%(t)+3200,11200! SET LOGO IN IT
    FOR z=0 TO 69                               ! SET LOGO IN IT UP SIDE DOWN
      BMOVE letter%+34+((z+130)*160),sc%(t)+(25600-(z*160)),160
    NEXT z
  NEXT t
RETURN
'
PROCEDURE let                                   ! MAKEING THE CHARACTERS
  BMOVE letter%+34,old_sc%,32000                ! MOVE PICTURE TO REAL SCREEN
  VSYNC
  q=0                                           ! COUNTER
  FOR t=0 TO 9                                  ! GET 10 DIFFERENT FIGURES
    GET (t*16),0,(t*16)+15,15,char$(q)          ! GET NORMAL BALLS
    GET (t*16),16,(t*16)+15,31,char$(q+10)      ! GET STRIPED BALLS
    GET (t*16),32,(t*16)+15,47,char$(q+20)      ! GET GOLDEN BALLS
    GET (t*16),48,(t*16)+15,63,char$(q+30)      ! GET MASKS
    INC q
  NEXT t
  '
  le=0                                          ! GET ALL THE CHARACTERS
  FOR y=0 TO 2                                  ! 3 LINES
    FOR x=0 TO 319 STEP 16                      ! 20 CHARACTERS ON A LINE
      FOR p=0 TO 15 STEP 4                      ! SPLIT EVERY CHARACTER 4 TIMES
        GET x+p,(y*16)+67,x+(p+4),(y*16)+82,le$(le,p)
      NEXT p
      INC le
    NEXT x
  NEXT y
RETURN
'
PROCEDURE mun
  do%=GEMDOS(&H20,L:0)                        ! supervisor mode
  reg%(0)=1                                   ! choose music 1
  RCALL music%,reg%()                         ! call music
  SLPOKE &H4D2,music%+8                       ! address to register
  VOID GEMDOS(&H20,L:do%)                     ! user mode
RETURN
'
PROCEDURE muf
  do%=GEMDOS(&H20,L:0)                        ! supervisor mode
  SLPOKE &H4D2,0                              ! 0 to register
  WAVE 0,0,0,0                                ! silence all
  OUT 2,7                                     ! make ping sound
  VOID GEMDOS(&H20,L:do%)                     ! user mode
RETURN
'
PROCEDURE einde
  VOID MFREE(hi_mem%)                         ! give memory back to system
  RESERVE                                     ! give it back all
  muf                                         ! call music off routine
  SPOKE &H484,7                               ! cursor klick on  + repeat
  VOID XBIOS(5,L:old_sc%,L:old_sc%,-1)        ! put screen back on real screen
  VSYNC
  CLS                                         ! clear it
RETURN
