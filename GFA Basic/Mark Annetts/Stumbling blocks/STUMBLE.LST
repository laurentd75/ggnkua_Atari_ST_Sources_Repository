Dim Shape$(12,8),Mask$(12,8)
Dim Flip(8),Twist(8),Rotate_right(8),Rotate_left(8)
Clean_up=Fre(Dummy)
'
'        <<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>
'        <<                                                >>
'        << PENTA-SQUARES Begun on the 26th September 1987 >>
'        <<                                                >>
'        << Changed to Stumbling Blocks 28th November 1987 >>
'        <<                                                >>
'        <<     512k version finished 5th December 1987    >>
'        <<                                                >>
'        <<              By Mark Annetts                   >>
'        <<      Copyright 1989 Antic Publishing           >>
'        <<                                                >>
'        <<      Deprotected version 3rd March 1989        >>
'        <<                                                >>
'        <<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>
'
@Start_up_1                             ! Set up alternate screens
'
Rez=Xbios(4)                            ! Make sure we are
If Rez<>0                               !     in low
  @Not_low                              !   resolution
Endif                                   !      only
'
If Exist("*.*")
Endif
@Check_for_files
@Save_pal
@Title_loader                           ! Put pretty piccy on screen
@Start_up_2                             ! Get everything off the disk
@Initialise_arrays                      ! set up flip, twist & rotate arrays
@Initialise_squares                     ! Set all shapes to No 1
'
@Put_squares_on_screen                  ! Put all shapes in their boxes
'
Bmove Screen0%,Screen1%,32000           !  Show screen
Void Xbios(5,L:Screen1%,L:Screen1%,-1)  !    at last
Defmouse 0
'                           ________________________
Do           !   -------===< | START OF MAIN LOOP | >===-------
  '                         ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ
  @Check_completed
  '
  Do
    Pause 5
    Key$=Inkey$
    Mouse A,B,C
    Exit If C=1 Or C=2
    Exit If Key$="Q" Or Key$="q"
  Loop
  '
  If Key$="q" Or Key$="Q"
    Alert 2," | Are you sure| you want to go?",1," Quit | Stay ",What
    If What=1
      Void Xbios(5,L:Oscreen%,L:Oscreen%,-1)
      @Restore_pal
      End
    Else
    Endif
  Endif
  '
  ' *************************** READ BUTTONS *********************************
  '
  If (A>271 And B>68) And (A<314 And B<84)
    If Square_lit=True
      Put 271,70,Happy$,3
      Pause 5
      Square_lit=False
      Gosub Replace_square(Squarea,Squareb)
      Put 271,70,Happy1$,3
    Endif
  Endif
  '
  If (A>271 And B>45) And (A<314 And B<60)
    If Square_lit=True
      Put 271,45,Twist$,3
      Pause 5
      Y=Twist(Y)
      Gosub Determine_present_twist
      Gosub Replace_square(Squarea,Squareb)
      Put 271,45,Twist1$,3
    Endif
  Endif
  '
  If (A>271 And B>24) And (A<314 And B<38)
    If Square_lit=True
      Put 271,24,Flip$,3
      Pause 5
      Y=Flip(Y)
      Gosub Determine_present_flip
      Gosub Replace_square(Squarea,Squareb)
      Put 271,24,Flip1$,3
    Endif
  Endif
  '
  If (A>271 And B>2) And (A<314 And B<16)
    If Square_lit=True
      Put 271,2,Rotate$,3
      Pause 5
      Gosub Determine_present_rotation
      Gosub Replace_square(Squarea,Squareb)
      Put 271,2,Rotate1$,3
    Endif
  Endif
  '
  ' *************************** READ GRID BUTTONS ****************************
  '
  If (A>4 And B>2) And (A<47 And B<12)
    Put 4,2,B320$,3
    Pause 5
    Put 4,2,B3201$,3
    Alert 2," Are you sure ?| | This will reset the| present game !!",1," Do it | Cancel ",Z
    If Z=1
      Grid=1
      Void Xbios(5,L:Screen0%,L:-1,-1)
      Sput Blank$
      Put 73,0,Title_horiz$,3
      Put 58,41,Grid320$,3
      Gosub Put_squares_on_screen
      Gosub Initialise_squares
      Gosub Make_false
    Endif
  Endif
  '
  If (A>4 And B>20) And (A<47 And B<30)
    Put 4,20,B415$,3
    Pause 5
    Put 4,20,B4151$,3
    Alert 2," Are you sure ?| | This will reset the| present game !!",1," Do it | Cancel ",Z
    If Z=1
      Grid=2
      Void Xbios(5,L:Screen0%,L:-1,-1)
      Sput Blank$
      Put 73,0,Title_horiz$,3
      Put 84,36,Grid415$,3
      Gosub Put_squares_on_screen
      Gosub Initialise_squares
      Gosub Make_false
    Endif
  Endif
  '
  If (A>4 And B>38) And (A<47 And B<48)
    Put 4,38,B512$,3
    Pause 5
    Put 4,38,B5121$,3
    Alert 2," Are you sure ?| | This will reset the| present game !!",1," Do it | Cancel ",Z
    If Z=1
      Grid=3
      Void Xbios(5,L:Screen0%,L:-1,-1)
      Sput Blank$
      Put 73,0,Title_horiz$,3
      Put 98,30,Grid512$,3
      Gosub Put_squares_on_screen
      Gosub Initialise_squares
      Gosub Make_false
    Endif
  Endif
  '
  If (A>4 And B>57) And (A<47 And B<67)
    Put 4,57,B610$,3
    Pause 5
    Put 4,57,B6101$,3
    Alert 2," Are you sure ?| | This will reset the| present game !!",1," Do it | Cancel ",Z
    If Z=1
      Grid=4
      Void Xbios(5,L:Screen0%,L:-1,-1)
      Sput Blank$
      Put 73,0,Title_horiz$,3
      Put 108,25,Grid610$,3
      Gosub Put_squares_on_screen
      Gosub Initialise_squares
      Gosub Make_false
    Endif
  Endif
  '
  If (A>4 And B>75) And (A<47 And B<85)
    Put 4,75,B88$,3
    Pause 5
    Put 4,75,B881$,3
    Alert 2," Are you sure ?| | This will reset the| present game !!",1," Do it | Cancel ",Z
    If Z=1
      Grid=5
      Black_bits=0
      Void Xbios(5,L:Screen0%,L:-1,-1)
      Sput Blank$
      Put 220,0,Title_virt$,3
      Put 75,6,Which_88$,3
      Put 118,4,Grid88$,3
      Gosub Put_squares_on_screen
      Gosub Initialise_squares
      Gosub Make_false
    Endif
  Endif
  '
  If Grid=5
    If (A>75 And B>6) And (A<91 And B<22)
      Alert 2," Are you sure ?| | This will reset the| present game !!",1," Do it | Cancel ",Z
      If Z=1
        Grid=5
        Black_bits=1
        Void Xbios(5,L:Screen0%,L:-1,-1)
        Sput Blank$
        Put 220,0,Title_virt$,3
        Put 75,6,Which_88$,3
        Put 118,4,Grid88$,3
        Deffill 1,2,8
        Fill 121,7
        Fill 191,7
        Fill 121,77
        Fill 191,77
        Gosub Put_squares_on_screen
        Gosub Initialise_squares
        Gosub Make_false
      Endif
    Endif
  Endif
  '
  If Grid=5
    If (A>75 And B>27) And (A<91 And B<43)
      Alert 2," Are you sure ?| | This will reset the| present game !!",1," Do it | Cancel ",Z
      If Z=1
        Grid=5
        Black_bits=2
        Void Xbios(5,L:Screen0%,L:-1,-1)
        Sput Blank$
        Put 220,0,Title_virt$,3
        Put 75,6,Which_88$,3
        Put 118,4,Grid88$,3
        Deffill 1,2,8
        Fill 131,17
        Fill 181,17
        Fill 131,67
        Fill 181,67
        Gosub Put_squares_on_screen
        Gosub Initialise_squares
        Gosub Make_false
      Endif
    Endif
  Endif
  '
  If Grid=5
    If (A>75 And B>48) And (A<91 And B<64)
      Alert 2," Are you sure ?| | This will reset the| present game !!",1," Do it | Cancel ",Z
      If Z=1
        Grid=5
        Black_bits=3
        Void Xbios(5,L:Screen0%,L:-1,-1)
        Sput Blank$
        Put 220,0,Title_virt$,3
        Put 75,6,Which_88$,3
        Put 118,4,Grid88$,3
        Deffill 1,2,8
        Fill 141,27
        Fill 171,27
        Fill 141,57
        Fill 171,57
        Gosub Put_squares_on_screen
        Gosub Initialise_squares
        Gosub Make_false
      Endif
    Endif
  Endif
  '
  If Grid=5
    If (A>75 And B>69) And (A<91 And B<85)
      Alert 2," Are you sure ?| | This will reset the| present game !!",1," Do it | Cancel ",Z
      If Z=1
        Grid=5
        Black_bits=4
        Void Xbios(5,L:Screen0%,L:-1,-1)
        Sput Blank$
        Put 220,0,Title_virt$,3
        Put 75,6,Which_88$,3
        Put 118,4,Grid88$,3
        Deffill 1,2,8
        Fill 151,37
        Fill 161,37
        Fill 151,47
        Fill 161,47
        Gosub Put_squares_on_screen
        Gosub Initialise_squares
        Gosub Make_false
      Endif
    Endif
  Endif
  '
  ' **************************** READ SQUARES ********************************
  '
  If (A>0 And B>92) And (A<53 And B<145)
    If Square_lit=False
      Tempza=0
      Tempzb=92
      Squarea=0
      Squareb=92
      X=3
      Y=Present_z
      If Used_z=False
        If C=2
          Square_lit=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Deffill 1,0,0
          Pbox 0,92,53,145
          Gosub Replace_square(Tempza,Tempzb)
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
        Endif
        If C=1
          Pause 5
          Used_z=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Put 0,92,Blanksquare$,3
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
          Gosub Make_it_move(X,Present_z)
        Endif
      Endif
    Endif
  Endif
  '
  If (A>53 And B>92) And (A<106 And B<145)
    If Square_lit=False
      Tempua=53
      Tempub=92
      Squarea=53
      Squareb=92
      X=2
      Y=Present_u
      If Used_u=False
        If C=2
          Square_lit=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Deffill 1,0,0
          Pbox 53,92,106,145
          Gosub Replace_square(Tempua,Tempub)
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
        Endif
        If C=1
          Pause 5
          Used_u=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Put 53,92,Blanksquare$,3
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
          Gosub Make_it_move(X,Present_u)
        Endif
      Endif
    Endif
  Endif
  '
  If (A>106 And B>92) And (A<159 And B<145)
    If Square_lit=False
      Temppa=106
      Temppb=92
      Squarea=106
      Squareb=92
      X=4
      Y=Present_p
      If Used_p=False
        If C=2
          Square_lit=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Deffill 1,0,0
          Pbox 106,92,159,145
          Gosub Replace_square(Temppa,Temppb)
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
        Endif
        If C=1
          Pause 5
          Used_p=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Put 106,92,Blanksquare$,3
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
          Gosub Make_it_move(X,Present_p)
        Endif
      Endif
    Endif
  Endif
  '
  If (A>159 And B>92) And (A<212 And B<145)
    If Square_lit=False
      Tempwa=159
      Tempwb=92
      Squarea=159
      Squareb=92
      X=5
      Y=Present_w
      If Used_w=False
        If C=2
          Square_lit=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Deffill 1,0,0
          Pbox 159,92,212,145
          Gosub Replace_square(Tempwa,Tempwb)
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
        Endif
        If C=1
          Pause 5
          Used_w=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Put 159,92,Blanksquare$,3
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
          Gosub Make_it_move(X,Present_w)
        Endif
      Endif
    Endif
  Endif
  '
  If (A>212 And B>92) And (A<265 And B<145)
    If Square_lit=False
      Tempxa=212
      Tempxb=92
      Squarea=212
      Squareb=92
      X=7
      Y=Present_x
      If Used_x=False
        If C=2
          Square_lit=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Deffill 1,0,0
          Pbox 212,92,265,145
          Gosub Replace_square(Tempxa,Tempxb)
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
        Endif
        If C=1
          Pause 5
          Used_x=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Put 212,92,Blanksquare$,3
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
          Gosub Make_it_move(X,Present_x)
        Endif
      Endif
    Endif
  Endif
  '
  If (A>265 And B>92) And (A<318 And B<145)
    If Square_lit=False
      Tempta=265
      Temptb=92
      Squarea=265
      Squareb=92
      X=1
      Y=Present_t
      If Used_t=False
        If C=2
          Square_lit=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Deffill 1,0,0
          Pbox 265,92,318,145
          Gosub Replace_square(Tempta,Temptb)
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
        Endif
        If C=1
          Pause 5
          Used_t=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Put 265,92,Blanksquare$,3
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
          Gosub Make_it_move(X,Present_t)
        Endif
      Endif
    Endif
  Endif
  '
  If (A>0 And B>145) And (A<53 And B<198)
    If Square_lit=False
      Tempva=0
      Tempvb=145
      Squarea=0
      Squareb=145
      X=6
      Y=Present_v
      If Used_v=False
        If C=2
          Square_lit=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Deffill 1,0,0
          Pbox 0,145,53,198
          Gosub Replace_square(Tempva,Tempvb)
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
        Endif
        If C=1
          Pause 5
          Used_v=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Put 0,145,Blanksquare$,3
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
          Gosub Make_it_move(X,Present_v)
        Endif
      Endif
    Endif
  Endif
  '
  If (A>53 And B>145) And (A<106 And B<198)
    If Square_lit=False
      Templa=53
      Templb=145
      Squarea=53
      Squareb=145
      X=10
      Y=Present_l
      If Used_l=False
        If C=2
          Square_lit=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Deffill 1,0,0
          Pbox 53,145,106,198
          Gosub Replace_square(Templa,Templb)
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
        Endif
        If C=1
          Pause 5
          Used_l=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Put 53,145,Blanksquare$,3
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
          Gosub Make_it_move(X,Present_l)
        Endif
      Endif
    Endif
  Endif
  '
  If (A>106 And B>145) And (A<159 And B<198)
    If Square_lit=False
      Tempia=106
      Tempib=145
      Squarea=106
      Squareb=145
      X=12
      Y=Present_i
      If Used_i=False
        If C=2
          Square_lit=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Deffill 1,0,0
          Pbox 106,145,159,198
          Gosub Replace_square(Tempia,Tempib)
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
        Endif
        If C=1
          Pause 5
          Used_i=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Put 106,145,Blanksquare$,3
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
          Gosub Make_it_move(X,Present_i)
        Endif
      Endif
    Endif
  Endif
  '
  If (A>159 And B>145) And (A<212 And B<198)
    If Square_lit=False
      Tempya=159
      Tempyb=145
      Squarea=159
      Squareb=145
      X=9
      Y=Present_y
      If Used_y=False
        If C=2
          Square_lit=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Deffill 1,0,0
          Pbox 159,145,212,198
          Gosub Replace_square(Tempya,Tempyb)
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
        Endif
        If C=1
          Pause 5
          Used_y=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Put 159,145,Blanksquare$,3
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
          Gosub Make_it_move(X,Present_y)
        Endif
      Endif
    Endif
  Endif
  '
  If (A>212 And B>145) And (A<265 And B<198)
    If Square_lit=False
      Tempsa=212
      Tempsb=145
      Squarea=212
      Squareb=145
      X=11
      Y=Present_s
      If Used_s=False
        If C=2
          Square_lit=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Deffill 1,0,0
          Pbox 212,145,265,198
          Gosub Replace_square(Tempsa,Tempsb)
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
        Endif
        If C=1
          Pause 5
          Used_s=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Put 212,145,Blanksquare$,3
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
          Gosub Make_it_move(X,Present_s)
        Endif
      Endif
    Endif
  Endif
  '
  If (A>265 And B>145) And (A<318 And B<198)
    If Square_lit=False
      Tempfa=265
      Tempfb=145
      Squarea=265
      Squareb=145
      X=8
      Y=Present_f
      If Used_f=False
        If C=2
          Square_lit=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Deffill 1,0,0
          Pbox 265,145,318,198
          Gosub Replace_square(Tempfa,Tempfb)
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
        Endif
        If C=1
          Pause 5
          Used_f=True
          Void Xbios(5,L:Screen0%,L:-1,-1)
          Put 265,145,Blanksquare$,3
          Bmove Screen0%,Screen1%,32000
          Void Xbios(5,L:Screen1%,L:Screen1%,-1)
          Gosub Make_it_move(X,Present_f)
        Endif
      Endif
    Endif
  Endif
  '
  If Grid<>5
    If C=2 And (A>55 And A<265) And (B>24 And B<92)
      If Square_lit=False
        '
        Present_colour=Point(A,B)
        Gosub Which_shape(Present_colour)
        '
      Endif
    Endif
  Endif
  '
  If Grid=5
    If C=2 And (A>100 And A<210) And (B>0 And B<92)
      If Square_lit=False
        '
        Present_colour=Point(A,B)
        Gosub Which_shape(Present_colour)
        '
      Endif
    Endif
  Endif
  '                         ______________________
Loop             ! -----===< | END OF MAIN LOOP | >===-------
'                           ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ
' ****************************************************************************
'
Procedure Make_it_move(X,Y)
  Hidem
  Do
    '
    Bmove Screen0%,Screen2%,32000
    Void Xbios(5,L:Screen2%,L:-1,-1)
    Mouse A1,B1,C1
    Put A1-10,B1-10,Mask$(X,Y),4
    Vsync
    Put A1-10,B1-10,Shape$(X,Y),6
    Void Xbios(5,L:Screen2%,L:Screen2%,-1)
    '
    Bmove Screen0%,Screen1%,32000
    Void Xbios(5,L:Screen1%,L:-1,-1)
    Mouse A,B,C
    Put A-10,B-10,Mask$(X,Y),4
    Vsync
    Put A-10,B-10,Shape$(X,Y),6
    Void Xbios(5,L:Screen1%,L:Screen1%,-1)
    '
    Exit If C=1
  Loop
  Gosub Where_is_it(Squarea,Squareb)
  Showm
Return
' -----------------------------------------------------------------------------
Procedure Initialise_squares
  '
  Present_t=1
  Present_u=1
  Present_z=1
  Present_p=1
  Present_w=1
  Present_v=1
  Present_x=1
  Present_f=1
  Present_y=1
  Present_l=1
  Present_s=1
  Present_i=1
  '
Return
' -----------------------------------------------------------------------------
Procedure Put_squares_on_screen
  '
  Void Xbios(5,L:Screen0%,L:-1,-1)
  Put 13,105,Mask$(3,1),4
  Put 13,105,Shape$(3,1),6
  '
  Put 71,105,Mask$(2,1),4
  Put 71,105,Shape$(2,1),6
  '
  Put 124,105,Mask$(4,1),4
  Put 124,105,Shape$(4,1),6
  '
  Put 172,105,Mask$(5,1),4
  Put 172,105,Shape$(5,1),6
  '
  Put 225,105,Mask$(7,1),4
  Put 225,105,Shape$(7,1),6
  '
  Put 279,105,Mask$(1,1),4
  Put 279,105,Shape$(1,1),6
  '
  Put 13,159,Mask$(6,1),4
  Put 13,159,Shape$(6,1),6
  '
  Put 72,154,Mask$(10,1),4
  Put 72,154,Shape$(10,1),6
  '
  Put 109,167,Mask$(12,1),4
  Put 109,167,Shape$(12,1),6
  '
  Put 178,154,Mask$(9,1),4
  Put 178,154,Shape$(9,1),6
  '
  Put 230,154,Mask$(11,1),4
  Put 230,154,Shape$(11,1),6
  '
  Put 279,160,Mask$(8,1),4
  Put 279,160,Shape$(8,1),6
  '
  Bmove Screen0%,Screen1%,32000
  Void Xbios(5,L:Screen1%,L:Screen1%,-1)
  '
Return
' -----------------------------------------------------------------------------
Procedure Replace_square(Tempa,Tempb)
  '
  Void Xbios(5,L:Screen0%,L:-1,-1)
  '
  If Square_lit=True
    Put Tempa+1,Tempb+1,Hole$,3
  Endif
  '
  If Square_lit=False
    Put Tempa,Tempb,Blanksquare$,3
  Endif
  '
  If X=3 Or X=5 Or X=7 Or X=1 Or X=8 Or X=6
    Put Tempa+13,Tempb+12,Mask$(X,Y),4
    Put Tempa+13,Tempb+12,Shape$(X,Y),6
  Endif
  '
  If (X=4 Or X=2) And Odd(Y)
    Put Tempa+18,Tempb+13,Mask$(X,Y),4
    Put Tempa+18,Tempb+13,Shape$(X,Y),6
  Endif
  '
  If (X=4 Or X=2) And Even(Y)
    Put Tempa+13,Tempb+18,Mask$(X,Y),4
    Put Tempa+13,Tempb+18,Shape$(X,Y),6
  Endif
  '
  If (X=10 Or X=9 Or X=11) And Odd(Y)
    Put Tempa+18,Tempb+8,Mask$(X,Y),4
    Put Tempa+18,Tempb+8,Shape$(X,Y),6
  Endif
  '
  If (X=10 Or X=9 Or X=11) And Even(Y)
    Put Tempa+8,Tempb+18,Mask$(X,Y),4
    Put Tempa+8,Tempb+18,Shape$(X,Y),6
  Endif
  '
  If X=12 And Even(Y)
    Put Tempa+24,Tempb+3,Mask$(X,Y),4
    Put Tempa+24,Tempb+3,Shape$(X,Y),6
  Endif
  '
  If X=12 And Odd(Y)
    Put Tempa+3,Tempb+24,Mask$(X,Y),4
    Put Tempa+3,Tempb+24,Shape$(X,Y),6
  Endif
  '
  Bmove Screen0%,Screen1%,32000
  Void Xbios(5,L:Screen1%,L:Screen1%,-1)
  '
Return
' -----------------------------------------------------------------------------
Procedure Determine_present_rotation
  '
  If C=2
    If X=1
      Present_t=Rotate_right(Present_t)
      Y=Present_t
    Endif
    '
    If X=2
      Present_u=Rotate_right(Present_u)
      Y=Present_u
    Endif
    '
    If X=3
      Present_z=Rotate_right(Present_z)
      Y=Present_z
    Endif
    '
    If X=4
      Present_p=Rotate_right(Present_p)
      Y=Present_p
    Endif
    '
    If X=5
      Present_w=Rotate_right(Present_w)
      Y=Present_w
    Endif
    '
    If X=6
      Present_v=Rotate_right(Present_v)
      Y=Present_v
    Endif
    '
    If X=7
      Present_x=Rotate_right(Present_x)
      Y=Present_x
    Endif
    '
    If X=8
      Present_f=Rotate_right(Present_f)
      Y=Present_f
    Endif
    '
    If X=9
      Present_y=Rotate_right(Present_y)
      Y=Present_y
    Endif
    '
    If X=10
      Present_l=Rotate_right(Present_l)
      Y=Present_l
    Endif
    '
    If X=11
      Present_s=Rotate_right(Present_s)
      Y=Present_s
    Endif
    '
    If X=12
      Present_i=Rotate_right(Present_i)
      Y=Present_i
    Endif
  Endif
  '
  If C=1
    If X=1
      Present_t=Rotate_left(Present_t)
      Y=Present_t
    Endif
    '
    If X=2
      Present_u=Rotate_left(Present_u)
      Y=Present_u
    Endif
    '
    If X=3
      Present_z=Rotate_left(Present_z)
      Y=Present_z
    Endif
    '
    If X=4
      Present_p=Rotate_left(Present_p)
      Y=Present_p
    Endif
    '
    If X=5
      Present_w=Rotate_left(Present_w)
      Y=Present_w
    Endif
    '
    If X=6
      Present_v=Rotate_left(Present_v)
      Y=Present_v
    Endif
    '
    If X=7
      Present_x=Rotate_left(Present_x)
      Y=Present_x
    Endif
    '
    If X=8
      Present_f=Rotate_left(Present_f)
      Y=Present_f
    Endif
    '
    If X=9
      Present_y=Rotate_left(Present_y)
      Y=Present_y
    Endif
    '
    If X=10
      Present_l=Rotate_left(Present_l)
      Y=Present_l
    Endif
    '
    If X=11
      Present_s=Rotate_left(Present_s)
      Y=Present_s
    Endif
    '
    If X=12
      Present_i=Rotate_left(Present_i)
      Y=Present_i
    Endif
  Endif
Return
' -----------------------------------------------------------------------------
Procedure Make_false
  '
  Y=1
  Square_lit=False
  Used_t=False
  Used_u=False
  Used_z=False
  Used_p=False
  Used_w=False
  Used_v=False
  Used_x=False
  Used_f=False
  Used_y=False
  Used_l=False
  Used_s=False
  Used_i=False
  '
Return
' -----------------------------------------------------------------------------
Procedure Initialise_arrays
  '
  Restore Arraydata
  For I%=1 To 8
    Read Flip(I%)
  Next I%
  For I%=1 To 8
    Read Twist(I%)
  Next I%
  For I%=1 To 8
    Read Rotate_right(I%)
  Next I%
  For I%=1 To 8
    Read Rotate_left(I%)
  Next I%
  Arraydata:
  Data 7,6,5,8,3,2,1,4
  Data 5,8,7,6,1,4,3,2
  Data 2,3,4,1,6,7,8,5
  Data 4,1,2,3,8,5,6,7
  '
Return
'
' -----------------------------------------------------------------------------
'
Procedure Determine_present_flip
  '
  If X=1
    Present_t=Flip(Present_t)
    Y=Present_t
  Endif
  '
  If X=2
    Present_u=Flip(Present_u)
    Y=Present_u
  Endif
  '
  If X=3
    Present_z=Flip(Present_z)
    Y=Present_z
  Endif
  '
  If X=4
    Present_p=Flip(Present_p)
    Y=Present_p
  Endif
  '
  If X=5
    Present_w=Flip(Present_w)
    Y=Present_w
  Endif
  '
  If X=6
    Present_v=Flip(Present_v)
    Y=Present_v
  Endif
  '
  If X=7
    Present_x=Flip(Present_x)
    Y=Present_x
  Endif
  '
  If X=8
    Present_f=Flip(Present_f)
    Y=Present_f
  Endif
  '
  If X=9
    Present_y=Flip(Present_y)
    Y=Present_y
  Endif
  '
  If X=10
    Present_l=Flip(Present_l)
    Y=Present_l
  Endif
  '
  If X=11
    Present_s=Flip(Present_s)
    Y=Present_s
  Endif
  '
  If X=12
    Present_i=Flip(Present_i)
    Y=Present_i
  Endif
  '
Return
' -----------------------------------------------------------------------------
Procedure Determine_present_twist
  '
  If X=1
    Present_t=Twist(Present_t)
    Y=Present_t
  Endif
  '
  If X=2
    Present_u=Twist(Present_u)
    Y=Present_u
  Endif
  '
  If X=3
    Present_z=Twist(Present_z)
    Y=Present_z
  Endif
  '
  If X=4
    Present_p=Twist(Present_p)
    Y=Present_p
  Endif
  '
  If X=5
    Present_w=Twist(Present_w)
    Y=Present_w
  Endif
  '
  If X=6
    Present_v=Twist(Present_v)
    Y=Present_v
  Endif
  '
  If X=7
    Present_x=Twist(Present_x)
    Y=Present_x
  Endif
  '
  If X=8
    Present_f=Twist(Present_f)
    Y=Present_f
  Endif
  '
  If X=9
    Present_y=Twist(Present_y)
    Y=Present_y
  Endif
  '
  If X=10
    Present_l=Twist(Present_l)
    Y=Present_l
  Endif
  '
  If X=11
    Present_s=Twist(Present_s)
    Y=Present_s
  Endif
  '
  If X=12
    Present_i=Twist(Present_i)
    Y=Present_i
  Endif
  '
Return
' -----------------------------------------------------------------------------
Procedure Where_is_it(Squarea,Squareb)
  '
  If Grid=1
    If X=3 Or X=5 Or X=7 Or X=1 Or X=8 Or X=6
      If (A>64 And B>48) And (A<246 And B<59)
        Gosub Snap_320
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=4 Or X=2) And Odd(Y)
      If (A>64 And B>48) And (A<256 And B<59)
        Gosub Snap_320
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=4 Or X=2) And Even(Y)
      If (A>64 And B>48) And (A<246 And B<69)
        Gosub Snap_320
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=10 Or X=9 Or X=11) And Even(Y)
      If (A>64 And B>48) And (A<236 And B<69)
        Gosub Snap_320
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=10 Or X=9 Or X=11) And Odd(Y)
      Gosub Replace_square(Squarea,Squareb)
      Gosub Which_false
    Endif
    '
    If X=12 And Odd(Y)
      If (A>64 And B>48) And (A<226 And B<79)
        Gosub Snap_320
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If X=12 And Even(Y)
      Gosub Replace_square(Squarea,Squareb)
      Gosub Which_false
    Endif
    '
  Endif
  '
  If Grid=2
    If X=3 Or X=5 Or X=7 Or X=1 Or X=8 Or X=6
      If (A>90 And B>42) And (A<222 And B<64)
        Gosub Snap_415
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=4 Or X=2) And Odd(Y)
      If (A>90 And B>42) And (A<232 And B<64)
        Gosub Snap_415
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=4 Or X=2) And Even(Y)
      If (A>90 And B>42) And (A<222 And B<74)
        Gosub Snap_415
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=10 Or X=9 Or X=11) And Even(Y)
      If (A>90 And B>42) And (A<212 And B<74)
        Gosub Snap_415
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=10 Or X=9 Or X=11) And Odd(Y)
      If (A>90 And B>42) And (A<232 And B<54)
        Gosub Snap_415
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If X=12 And Odd(Y)
      If (A>90 And B>42) And (A<202 And B<84)
        Gosub Snap_415
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If X=12 And Even(Y)
      Gosub Replace_square(Squarea,Squareb)
      Gosub Which_false
    Endif
    '
  Endif
  '
  If Grid=3
    If X=3 Or X=5 Or X=7 Or X=1 Or X=8 Or X=6
      If (A>104 And B>36) And (A<206 And B<68)
        Gosub Snap_512
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=4 Or X=2) And Odd(Y)
      If (A>104 And B>36) And (A<217 And B<68)
        Gosub Snap_512
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=4 Or X=2) And Even(Y)
      If (A>104 And B>36) And (A<206 And B<78)
        Gosub Snap_512
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=10 Or X=9 Or X=11) And Even(Y)
      If (A>104 And B>36) And (A<196 And B<78)
        Gosub Snap_512
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=10 Or X=9 Or X=11) And Odd(Y)
      If (A>104 And B>36) And (A<216 And B<58)
        Gosub Snap_512
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If X=12 And Odd(Y)
      If (A>104 And B>36) And (A<186 And B<88)
        Gosub Snap_512
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If X=12 And Even(Y)
      If (A>104 And B>36) And (A<226 And B<48)
        Gosub Snap_512
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
  Endif
  '
  If Grid=4
    If X=3 Or X=5 Or X=7 Or X=1 Or X=8 Or X=6
      If (A>114 And B>31) And (A<196 And B<73)
        Gosub Snap_610
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=4 Or X=2) And Odd(Y)
      If (A>114 And B>31) And (A<206 And B<73)
        Gosub Snap_610
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=4 Or X=2) And Even(Y)
      If (A>114 And B>31) And (A<196 And B<83)
        Gosub Snap_610
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=10 Or X=9 Or X=11) And Even(Y)
      If (A>114 And B>31) And (A<186 And B<83)
        Gosub Snap_610
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=10 Or X=9 Or X=11) And Odd(Y)
      If (A>114 And B>31) And (A<206 And B<63)
        Gosub Snap_610
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If X=12 And Odd(Y)
      If (A>114 And B>31) And (A<176 And B<93)
        Gosub Snap_610
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If X=12 And Even(Y)
      If (A>114 And B>31) And (A<216 And B<53)
        Gosub Snap_610
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
  Endif
  '
  If Grid=5
    If X=3 Or X=5 Or X=7 Or X=1 Or X=8 Or X=6
      If (A>124 And B>10) And (A<186 And B<72)
        Gosub Snap_88
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=4 Or X=2) And Odd(Y)
      If (A>124 And B>10) And (A<196 And B<72)
        Gosub Snap_88
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=4 Or X=2) And Even(Y)
      If (A>124 And B>10) And (A<186 And B<82)
        Gosub Snap_88
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=10 Or X=9 Or X=11) And Even(Y)
      If (A>124 And B>10) And (A<176 And B<82)
        Gosub Snap_88
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If (X=10 Or X=9 Or X=11) And Odd(Y)
      If (A>124 And B>10) And (A<196 And B<62)
        Gosub Snap_88
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If X=12 And Odd(Y)
      If (A>124 And B>10) And (A<166 And B<92)
        Gosub Snap_88
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
    If X=12 And Even(Y)
      If (A>124 And B>10) And (A<206 And B<52)
        Gosub Snap_88
      Else
        Gosub Replace_square(Squarea,Squareb)
        Gosub Which_false
      Endif
    Endif
    '
  Endif
  '
Return
'
' -----------------------------------------------------------------------------
'
Procedure Snap_320
  '
  Void Xbios(5,L:Screen0%,L:-1,-1)
  '
  If A=>65 And A=<75
    A=70
  Endif
  '
  If A=>75 And A=<85
    A=80
  Endif
  '
  If A=>85 And A=<95
    A=90
  Endif
  '
  If A=>95 And A=<105
    A=100
  Endif
  '
  If A=>105 And A=<115
    A=110
  Endif
  '
  If A=>115 And A=<125
    A=120
  Endif
  '
  If A=>125 And A=<135
    A=130
  Endif
  '
  If A=>135 And A=<145
    A=140
  Endif
  '
  If A=>145 And A=<155
    A=150
  Endif
  '
  If A=>155 And A=<165
    A=160
  Endif
  '
  If A=>165 And A=<175
    A=170
  Endif
  '
  If A=>175 And A=<185
    A=180
  Endif
  '
  If A=>185 And A=<195
    A=190
  Endif
  '
  If A=>195 And A=<205
    A=200
  Endif
  '
  If A=>205 And A=<215
    A=210
  Endif
  '
  If A=>215 And A=<225
    A=220
  Endif
  '
  If A=>225 And A=<235
    A=230
  Endif
  '
  If A=>235 And A=<245
    A=240
  Endif
  '
  If A=>245 And A=<255
    A=250
  Endif
  '
  If A=>255 And A=<265
    A=260
  Endif
  '
  If B=>48 And B=<58
    B=53
  Endif
  '
  If B=>58 And B=<68
    B=63
  Endif
  '
  If B=>68 And B=<78
    B=73
  Endif
  '
  Gosub Set_square
  '
  Put A-10,B-10,Mask$(X,Y),4
  Put A-10,B-10,Shape$(X,Y),6
  '
  Bmove Screen0%,Screen1%,32000
  Void Xbios(5,L:Screen1%,L:Screen1%,-1)
  '
Return
' -----------------------------------------------------------------------------
Procedure Snap_415
  '
  Void Xbios(5,L:Screen0%,L:-1,-1)
  '
  If A=>91 And A=<101
    A=96
  Endif
  '
  If A=>101 And A=<111
    A=106
  Endif
  '
  If A=>111 And A=<121
    A=116
  Endif
  '
  If A=>121 And A=<131
    A=126
  Endif
  '
  If A=>131 And A=<141
    A=136
  Endif
  '
  If A=>141 And A=<151
    A=146
  Endif
  '
  If A=>151 And A=<161
    A=156
  Endif
  '
  If A=>161 And A=<171
    A=166
  Endif
  '
  If A=>171 And A=<181
    A=176
  Endif
  '
  If A=>181 And A=<191
    A=186
  Endif
  '
  If A=>191 And A=<201
    A=196
  Endif
  '
  If A=>201 And A=<211
    A=206
  Endif
  '
  If A=>211 And A=<221
    A=216
  Endif
  '
  If A=>221 And A=<231
    A=226
  Endif
  '
  If A=>231 And A=<241
    A=236
  Endif
  '
  If B=>43 And B=<53
    B=48
  Endif
  '
  If B=>53 And B=<63
    B=58
  Endif
  '
  If B=>63 And B=<73
    B=68
  Endif
  '
  If B=>73 And B=<83
    B=78
  Endif
  '
  Gosub Set_square
  '
  Put A-10,B-10,Mask$(X,Y),4
  Put A-10,B-10,Shape$(X,Y),6
  '
  Bmove Screen0%,Screen1%,32000
  Void Xbios(5,L:Screen1%,L:Screen1%,-1)
  '
Return
' -----------------------------------------------------------------------------
Procedure Snap_512
  '
  Void Xbios(5,L:Screen0%,L:-1,-1)
  '
  If A=>105 And A=<115
    A=110
  Endif
  '
  If A=>115 And A=<125
    A=120
  Endif
  '
  If A=>125 And A=<135
    A=130
  Endif
  '
  If A=>135 And A=<145
    A=140
  Endif
  '
  If A=>145 And A=<155
    A=150
  Endif
  '
  If A=>155 And A=<165
    A=160
  Endif
  '
  If A=>165 And A=<175
    A=170
  Endif
  '
  If A=>175 And A=<185
    A=180
  Endif
  '
  If A=>185 And A=<195
    A=190
  Endif
  '
  If A=>195 And A=<205
    A=200
  Endif
  '
  If A=>205 And A=<215
    A=210
  Endif
  '
  If A=>215 And A=<225
    A=220
  Endif
  '
  If B=>37 And B=<47
    B=42
  Endif
  '
  If B=>47 And B=<57
    B=52
  Endif
  '
  If B=>57 And B=<67
    B=62
  Endif
  '
  If B=>67 And B=<77
    B=72
  Endif
  '
  If B=>77 And B=<87
    B=82
  Endif
  '
  Gosub Set_square
  '
  Put A-10,B-10,Mask$(X,Y),4
  Put A-10,B-10,Shape$(X,Y),6
  '
  Bmove Screen0%,Screen1%,32000
  Void Xbios(5,L:Screen1%,L:Screen1%,-1)
  '
Return
' -----------------------------------------------------------------------------
Procedure Snap_610
  '
  Void Xbios(5,L:Screen0%,L:-1,-1)
  '
  If A=>115 And A=<125
    A=120
  Endif
  '
  If A=>125 And A=<135
    A=130
  Endif
  '
  If A=>135 And A=<145
    A=140
  Endif
  '
  If A=>145 And A=<155
    A=150
  Endif
  '
  If A=>155 And A=<165
    A=160
  Endif
  '
  If A=>165 And A=<175
    A=170
  Endif
  '
  If A=>175 And A=<185
    A=180
  Endif
  '
  If A=>185 And A=<195
    A=190
  Endif
  '
  If A=>195 And A=<205
    A=200
  Endif
  '
  If A=>205 And A=<215
    A=210
  Endif
  '
  If B=>32 And B=<42
    B=37
  Endif
  '
  If B=>42 And B=<52
    B=47
  Endif
  '
  If B=>52 And B=<62
    B=57
  Endif
  '
  If B=>62 And B=<72
    B=67
  Endif
  '
  If B=>72 And B=<82
    B=77
  Endif
  '
  If B=>82 And B=<92
    B=87
  Endif
  '
  Gosub Set_square
  '
  Put A-10,B-10,Mask$(X,Y),4
  Put A-10,B-10,Shape$(X,Y),6
  '
  Bmove Screen0%,Screen1%,32000
  Void Xbios(5,L:Screen1%,L:Screen1%,-1)
  '
Return
' -----------------------------------------------------------------------------
Procedure Snap_88
  '
  Void Xbios(5,L:Screen0%,L:-1,-1)
  '
  If A=>125 And A=<135
    A=130
  Endif
  '
  If A=>135 And A=<145
    A=140
  Endif
  '
  If A=>145 And A=<155
    A=150
  Endif
  '
  If A=>155 And A=<165
    A=160
  Endif
  '
  If A=>165 And A=<175
    A=170
  Endif
  '
  If A=>175 And A=<185
    A=180
  Endif
  '
  If A=>185 And A=<195
    A=190
  Endif
  '
  If A=>195 And A=<205
    A=200
  Endif
  '
  If B=>3 And B=<13
    B=16
  Endif
  '
  If B=>13 And B=<23
    B=16
  Endif
  '
  If B=>23 And B=<33
    B=26
  Endif
  '
  If B=>33 And B=<43
    B=36
  Endif
  '
  If B=>43 And B=<53
    B=46
  Endif
  '
  If B=>53 And B=<63
    B=56
  Endif
  '
  If B=>63 And B=<73
    B=66
  Endif
  '
  If B=>73 And B=<83
    B=76
  Endif
  '
  If B=>83 And B=<93
    B=86
  Endif
  '
  Gosub Set_square
  '
  Put A-10,B-10,Mask$(X,Y),4
  Put A-10,B-10,Shape$(X,Y),6
  '
  Bmove Screen0%,Screen1%,32000
  Void Xbios(5,L:Screen1%,L:Screen1%,-1)
  '
Return
' -----------------------------------------------------------------------------
Procedure Which_false
  '
  If X=1
    Used_t=False
  Else
    If X=2
      Used_u=False
    Else
      If X=3
        Used_z=False
      Else
        If X=4
          Used_p=False
        Else
          If X=5
            Used_w=False
          Else
            If X=6
              Used_v=False
            Else
              If X=7
                Used_x=False
              Else
                If X=8
                  Used_f=False
                Else
                  If X=9
                    Used_y=False
                  Else
                    If X=10
                      Used_l=False
                    Else
                      If X=11
                        Used_s=False
                      Else
                        If X=12
                          Used_i=False
                        Endif
                      Endif
                    Endif
                  Endif
                Endif
              Endif
            Endif
          Endif
        Endif
      Endif
    Endif
  Endif
  '
Return
' -----------------------------------------------------------------------------
Procedure Start_up_1
  '
  Defmouse 2
  Amt%=32767
  Let Screen0$=String$(Amt%,0)
  Let Screen1$=String$(Amt%,0)
  Let Screen2$=String$(Amt%,0)
  Oscreen%=Xbios(2)
  '
  Screen0%=(Lpeek(Arrptr(Screen0$)) And &HFFFF00)+256  ! original screen
  Screen1%=(Lpeek(Arrptr(Screen1$)) And &HFFFF00)+256  ! screens 1&2 switch in
  Screen2%=(Lpeek(Arrptr(Screen2$)) And &HFFFF00)+256  ! and out of the display
  '
Return
' ----------------------------------------------------------------------------
Procedure Start_up_2
  '
  If Exist("*.*")
  Endif
  Bload "STUMGRID",Screen0%-34
  Void Xbios(5,L:Screen0%,L:-1,-1)
  Get 0,0,202,32,Grid320$
  Get 0,32,122,84,Grid512$
  Get 0,84,102,146,Grid610$
  Get 0,146,152,188,Grid415$
  Get 152,106,234,188,Grid88$
  Get 129,61,145,140,Which_88$
  Get 242,65,275,154,Title_virt$
  Get 125,35,298,56,Title_horiz$
  '
  Bload "MASK1",Screen0%-34
  '
  Get 0,0,28,28,Mask$(1,1)
  Get 30,0,58,28,Mask$(1,2)
  Get 60,0,88,28,Mask$(1,3)
  Get 90,0,118,28,Mask$(1,4)
  Get 120,0,148,28,Mask$(1,5)
  Get 150,0,178,28,Mask$(1,6)
  Get 180,0,208,28,Mask$(1,7)
  Get 210,0,238,28,Mask$(1,8)
  '
  Get 0,30,18,58,Mask$(2,1)
  Get 30,30,58,48,Mask$(2,2)
  Get 70,30,88,58,Mask$(2,3)
  Get 90,40,118,58,Mask$(2,4)
  Get 130,30,148,58,Mask$(2,5)
  Get 150,40,178,58,Mask$(2,6)
  Get 180,30,198,58,Mask$(2,7)
  Get 210,30,238,48,Mask$(2,8)
  '
  Get 0,60,28,88,Mask$(3,1)
  Get 30,60,58,88,Mask$(3,2)
  Get 60,60,88,88,Mask$(3,3)
  Get 90,60,118,88,Mask$(3,4)
  Get 120,60,148,88,Mask$(3,5)
  Get 150,60,178,88,Mask$(3,6)
  Get 180,60,208,88,Mask$(3,7)
  Get 210,60,238,88,Mask$(3,8)
  '
  Get 0,90,18,118,Mask$(4,1)
  Get 30,90,58,108,Mask$(4,2)
  Get 70,90,88,118,Mask$(4,3)
  Get 90,100,118,118,Mask$(4,4)
  Get 130,90,148,118,Mask$(4,5)
  Get 150,100,178,118,Mask$(4,6)
  Get 180,90,198,118,Mask$(4,7)
  Get 210,90,238,108,Mask$(4,8)
  '
  Get 0,120,28,148,Mask$(5,1)
  Get 30,120,58,148,Mask$(5,2)
  Get 60,120,88,148,Mask$(5,3)
  Get 90,120,118,148,Mask$(5,4)
  Get 120,120,148,148,Mask$(5,5)
  Get 150,120,178,148,Mask$(5,6)
  Get 180,120,208,148,Mask$(5,7)
  Get 210,120,238,148,Mask$(5,8)
  '
  Get 0,150,28,178,Mask$(6,1)
  Get 30,150,58,178,Mask$(6,2)
  Get 60,150,88,178,Mask$(6,3)
  Get 90,150,118,178,Mask$(6,4)
  Get 120,150,148,178,Mask$(6,5)
  Get 150,150,178,178,Mask$(6,6)
  Get 180,150,208,178,Mask$(6,7)
  Get 210,150,238,178,Mask$(6,8)
  '
  Bload "MASK2",Screen0%-34
  '
  Get 0,0,28,28,Mask$(7,1)
  Get 30,0,58,28,Mask$(7,2)
  Get 60,0,88,28,Mask$(7,3)
  Get 90,0,118,28,Mask$(7,4)
  Get 120,0,148,28,Mask$(7,5)
  Get 150,0,178,28,Mask$(7,6)
  Get 180,0,208,28,Mask$(7,7)
  Get 210,0,238,28,Mask$(7,8)
  '
  Get 0,30,28,58,Mask$(8,1)
  Get 30,30,58,58,Mask$(8,2)
  Get 60,30,88,58,Mask$(8,3)
  Get 90,30,118,58,Mask$(8,4)
  Get 120,30,148,58,Mask$(8,5)
  Get 150,30,178,58,Mask$(8,6)
  Get 180,30,208,58,Mask$(8,7)
  Get 210,30,238,58,Mask$(8,8)
  '
  Get 0,60,18,98,Mask$(9,1)
  Get 40,60,78,78,Mask$(9,2)
  Get 100,60,118,98,Mask$(9,3)
  Get 120,80,158,98,Mask$(9,4)
  Get 180,60,198,98,Mask$(9,5)
  Get 200,80,238,98,Mask$(9,6)
  Get 240,60,258,98,Mask$(9,7)
  Get 280,60,318,78,Mask$(9,8)
  '
  Get 0,100,18,138,Mask$(10,1)
  Get 40,100,78,118,Mask$(10,2)
  Get 100,100,118,138,Mask$(10,3)
  Get 120,120,158,138,Mask$(10,4)
  Get 180,100,198,138,Mask$(10,5)
  Get 200,120,238,138,Mask$(10,6)
  Get 240,100,258,138,Mask$(10,7)
  Get 280,100,318,118,Mask$(10,8)
  '
  Get 0,140,18,178,Mask$(11,1)
  Get 40,140,78,158,Mask$(11,2)
  Get 100,140,118,178,Mask$(11,3)
  Get 120,160,158,178,Mask$(11,4)
  Get 180,140,198,178,Mask$(11,5)
  Get 200,160,238,178,Mask$(11,6)
  Get 240,140,258,178,Mask$(11,7)
  Get 280,140,318,158,Mask$(11,8)
  '
  Get 0,180,48,188,Mask$(12,1)
  Get 240,0,248,48,Mask$(12,2)
  Mask$(12,3)=Mask$(12,1)
  Mask$(12,5)=Mask$(12,1)
  Mask$(12,7)=Mask$(12,1)
  Mask$(12,4)=Mask$(12,2)
  Mask$(12,6)=Mask$(12,2)
  Mask$(12,8)=Mask$(12,2)
  '
  Bload "SHAPE1",Screen0%-34
  '
  Get 0,0,28,28,Shape$(1,1)
  Get 30,0,58,28,Shape$(1,2)
  Get 60,0,88,28,Shape$(1,3)
  Get 90,0,118,28,Shape$(1,4)
  Get 120,0,148,28,Shape$(1,5)
  Get 150,0,178,28,Shape$(1,6)
  Get 180,0,208,28,Shape$(1,7)
  Get 210,0,238,28,Shape$(1,8)
  '
  Get 0,30,18,58,Shape$(2,1)
  Get 30,30,58,48,Shape$(2,2)
  Get 70,30,88,58,Shape$(2,3)
  Get 90,40,118,58,Shape$(2,4)
  Get 130,30,148,58,Shape$(2,5)
  Get 150,40,178,58,Shape$(2,6)
  Get 180,30,198,58,Shape$(2,7)
  Get 210,30,238,48,Shape$(2,8)
  '
  Get 0,60,28,88,Shape$(3,1)
  Get 30,60,58,88,Shape$(3,2)
  Get 60,60,88,88,Shape$(3,3)
  Get 90,60,118,88,Shape$(3,4)
  Get 120,60,148,88,Shape$(3,5)
  Get 150,60,178,88,Shape$(3,6)
  Get 180,60,208,88,Shape$(3,7)
  Get 210,60,238,88,Shape$(3,8)
  '
  Get 0,90,18,118,Shape$(4,1)
  Get 30,90,58,108,Shape$(4,2)
  Get 70,90,88,118,Shape$(4,3)
  Get 90,100,118,118,Shape$(4,4)
  Get 130,90,148,118,Shape$(4,5)
  Get 150,100,178,118,Shape$(4,6)
  Get 180,90,198,118,Shape$(4,7)
  Get 210,90,238,108,Shape$(4,8)
  '
  Get 0,120,28,148,Shape$(5,1)
  Get 30,120,58,148,Shape$(5,2)
  Get 60,120,88,148,Shape$(5,3)
  Get 90,120,118,148,Shape$(5,4)
  Get 120,120,148,148,Shape$(5,5)
  Get 150,120,178,148,Shape$(5,6)
  Get 180,120,208,148,Shape$(5,7)
  Get 210,120,238,148,Shape$(5,8)
  '
  Get 0,150,28,178,Shape$(6,1)
  Get 30,150,58,178,Shape$(6,2)
  Get 60,150,88,178,Shape$(6,3)
  Get 90,150,118,178,Shape$(6,4)
  Get 120,150,148,178,Shape$(6,5)
  Get 150,150,178,178,Shape$(6,6)
  Get 180,150,208,178,Shape$(6,7)
  Get 210,150,238,178,Shape$(6,8)
  '
  Bload "SHAPE2",Screen0%-34
  '
  Get 0,0,28,28,Shape$(7,1)
  Get 30,0,58,28,Shape$(7,2)
  Get 60,0,88,28,Shape$(7,3)
  Get 90,0,118,28,Shape$(7,4)
  Get 120,0,148,28,Shape$(7,5)
  Get 150,0,178,28,Shape$(7,6)
  Get 180,0,208,28,Shape$(7,7)
  Get 210,0,238,28,Shape$(7,8)
  '
  Get 0,30,28,58,Shape$(8,1)
  Get 30,30,58,58,Shape$(8,2)
  Get 60,30,88,58,Shape$(8,3)
  Get 90,30,118,58,Shape$(8,4)
  Get 120,30,148,58,Shape$(8,5)
  Get 150,30,178,58,Shape$(8,6)
  Get 180,30,208,58,Shape$(8,7)
  Get 210,30,238,58,Shape$(8,8)
  '
  Get 0,60,18,98,Shape$(9,1)
  Get 40,60,78,78,Shape$(9,2)
  Get 100,60,118,98,Shape$(9,3)
  Get 120,80,158,98,Shape$(9,4)
  Get 180,60,198,98,Shape$(9,5)
  Get 200,80,238,98,Shape$(9,6)
  Get 240,60,258,98,Shape$(9,7)
  Get 280,60,318,78,Shape$(9,8)
  '
  Get 0,100,18,138,Shape$(10,1)
  Get 40,100,78,118,Shape$(10,2)
  Get 100,100,118,138,Shape$(10,3)
  Get 120,120,158,138,Shape$(10,4)
  Get 180,100,198,138,Shape$(10,5)
  Get 200,120,238,138,Shape$(10,6)
  Get 240,100,258,138,Shape$(10,7)
  Get 280,100,318,118,Shape$(10,8)
  '
  Get 0,140,18,178,Shape$(11,1)
  Get 40,140,78,158,Shape$(11,2)
  Get 100,140,118,178,Shape$(11,3)
  Get 120,160,158,178,Shape$(11,4)
  Get 180,140,198,178,Shape$(11,5)
  Get 200,160,238,178,Shape$(11,6)
  Get 240,140,258,178,Shape$(11,7)
  Get 280,140,318,158,Shape$(11,8)
  '
  Get 0,180,48,188,Shape$(12,1)
  Get 240,0,248,48,Shape$(12,2)
  Shape$(12,3)=Shape$(12,1)
  Shape$(12,5)=Shape$(12,1)
  Shape$(12,7)=Shape$(12,1)
  Shape$(12,4)=Shape$(12,2)
  Shape$(12,6)=Shape$(12,2)
  Shape$(12,8)=Shape$(12,2)
  '
  '
  Bload "STUMBACK",Screen0%-34
  Sget Blank$
  Get 54,39,105,90,Hole$
  Get 0,92,53,145,Blanksquare$
  Get 269,0,314,16,Rotate$
  Get 271,2,316,18,Rotate1$
  Get 269,22,314,38,Flip$
  Get 271,24,316,40,Flip1$
  Get 269,43,314,60,Twist$
  Get 271,45,316,62,Twist1$
  Get 269,68,314,84,Happy$
  Get 271,70,316,86,Happy1$
  '
  Get 2,0,47,12,B320$
  Get 4,2,49,14,B3201$
  Get 2,18,47,30,B415$
  Get 4,20,49,32,B4151$
  Get 2,36,47,48,B512$
  Get 4,38,49,50,B5121$
  Get 2,55,47,67,B610$
  Get 4,57,49,69,B6101$
  Get 2,73,47,85,B88$
  Get 4,75,49,87,B881$
  '
  Put 73,0,Title_horiz$
  Put 98,30,Grid512$,3           ! Initialise game with
  Grid=3                         !     5x12 grid
  '
Return
' -----------------------------------------------------------------------------
Procedure Which_shape(Pc)
  '
  If Pc<>0 Or Pc<>1 Or Pc<>8 Or Pc<>9
    '
    If Pc=2
      X=7
      Used_x=False
      Squarea=212
      Squareb=92
      Gosub Re_map_grid
      Used_x=True
      Gosub Make_it_move(7,Present_x)
    Endif
    '
    If Pc=3
      X=6
      Used_v=False
      Squarea=0
      Squareb=145
      Gosub Re_map_grid
      Used_v=True
      Gosub Make_it_move(6,Present_v)
    Endif
    '
    If Pc=4
      X=5
      Used_w=False
      Squarea=159
      Squareb=92
      Gosub Re_map_grid
      Used_w=True
      Gosub Make_it_move(5,Present_w)
    Endif
    '
    If Pc=5
      X=12
      Used_i=False
      Squarea=106
      Squareb=145
      Gosub Re_map_grid
      Used_i=True
      Gosub Make_it_move(12,Present_i)
    Endif
    '
    If Pc=6
      X=3
      Used_z=False
      Squarea=0
      Squareb=92
      Gosub Re_map_grid
      Used_z=True
      Gosub Make_it_move(3,Present_z)
    Endif
    '
    If Pc=7
      X=4
      Used_p=False
      Squarea=106
      Squareb=92
      Gosub Re_map_grid
      Used_p=True
      Gosub Make_it_move(4,Present_p)
    Endif
    '
    If Pc=10
      X=1
      Used_t=False
      Squarea=265
      Squareb=92
      Gosub Re_map_grid
      Used_t=True
      Gosub Make_it_move(1,Present_t)
    Endif
    '
    If Pc=11
      X=8
      Used_f=False
      Squarea=265
      Squareb=145
      Gosub Re_map_grid
      Used_f=True
      Gosub Make_it_move(8,Present_f)
    Endif
    '
    If Pc=12
      X=10
      Used_l=False
      Squarea=53
      Squareb=145
      Gosub Re_map_grid
      Used_l=True
      Gosub Make_it_move(10,Present_l)
    Endif
    '
    If Pc=13
      X=11
      Used_s=False
      Squarea=212
      Squareb=145
      Gosub Re_map_grid
      Used_s=True
      Gosub Make_it_move(11,Present_s)
    Endif
    '
    If Pc=14
      X=2
      Used_u=False
      Squarea=53
      Squareb=92
      Gosub Re_map_grid
      Used_u=True
      Gosub Make_it_move(2,Present_u)
    Endif
    '
    If Pc=15
      X=9
      Used_y=False
      Squarea=159
      Squareb=145
      Gosub Re_map_grid
      Used_y=True
      Gosub Make_it_move(9,Present_y)
    Endif
    '
  Endif
  '
Return
'
Procedure Replace_square_on_grid(X,Y,Am,Bm)
  '
  Put Am-10,Bm-10,Mask$(X,Y),4
  Put Am-10,Bm-10,Shape$(X,Y),6
  '
Return
'
Procedure Set_square
  '
  If X=1
    At=A
    Bt=B
  Endif
  '
  If X=2
    Au=A
    Bu=B
  Endif
  '
  If X=3
    Az=A
    Bz=B
  Endif
  '
  If X=4
    Ap=A
    Bp=B
  Endif
  '
  If X=5
    Aw=A
    Bw=B
  Endif
  '
  If X=6
    Av=A
    Bv=B
  Endif
  '
  If X=7
    Ax=A
    Bx=B
  Endif
  '
  If X=8
    Af=A
    Bf=B
  Endif
  '
  If X=9
    Ay=A
    By=B
  Endif
  '
  If X=10
    Al=A
    Bl=B
  Endif
  '
  If X=11
    As=A
    Bs=B
  Endif
  '
  If X=12
    Ai=A
    Bi=B
  Endif
  '
Return
'
Procedure Re_map_grid
  '
  Void Xbios(5,L:Screen0%,L:-1,-1)
  If Grid=1
    Put 58,41,Grid320$,3
  Endif
  '
  If Grid=2
    Put 84,36,Grid415$,3
  Endif
  '
  If Grid=3
    Put 98,30,Grid512$,3
  Endif
  '
  If Grid=4
    Put 108,25,Grid610$,3
  Endif
  '
  If Grid=5
    Put 118,4,Grid88$,3
  Endif
  '
  If Grid=5
    If Black_bits=1
      Deffill 1,2,8
      Fill 121,7
      Fill 191,7
      Fill 121,77
      Fill 191,77
    Endif
    '
    If Black_bits=2
      Deffill 1,2,8
      Fill 131,17
      Fill 181,17
      Fill 131,67
      Fill 181,67
    Endif
    '
    If Black_bits=3
      Deffill 1,2,8
      Fill 141,27
      Fill 171,27
      Fill 141,57
      Fill 171,57
    Endif
    '
    If Black_bits=4
      Deffill 1,2,8
      Fill 151,37
      Fill 161,37
      Fill 151,47
      Fill 161,47
    Endif
  Endif
  '
  If Used_t=True
    Gosub Replace_square_on_grid(1,Present_t,At,Bt)
  Endif
  '
  If Used_u=True
    Gosub Replace_square_on_grid(2,Present_u,Au,Bu)
  Endif
  '
  If Used_z=True
    Gosub Replace_square_on_grid(3,Present_z,Az,Bz)
  Endif
  '
  If Used_p=True
    Gosub Replace_square_on_grid(4,Present_p,Ap,Bp)
  Endif
  '
  If Used_w=True
    Gosub Replace_square_on_grid(5,Present_w,Aw,Bw)
  Endif
  '
  If Used_v=True
    Gosub Replace_square_on_grid(6,Present_v,Av,Bv)
  Endif
  '
  If Used_x=True
    Gosub Replace_square_on_grid(7,Present_x,Ax,Bx)
  Endif
  '
  If Used_f=True
    Gosub Replace_square_on_grid(8,Present_f,Af,Bf)
  Endif
  '
  If Used_y=True
    Gosub Replace_square_on_grid(9,Present_y,Ay,By)
  Endif
  '
  If Used_l=True
    Gosub Replace_square_on_grid(10,Present_l,Al,Bl)
  Endif
  '
  If Used_s=True
    Gosub Replace_square_on_grid(11,Present_s,As,Bs)
  Endif
  '
  If Used_i=True
    Gosub Replace_square_on_grid(12,Present_i,Ai,Bi)
  Endif
  '
  Bmove Screen0%,Screen2%,32000
  Void Xbios(5,L:Screen2%,L:Screen2%,-1)
  '
Return
'
Procedure Not_low
  '
  If Rez=1
    If Exist("MED.MSG")
      Open "I",#1,"MED.MSG"
      Med_splat$=Input$(5630,#1)
      Close #1
      A=0
      B=0
      Repeat
        Void Xbios(5,L:Screen1%,L:-1,-1)
        If A>(650-310)
          Let Direction_x=True
        Endif
        If A<1
          Let Direction_x=False
        Endif
        If B>(200-80)
          Let Direction_y=True
        Endif
        If B<1
          Let Direction_y=False
        Endif
        If Direction_x=True
          A=A-5
        Endif
        If Direction_x=False
          A=A+5
        Endif
        If Direction_y=True
          B=B-5
        Endif
        If Direction_y=False
          B=B+5
        Endif
        Put A,B,Med_splat$,3
        Void Xbios(5,L:Screen1%,L:Screen1%,-1)
        Bmove Screen1%,Screen2%,32000
        '
        Void Xbios(5,L:Screen2%,L:-1,-1)
        If A>(650-310)
          Let Direction_x=True
        Endif
        If A<1
          Let Direction_x=False
        Endif
        If B>(200-80)
          Let Direction_y=True
        Endif
        If B<1
          Let Direction_y=False
        Endif
        If Direction_x=True
          A=A-5
        Endif
        If Direction_x=False
          A=A+5
        Endif
        If Direction_y=True
          B=B-5
        Endif
        If Direction_y=False
          B=B+5
        Endif
        Put A,B,Med_splat$,3
        Void Xbios(5,L:Screen2%,L:Screen2%,-1)
        Bmove Screen2%,Screen1%,32000
      Until Inkey$<>""
      Void Xbios(5,L:Oscreen%,L:Oscreen%,-1)
    Else
      Alert 1,"This program only runs|in low resolution.",1," Darn ",D
    Endif
    End
    '
  Endif
  '
  If Rez=2
    If Exist("HIGH.MSG")
      Open "I",#1,"HIGH.MSG"
      High_splat$=Input$(4518,#1)
      Close #1
      A=0
      B=0
      Repeat
        Pause 1.5
        Void Xbios(5,L:Screen1%,L:-1,-1)
        If A>390
          Let Direction_x=True
        Endif
        If A<1
          Let Direction_x=False
        Endif
        If B>(400-150)
          Let Direction_y=True
        Endif
        If B<1
          Let Direction_y=False
        Endif
        If Direction_x=True
          A=A-10
        Endif
        If Direction_x=False
          A=A+10
        Endif
        If Direction_y=True
          B=B-10
        Endif
        If Direction_y=False
          B=B+10
        Endif
        Put A,B,High_splat$,3
        Void Xbios(5,L:Screen1%,L:Screen1%,-1)
        Bmove Screen1%,Screen2%,32000
        '
        Pause 1.5
        Void Xbios(5,L:Screen2%,L:-1,-1)
        If A>390
          Let Direction_x=True
        Endif
        If A<1
          Let Direction_x=False
        Endif
        If B>(400-150)
          Let Direction_y=True
        Endif
        If B<1
          Let Direction_y=False
        Endif
        If Direction_x=True
          A=A-10
        Endif
        If Direction_x=False
          A=A+10
        Endif
        If Direction_y=True
          B=B-10
        Endif
        If Direction_y=False
          B=B+10
        Endif
        Put A,B,High_splat$,3
        Void Xbios(5,L:Screen2%,L:Screen2%,-1)
        Bmove Screen2%,Screen1%,32000
      Until Inkey$<>""
      Void Xbios(5,L:Oscreen%,L:Oscreen%,-1)
    Else
      Alert 1,"This program only runs in|low resolution.",1," Darn ",D
    Endif
    End
    '
  Endif
  '
Return
'
'
Procedure Title_loader
  '
  Setcolor 0,7,7,7
  Setcolor 1,7,0,0
  Setcolor 2,0,7,0
  Setcolor 3,7,7,0
  Setcolor 4,3,3,7
  Setcolor 5,7,0,7
  Setcolor 6,0,7,7
  Setcolor 7,6,6,6
  Setcolor 8,4,4,4
  Setcolor 9,7,4,0
  Setcolor 10,4,0,4
  Setcolor 11,5,1,0
  Setcolor 12,0,4,1
  Setcolor 13,5,4,0
  Setcolor 14,3,5,7
  Setcolor 15,0,0,0
  '
  Bload "STUMBLE",Screen2%-34
  Void Xbios(5,L:Screen2%,L:Screen2%,-1)
  '
Return
'
Procedure Check_completed
  '
  If Used_t=True
    If Used_u=True
      If Used_z=True
        If Used_p=True
          If Used_w=True
            If Used_v=True
              If Used_x=True
                If Used_f=True
                  If Used_y=True
                    If Used_l=True
                      If Used_s=True
                        If Used_i=True
                          Gosub Check_true_colours
                        Endif
                      Endif
                    Endif
                  Endif
                Endif
              Endif
            Endif
          Endif
        Endif
      Endif
    Endif
  Endif
  '
Return
'
Procedure Check_true_colours
  '
  If Grid=1
    Found_one=False
    For J=45 To 65 Step 10
      For I=65 To 255 Step 10
        Colour_found=Point(I,J)
        If Colour_found=0
          Found_one=True
        Endif
      Next I
    Next J
    If Found_one=True
      Alert 1,"| |Better luck|next time...",1," Ho-Hum ",Z
    Endif
    '
    If Found_one=False
      Alert 1," Well Done !!| Would you like a| printed record| of it ?",1," Yes | No ",Z
      If Z=1
        Gosub Hard_copy
      Endif
    Endif
    '
  Endif
  '
  '
  If Grid=2
    Found_one=False
    For J=42 To 72 Step 10
      For I=90 To 230 Step 10
        Colour_found=Point(I,J)
        If Colour_found=0
          Found_one=True
        Endif
      Next I
    Next J
    If Found_one=True
      Alert 1,"| |Better luck|next time...",1," Ho-Hum ",Z
    Endif
    '
    If Found_one=False
      Alert 1," Well Done !!| Would you like a| printed record| of it ?",1," Yes | No ",Z
      If Z=1
        Gosub Hard_copy
      Endif
    Endif
    '
  Endif
  '
  If Grid=3
    Found_one=False
    For J=36 To 76 Step 10
      For I=104 To 214 Step 10
        Colour_found=Point(I,J)
        If Colour_found=0
          Found_one=True
        Endif
      Next I
    Next J
    If Found_one=True
      Alert 1,"| |Better luck|next time...",1," Ho-Hum ",Z
    Endif
    '
    If Found_one=False
      Alert 1," Well Done !!| Would you like a| printed record| of it ?",1," Yes | No ",Z
      If Z=1
        Gosub Hard_copy
      Endif
    Endif
    '
  Endif
  '
  If Grid=4
    Found_one=False
    For J=30 To 80 Step 10
      For I=114 To 204 Step 10
        Colour_found=Point(I,J)
        If Colour_found=0
          Found_one=True
        Endif
      Next I
    Next J
    If Found_one=True
      Alert 1,"| |Better luck|next time...",1," Ho-Hum ",Z
    Endif
    '
    If Found_one=False
      Alert 1," Well Done !!| Would you like a| printed record| of it ?",1," Yes | No ",Z
      If Z=1
        Gosub Hard_copy
      Endif
    Endif
    '
  Endif
  '
  If Grid=5
    Found_one=False
    For J=10 To 80 Step 10
      For I=125 To 195 Step 10
        Colour_found=Point(I,J)
        If Colour_found=0
          Found_one=True
        Endif
      Next I
    Next J
    If Found_one=True
      Alert 1,"| |Better luck|next time...",1," Ho-Hum ",Z
    Endif
    '
    If Found_one=False
      Alert 1," Well Done !!| Would you like a| printed record| of it ?",1," Yes | No ",Z
      If Z=1
        Gosub Hard_copy
      Endif
    Endif
    '
  Endif
  '
Return
'
Procedure Hard_copy
  '
  Alert 3," WARNING| If your printer is not| ON LINE there will be| a 30 second delay.",1,"Print|Cancel",Z
  '
  If Z=1
    If Grid=1
      '
      Lprint "Stumbling Blocks (3x20)"
      Lprint
      For J=46 To 66 Step 10
        For I=64 To 254 Step 10
          Colour_found=Point(I,J)
          Gosub Sort_colour
          Lprint K$;" ";
          If I=254
            Lprint
            Lprint
          Endif
        Next I
      Next J
      '
    Endif
    '
    If Grid=2
      '
      Lprint "Stumbling Blocks (4x15)"
      Lprint
      For J=40 To 70 Step 10
        For I=90 To 230 Step 10
          Colour_found=Point(I,J)
          Gosub Sort_colour
          Lprint K$;" ";
          If I=230
            Lprint
            Lprint
          Endif
        Next I
      Next J
      '
    Endif
    '
    '
    If Grid=3
      '
      Lprint "Stumbling Blocks (5x12)"
      Lprint
      For J=36 To 76 Step 10
        For I=104 To 214 Step 10
          Colour_found=Point(I,J)
          Gosub Sort_colour
          Lprint K$;" ";
          If I=214
            Lprint
            Lprint
          Endif
        Next I
      Next J
      '
    Endif
    '
    If Grid=4
      '
      Lprint "Stumbling Blocks (6x10)"
      Lprint
      For J=30 To 80 Step 10
        For I=114 To 204 Step 10
          Colour_found=Point(I,J)
          Gosub Sort_colour
          Lprint K$;" ";
          If I=204
            Lprint
            Lprint
          Endif
        Next I
      Next J
      '
    Endif
    '
    If Grid=5
      '
      Lprint "Stumbling Blocks (8x8)"
      Lprint
      For J=10 To 80 Step 10
        For I=125 To 195 Step 10
          Colour_found=Point(I,J)
          Gosub Sort_colour
          Lprint K$;" ";
          If I=195
            Lprint
            Lprint
          Endif
        Next I
      Next J
      '
    Endif
    '
  Endif
  '
Return
'
Procedure Sort_colour
  '
  If Colour_found=1
    K$="*"
  Else
    If Colour_found=2
      K$="X"
    Else
      If Colour_found=3
        K$="V"
      Else
        If Colour_found=4
          K$="W"
        Else
          If Colour_found=5
            K$="I"
          Else
            If Colour_found=6
              K$="Z"
            Else
              If Colour_found=7
                K$="P"
              Else
                If Colour_found=10
                  K$="T"
                Else
                  If Colour_found=11
                    K$="F"
                  Else
                    If Colour_found=12
                      K$="L"
                    Else
                      If Colour_found=13
                        K$="S"
                      Else
                        If Colour_found=14
                          K$="U"
                        Else
                          If Colour_found=15
                            K$="Y"
                          Endif
                        Endif
                      Endif
                    Endif
                  Endif
                Endif
              Endif
            Endif
          Endif
        Endif
      Endif
    Endif
  Endif
  '
Return
Procedure Check_for_files
  Restore Stumble_files
  For I=1 To 7
    Read X$
    If Not Exist(X$)
      Alert 1,"The file "+X$+" must|be in the same directory as|STUMBLE.PRG.",1,"Abort",D
      End
    Endif
  Next I
  Stumble_files:
  Data STUMBLE,STUMGRID,STUMBACK,MASK1,MASK2,SHAPE1,SHAPE2
  Restore
Return
'
' ------------- SAVE ORIGINAL COLOR PALETTE -----------------------
Procedure Save_pal
  '
  Dim Spalette%(16,3)
  '
  For Z%=0 To 15
    Dpoke Contrl,26
    Dpoke Contrl+2,0
    Dpoke Contrl+6,2
    Dpoke Intin,Z%
    Dpoke Intin+2,0
    Vdisys
    Spalette%(Z%,0)=Dpeek(Intout+2)
    Spalette%(Z%,1)=Dpeek(Intout+4)
    Spalette%(Z%,2)=Dpeek(Intout+6)
  Next Z%
Return
'
Procedure Restore_pal
  ' --------------------- RESTORES PALETTE -------------------
  ' Dimensions: Spalette%(16,3)
  '
  For Z%=0 To 15
    Dpoke Contrl,14
    Dpoke Contrl+2,0
    Dpoke Contrl+6,4
    Dpoke Intin,Z%
    Dpoke Intin+2,Spalette%(Z%,0)
    Dpoke Intin+4,Spalette%(Z%,1)
    Dpoke Intin+6,Spalette%(Z%,2)
    Vdisys
  Next Z%
Return
'
' ---------------------------------------------------------------------------
'
'    and you thought you'd never make it to the end...
'
