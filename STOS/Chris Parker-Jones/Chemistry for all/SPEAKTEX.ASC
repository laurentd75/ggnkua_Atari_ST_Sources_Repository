Documentation for SPEAKTEX with STOS.            Martin Taylor 1990.            
                                                                                
SPEAKTEX.PRG V2.0 is a PD program for the ST, written by AD Beveridge and       
MN Day in 1986. It normally runs from the desktop, speaking words you type in.  
                                                                                
In theory, it should be possible to load .PRG files into a STOS memory bank,    
and execute them via the CALL statement.  SPEAKTEX is one of the exceptions,    
and will not function like that.                                                
                                                                                
The version of the program contained on this disk (SPEAKTEX.BIN) is not         
logically different from the original, but two types of change were necessary.  
                                                                                
1. To make all addresses relocatable.                                           
2. To replace the interrupt-driven part of the speech generation.               
                                                                                
The resulting .BIN file can be BLOADed into a STOS memory bank, and CALLed from 
a STOS Basic program, to 'say' the contents of a string.                        
                                                                                
The program below (saved on the disk as SPEAKTEX.BAS) is an example of how the  
code is invoked.  It looks rather more complicated than it is!                  
                                                                                
Lines 100-110 reserve bank 7 with an appropriate capacity, then BLOAD the       
binary code into it.  Any spare bank can be used instead of 7 if you wish, and  
it could equally be reserved as WORK.                                           
                                                                                
Lines 120-150 allow you to alter (if you wish) the pitch and speed (rate) of    
the generated voice.  The defaults within the .BIN file are reasonably          
acceptable, but it is worth playing about with these values to see what can be  
done.  Some recommended limits are given below.  Beyond these, the voice        
becomes unintelligible.                                                         
                                                                                
Lines 160-180 deal with the choice of English (the usual) or Phonetic input.    
Depending on this, the CALL address (entry point) will be different, and also   
the address register pointing to the string must be changed.                    
                                                                                
So, for English input ... Entry point is START(7)+$752E                         
                          Address register 1 is used.                           
                                                                                
    for phonetic input .. Entry point is START(7)+$7500                         
                          Address register 0 is used.                           
                                                                                
Actually, for English input, SPEAKTEX first converts it to Phonetic, and then   
transfers to the second entry point itself.  Phonetic input gives you           
rather more control over the speech, but is a bit obscure, and it doesn't do    
badly with standard English.  You can usually get around its wrong assumptions  
on pronunciation, by spelling words differently.                                
                                                                                
Lines 190-210 are the sharp end of the program.  First we INPUT the string      
to be spoken (A$).  Machine code programs like their strings to end with $00,   
so this is added to the end of A$.  The chosen address register is then loaded  
with the address (VARPTR) of the string, and data register 0 is zeroised.       
                                                                                
Now everything is ready - so we CALL EP, previously set up with the appropriate 
entry point address.  When it has finished saying that, back for more!          
                                                                                
One word of warning - square brackets cause SPEAKTEX to loop. This is true of   
the original, not just this version.  I found this when using SPEAKTEX from     
STOS to read out a text file (which happened to contain square brackets).       
                                                                                
See also READTEX.BAS, which reads out this documentation for you.               
                                                                                
                                                                                
10 rem ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                        
20 rem SPEAKTEX with STOS                                                       
30 rem ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                        
40 rem                                                                          
50 rem SPEAKTEX.PRG V2.0 is a PD program                                        
60 rem by AD Beveridge and MN Day (1986)                                        
70 rem                                                                          
80 rem See SPEAKTEX.ASC for documentation                                       
90 rem                                                                          
100 erase 7 : reserve as data 7,$7600                                           
110 bload "speaktex.bin",7                                                      
120 rem PTCH sets pitch of voice : recommend $10<PTCH<$40                       
130 PTCH=start(7)+$752A : loke PTCH,$23                                         
140 rem RATE sets speed of voice : recommend $10<RATE<$80                       
150 RATE=start(7)+$6D02 : poke RATE,$4F                                         
160 input "English or Phonetic input? (Assumes English)";E$                     
170 EP=start(7)+$752E : ANO=1                                                   
180 if upper$(E$)="P" then EP=EP-$2E : ANO=0                                    
190 input A$                                                                    
200 A$=A$+chr$(0) : areg(ANO)=varptr(A$) : dreg(0)=0                            
210 call EP                                                                     
220 goto 190                                                                    
