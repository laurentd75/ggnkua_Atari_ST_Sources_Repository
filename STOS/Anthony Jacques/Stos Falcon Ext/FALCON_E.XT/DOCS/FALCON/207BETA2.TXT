STOS loader program.-  beta 2

Modifications made by Anthony Jacques:
  - Extra OS version support
  - Support for Falcon screen modes 
  - OS version detection routine cleaned up
  - TOS version number now displays correct number.
  - 4 out of 7 of the addresses in the tables are generated
    at run time - so some things (eg. mouse) will work on ANY
    TOS version, even if the table is not included.

Known bugs:
  - On my Falcon, I get 4 bombs on exiting. This
    seems to be caused by the Vsetscreen call. (why?)
    The good news is this is non-fatal.
  - STOS doesn't like MultiTOS. I dont think it is
    this module, but who knows?

Future enhancements:
  - compiler version to have 'slow-down' settings
  - command line preserved for user programs
  - True Colour picture-stretch on startup for Falcons
  - less bugs
  - Magic support in TOS table?
  - No pre-made tables?

8<- - - -

Hi there, beta tester... :-)

Stick BASIC207.TOS in the same place as BASIC206.PRG, and use
this to run STOS instead of the old version. Hopefully there
will be no problems with it running on your system (ie. mouse
will work, joysticks, keyboard etc. and no crashes entering or
leaving STOS).

Note that it doesn't need fixing - it has been pre-fixed for
12 valid OS versions (1.00, 1.01, 1.02, 1.04, 1.06, 1.62, 2.05,
2.06, 3.01, 3.06, 4.01, 4.02, 4.04, 4.92) as well as a fakes
(3.05) which has been copied from 3.06 as I haven't yet got
the this version.

Hopefully Falcon owners should be able to run STOS from any
standard screenmode, and STOS will now switch down to an ST
compat mode on entry (even from 640x480), and restore the
screen on exit. This doesn't work with NVDI installed on my
machine, and nor does it work with my BlowUP screen enhancer.

Also, by changeing the way the OS version is detected, I have
increased STOS's compatibility with emulators - it will now
work on the GEMulator DEMO as well as the full version, and
should work ok on machines with TOS images installed.

For those interested in helping fix a few bugs, the source
code is included - just ignore this if you like and pass the
bugs back to me.

In the compiler version I can add 8Mhz slow-down modes, although
changing these options may be a bit tricky until I've figured out
exactly how compiler.acb and comp_207.prg comunicate. I *think*
I can do something with the command-line, but not certain of
the details yet...

Tell me what you think...

Cheers

Anthony

jacquesa@cs.man.ac.uk
