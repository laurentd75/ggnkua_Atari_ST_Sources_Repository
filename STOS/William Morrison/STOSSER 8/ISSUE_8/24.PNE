
              
 
                             SCREEN HANDLING
                             ***************

                       By Tony Greenwood 10/10/93 
                       **************************

I am about to try and explain a little about the STOS screen handling 
commands, with special emphasis on using SCREEN SWAP and WAIT VBL.  I want 
to do this in as simple a way as possible, in other words i will not be 
using such phrases as shifter chip etc etc.  But try to explain in simple 
to understand terms.  Something on the lines of the sort of stuff i would 
have liked to have read when i was starting out with STOS 
 
You should all know by now that it is possible to have more than one 
screen in use at any one time, There is:
  
PHYSICAL SCREEN     :This is the screen that you can see, You are now 
                     looking at the Physical screen, It is the only screen 
                     that you will ever actually see,

BACK SCREEN         :This is as its title suggests just behind the 
                     Physical screen, It will always hold an exact copy of 
                     the physical screen unless otherwise instructed, 
                     Please see page 100-101 of your STOS manual 

BANKS               :The memory banks can also be defined as screens, But 
                     you will only ever see these if you copy the contents 
                     of the bank onto the physical screen

LOGIC SCREEN        :By far the most important screen.  This is not 
                     actually a screen on its own, but can be allocated as 
                     any of the above, I will explain further as this is 
                     the screen that will make or break your program.

Firstly, as a default the Logic and Physic screen are both the same. The 
Logic screen is the one that the computer does all the work on.  If you 
type PRINT "TONY" then the computer will print it to the screen you can 
see.. The Physic/Logic screen. 

 If you type LOGIC=BACK then type PRINT "TONY" then you will not see the 
word tony on the physical screen, Whats the point i here you ask?.. Well 
try the next bit:
 
 LOGIC=PHYSIC : FOR N=0 TO 22 : LOCATE 0,N : PRINT "STOSSER"
 
 You should be able to see the word STOSSER being printed down the screen, 
If not then try the above with a longer string, Now you will definetly 
have seen it being printed, Probably nothing much wrong with that you 
might think. But what if you wanted to show a whole page of text, with say 
a border round it or some sort of graphics drawn with CIRCLE, BOX etc. 
Then at the press of a key another page, and so on and so forth. Your 
program would start to look a little tatty if the user could see the 
screen being drawn.  Try changing the above to LOGIC=BACK then add 

SCREEN SWAP: WAIT VBL 

The page will then all appear at once, No matter how much text or how much 
graphics have been drawn.  The screen will appear in one clean swoop, this 
of course would make your program look a lot smoother. 

You will have noticed the WAIT VBL command.  Well the screen is updated 
every 50th of a second, in other words the computer keeps making a check 
to see if you want anything new putting on the screen.  Lets say that the 
screen is only updated every half an hour.  Well if you typed PRINT "TONY" 
you would have to wait half an hour before it appeared on the screen.  So 
it updates every 50th of a second.  I need to give you a brief idea of how 
this is done in order for you to understand why the command is needed.
 
The computer redraws the screen every 50th of a second, it does this by 
redrawing the top line from left to right, then drops down a line and 
repeats the process until it reaches the bottom of the screen.  This is 
called a Vertical Blank.  The whole thing takes guess how long, thats 
right a 50th of a second, So we type WAIT VBL this ensures that it will 
not print TONY to the screen until it has redrawn the last line.  That way 
it will start redrawing from the top of the screen and not miss your  
command on that perticular redraw, again probably not much of a problem.  
But suppose you are placing a whole screen onto the physical screen, 
either a whole screen of text as we mentioned earlier or a full screen 
picture from a bank.  If we dont wait until the screen has just been 
redrawn then we could put our picture onto the screen half way through a 
redraw.  This of course would mean that the bottom half was  drawn to the 
screen before the top half,  this of course would happen so quickly you 
would hardly notice.  BUT lets take it a step furthur and suppose you are 
doing some sort of animation. In other words you want diffrent screens or 
pictures or whatever drawn to the screen in quick sucession, Well if this 
was done without WAIT VBL you would definatly see the difference by way of 
the screen flickering.  One example is in the making of a scroller.  With 
the text moving smoothly accross the screen.  This cannot possibly be done 
without a wait vbl command in the listing somewhere, 

 So the most common way to use the bits i have covered is to define your 
LOGIC SCREEN ( the one that gets work done on it ) as the back screen.  
Then give all your instructions such as PRINT CIRCLE, SCREEN COPY etc etc
Then SCREEN SWAP : WAIT VBL

 NOTE: If you are going to do animation or a scroller or such like, Then 
allways copy your first screen to the physical and logical screens.  Then 
make your slight changes such as animation then screen swap

 Of course you do not need to use BACK to do all your work before Copying 
it to the PHYSICAL SCREEN, You can use a bank after a 
RESERVE AS SCREEN/DATA SCREEN ,?

 Well hopefully at least one or two of you have found something 
interesting in the above, 

 KEEP ON STOSSING!

 
 

