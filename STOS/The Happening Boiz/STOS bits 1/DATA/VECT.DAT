FAST VECTOR GRAPHICS IN STOS!!!

WOW What a piece of coding!!, Eddie has finally got his vector 
routines working.
 Load VECT.BAS from the programs folder, and run, it is a hell of 
a lot better if you compile it, but it should be okay uncompiled, 
you will have to wait a short time whilst all he calculations are 
performed that make up the final wave form.

Note...Wave form refers to the finished animation (in this case 
two parallel planes)

There are 300 frames, and you can see how many have been done by 
looking at the number in the top left of the screen.

When all the calculations have been done, the graphics are then 
shown, and you'll be amazed!!

The reason for calculating the points before, is that it cuts out 
having to calculate every frame just before you print it, so 
halfing the time taken to draw each frame, this makes bloody fast 
vectors, but you are stuck with the finanl animation, you can't 
move the object in real-time, so this kind of routine is great 
for demo's where the object just spins round in a loop, but for a 
true vector game you would need to calculate the objects 
position every time you moved.

The important bits are as follows...

there are 3 routines starting at lines 890,1000 and 2000
these routines calculate the rotations of the object through the 
x,y and z axis.

At the start of the program there are lots of data statements - 
these are the x,y,z coords for every point on the object.

at line 5000 you will find the playback routines, the wave form 
is played fowards then backwards unil you ctrl-c or press mouse 
button.
 To draw the 2 parallel planes I have told the computer to join 
specific points together, but you could change it to draw a full 
cube, or just 8 points( this one would run too fast to see when 
compiled!)

At line 700 you will see that set numbers are added to za,xa, and 
ya, these 3 vars. are the angle of rotatin for use in the 
routines stated above (890 and all that jazz), the result of 
adding a set nember to each is that when running the object 
tumbles through 'space'.

Oh well must dash now........I hope you get somewhere with these 
wicked vectors.

Eddie 1121991...........ah-YEAH!} 

